<Type Name="MediaStore" FullName="Android.Provider.MediaStore">
  <TypeSignature Language="C#" Value="public sealed class MediaStore : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MediaStore extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Provider.MediaStore" />
  <TypeSignature Language="F#" Value="type MediaStore = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/provider/MediaStore", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/provider/MediaStore", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The contract between the media provider and applications.</summary>
    <remarks>
      <para>The contract between the media provider and applications. Contains
            definitions for the supported URIs and columns.</para>
      <para>The media provider provides an indexed collection of common media types, such
            as <c>Audio</c>, <c>Video</c>, and <c>Images</c>, from any attached
            storage devices. Each collection is organized based on the primary MIME type
            of the underlying content; for example, <c>image/*</c> content is indexed
            under <c>Images</c>. The <c>Files</c> collection provides a broad view
            across all collections, and does not filter by MIME type.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/provider/MediaStore" title="Reference documentation">Java documentation for <code>android.provider.MediaStore</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaStore ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.MediaStore.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AccessMediaOwnerPackageNamePermission">
      <MemberSignature Language="C#" Value="public const string AccessMediaOwnerPackageNamePermission;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string AccessMediaOwnerPackageNamePermission" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.AccessMediaOwnerPackageNamePermission" />
      <MemberSignature Language="F#" Value="val mutable AccessMediaOwnerPackageNamePermission : string" Usage="Android.Provider.MediaStore.AccessMediaOwnerPackageNamePermission" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[Android.Runtime.Register("ACCESS_MEDIA_OWNER_PACKAGE_NAME_PERMISSION", ApiSince=35)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACCESS_MEDIA_OWNER_PACKAGE_NAME_PERMISSION", ApiSince=35)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android35.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android35.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Permission that grants access to <c>MediaColumns#OWNER_PACKAGE_NAME</c>
            of every accessible media file.</summary>
        <remarks>
          <para>Permission that grants access to <c>MediaColumns#OWNER_PACKAGE_NAME</c>
            of every accessible media file.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#ACCESS_MEDIA_OWNER_PACKAGE_NAME_PERMISSION" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.ACCESS_MEDIA_OWNER_PACKAGE_NAME_PERMISSION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionImageCapture">
      <MemberSignature Language="C#" Value="public const string ActionImageCapture;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionImageCapture" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ActionImageCapture" />
      <MemberSignature Language="F#" Value="val mutable ActionImageCapture : string" Usage="Android.Provider.MediaStore.ActionImageCapture" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_IMAGE_CAPTURE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_IMAGE_CAPTURE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard Intent action that can be sent to have the camera application
            capture an image and return it.</summary>
        <remarks>
          <para>Standard Intent action that can be sent to have the camera application
            capture an image and return it.</para>
          <para>The caller may pass an extra EXTRA_OUTPUT to control where this image will be written.
            If the EXTRA_OUTPUT is not present, then a small sized image is returned as a Bitmap
            object in the extra field. This is useful for applications that only need a small image.
            If the EXTRA_OUTPUT is present, then the full-sized image will be written to the Uri
            value of EXTRA_OUTPUT.
            As of <c>android.os.Build.VERSION_CODES#LOLLIPOP</c>, this uri can also be supplied through
            <c>android.content.Intent#setClipData(ClipData)</c>. If using this approach, you still must
            supply the uri through the EXTRA_OUTPUT field for compatibility with old applications.
            If you don't set a ClipData, it will be copied there for you when calling
            <c>Context#startActivity(Intent)</c>.</para>
          <para>Regardless of whether or not EXTRA_OUTPUT is present, when an image is captured via this
            intent, <c>android.hardware.Camera#ACTION_NEW_PICTURE</c> won't be broadcasted.</para>
          <para>Note: if you app targets <c>android.os.Build.VERSION_CODES#M M</c> and above
            and declares as using the <c>android.Manifest.permission#CAMERA</c> permission which
            is not granted, then attempting to use this action will result in a <c>java.lang.SecurityException</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#ACTION_IMAGE_CAPTURE" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.ACTION_IMAGE_CAPTURE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="F:Android.Provider.MediaStore.ExtraOutput" />
      </Docs>
    </Member>
    <Member MemberName="ActionImageCaptureSecure">
      <MemberSignature Language="C#" Value="public const string ActionImageCaptureSecure;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionImageCaptureSecure" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ActionImageCaptureSecure" />
      <MemberSignature Language="F#" Value="val mutable ActionImageCaptureSecure : string" Usage="Android.Provider.MediaStore.ActionImageCaptureSecure" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_IMAGE_CAPTURE_SECURE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_IMAGE_CAPTURE_SECURE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Intent action that can be sent to have the camera application capture an image and return
            it when the device is secured (e.</summary>
        <remarks>
          <para>Intent action that can be sent to have the camera application capture an image and return
            it when the device is secured (e.g. with a pin, password, pattern, or face unlock).
            Applications responding to this intent must not expose any personal content like existing
            photos or videos on the device. The applications should be careful not to share any photo
            or video with other applications or Internet. The activity should use <c>Activity#setShowWhenLocked</c> to display on top of the
            lock screen while secured. There is no activity stack when this flag is used, so
            launching more than one activity is strongly discouraged.</para>
          <para>The caller may pass an extra EXTRA_OUTPUT to control where this image will be written.
            If the EXTRA_OUTPUT is not present, then a small sized image is returned as a Bitmap
            object in the extra field. This is useful for applications that only need a small image.
            If the EXTRA_OUTPUT is present, then the full-sized image will be written to the Uri
            value of EXTRA_OUTPUT.
            As of <c>android.os.Build.VERSION_CODES#LOLLIPOP</c>, this uri can also be supplied through
            <c>android.content.Intent#setClipData(ClipData)</c>. If using this approach, you still must
            supply the uri through the EXTRA_OUTPUT field for compatibility with old applications.
            If you don't set a ClipData, it will be copied there for you when calling
            <c>Context#startActivity(Intent)</c>.</para>
          <para>Regardless of whether or not EXTRA_OUTPUT is present, when an image is captured via this
            intent, <c>android.hardware.Camera#ACTION_NEW_PICTURE</c> won't be broadcasted.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#ACTION_IMAGE_CAPTURE_SECURE" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.ACTION_IMAGE_CAPTURE_SECURE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="F:Android.Provider.MediaStore.ActionImageCapture" />
        <altmember cref="F:Android.Provider.MediaStore.ExtraOutput" />
      </Docs>
    </Member>
    <Member MemberName="ActionPickImages">
      <MemberSignature Language="C#" Value="public const string ActionPickImages;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionPickImages" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ActionPickImages" />
      <MemberSignature Language="F#" Value="val mutable ActionPickImages : string" Usage="Android.Provider.MediaStore.ActionPickImages" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_PICK_IMAGES", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_PICK_IMAGES", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity Action: Allow the user to select images or videos provided by system and return it.</summary>
        <remarks>
          <para>Activity Action: Allow the user to select images or videos provided by system and return it.
            This is different than <c>Intent#ACTION_PICK</c> and <c>Intent#ACTION_GET_CONTENT</c> in
            that
            
            &lt;ul&gt;
              &lt;li&gt;the data for this action is provided by the system
              &lt;li&gt;this action is only used for picking images and videos
              &lt;li&gt;caller gets read access to user picked items even without storage permissions
            &lt;/ul&gt;</para>
          <para>Callers can optionally specify MIME type (such as <c>image/*</c> or <c>video/*</c>),
            resulting in a range of content selection that the caller is interested in. The optional MIME
            type can be requested with <c>Intent#setType(String)</c>.</para>
          <para>If the caller needs multiple returned items (or caller wants to allow multiple selection),
            then it can specify <c>MediaStore#EXTRA_PICK_IMAGES_MAX</c> to indicate this.</para>
          <para>When the caller requests multiple selection, the value of <c>MediaStore#EXTRA_PICK_IMAGES_MAX</c> must be a positive integer greater than 1 and less than or
            equal to <c>MediaStore#getPickImagesMaxLimit</c>, otherwise <c>Activity#RESULT_CANCELED</c>
            is returned. Use <c>MediaStore#EXTRA_PICK_IMAGES_IN_ORDER</c> in multiple selection mode to
            allow the user to pick images in order.</para>
          <para>Callers may use <c>Intent#EXTRA_LOCAL_ONLY</c> to limit content selection to local data.</para>
          <para>Output: MediaStore content URI(s) of the item(s) that was picked. Unlike other MediaStore
            URIs, these are referred to as 'picker' URIs and expose a limited set of read-only
            operations. Specifically, picker URIs can only be opened for read and queried for columns in
            <c>PickerMediaColumns</c>.</para>
          <para>Before this API, apps could use <c>Intent#ACTION_GET_CONTENT</c>. However, <c>#ACTION_PICK_IMAGES</c> is now the recommended option for images and videos, since it offers a
            better user experience.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#ACTION_PICK_IMAGES" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.ACTION_PICK_IMAGES</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionPickImagesSettings">
      <MemberSignature Language="C#" Value="public const string ActionPickImagesSettings;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionPickImagesSettings" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ActionPickImagesSettings" />
      <MemberSignature Language="F#" Value="val mutable ActionPickImagesSettings : string" Usage="Android.Provider.MediaStore.ActionPickImagesSettings" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_PICK_IMAGES_SETTINGS", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_PICK_IMAGES_SETTINGS", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity Action: Launch settings controlling images or videos selection with
            <c>#ACTION_PICK_IMAGES</c>.</summary>
        <remarks>
          <para>Activity Action: Launch settings controlling images or videos selection with
            <c>#ACTION_PICK_IMAGES</c>.
            
            The settings page allows a user to change the enabled <c>CloudMediaProvider</c> on the
            device and other media selection configurations.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#ACTION_PICK_IMAGES_SETTINGS" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.ACTION_PICK_IMAGES_SETTINGS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionReview">
      <MemberSignature Language="C#" Value="public const string ActionReview;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionReview" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ActionReview" />
      <MemberSignature Language="F#" Value="val mutable ActionReview : string" Usage="Android.Provider.MediaStore.ActionReview" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_REVIEW", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_REVIEW", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard action that can be sent to review the given media file.</summary>
        <remarks>
          <para>Standard action that can be sent to review the given media file.</para>
          <para>The launched application is expected to provide a large-scale view of the
            given media file, while allowing the user to quickly access other
            recently captured media files.</para>
          <para>Input: <c>Intent#getData</c> is URI of the primary media item to
            initially display.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#ACTION_REVIEW" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.ACTION_REVIEW</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionReviewSecure">
      <MemberSignature Language="C#" Value="public const string ActionReviewSecure;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionReviewSecure" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ActionReviewSecure" />
      <MemberSignature Language="F#" Value="val mutable ActionReviewSecure : string" Usage="Android.Provider.MediaStore.ActionReviewSecure" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_REVIEW_SECURE", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_REVIEW_SECURE", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard action that can be sent to review the given media file when the
            device is secured (e.</summary>
        <remarks>
          <para>Standard action that can be sent to review the given media file when the
            device is secured (e.g. with a pin, password, pattern, or face unlock).
            The applications should be careful not to share any media with other
            applications or Internet. The activity should use
            <c>Activity#setShowWhenLocked</c> to display on top of the lock screen
            while secured. There is no activity stack when this flag is used, so
            launching more than one activity is strongly discouraged.</para>
          <para>The launched application is expected to provide a large-scale view of the
            given primary media file, while only allowing the user to quickly access
            other media from an explicit secondary list.</para>
          <para>Input: <c>Intent#getData</c> is URI of the primary media item to
            initially display. <c>Intent#getClipData</c> is the limited list of
            secondary media items that the user is allowed to review. If
            <c>Intent#getClipData</c> is undefined, then no other media access
            should be allowed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#ACTION_REVIEW_SECURE" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.ACTION_REVIEW_SECURE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionVideoCapture">
      <MemberSignature Language="C#" Value="public const string ActionVideoCapture;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionVideoCapture" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ActionVideoCapture" />
      <MemberSignature Language="F#" Value="val mutable ActionVideoCapture : string" Usage="Android.Provider.MediaStore.ActionVideoCapture" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_VIDEO_CAPTURE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_VIDEO_CAPTURE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard Intent action that can be sent to have the camera application
            capture a video and return it.</summary>
        <remarks>
          <para>Standard Intent action that can be sent to have the camera application
            capture a video and return it.</para>
          <para>The caller may pass in an extra EXTRA_VIDEO_QUALITY to control the video quality.</para>
          <para>The caller may pass in an extra EXTRA_OUTPUT to control
            where the video is written.
            &lt;ul&gt;
            &lt;li&gt;If EXTRA_OUTPUT is not present, the video will be written to the standard location
            for videos, and the Uri of that location will be returned in the data field of the Uri.
            <c>android.hardware.Camera#ACTION_NEW_VIDEO</c> will also be broadcasted when the video
            is recorded.
            &lt;li&gt;If EXTRA_OUTPUT is assigned a Uri value, no
            <c>android.hardware.Camera#ACTION_NEW_VIDEO</c> will be broadcasted. As of
            <c>android.os.Build.VERSION_CODES#LOLLIPOP</c>, this uri can also be
            supplied through <c>android.content.Intent#setClipData(ClipData)</c>.  If using this
            approach, you still must supply the uri through the EXTRA_OUTPUT field for compatibility
            with old applications. If you don't set a ClipData, it will be copied there for you when
            calling <c>Context#startActivity(Intent)</c>.
            &lt;/ul&gt;</para>
          <para>Note: if you app targets <c>android.os.Build.VERSION_CODES#M M</c> and above
            and declares as using the <c>android.Manifest.permission#CAMERA</c> permission which
            is not granted, then atempting to use this action will result in a <c>java.lang.SecurityException</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#ACTION_VIDEO_CAPTURE" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.ACTION_VIDEO_CAPTURE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="F:Android.Provider.MediaStore.ExtraOutput" />
        <altmember cref="F:Android.Provider.MediaStore.ExtraVideoQuality" />
        <altmember cref="F:Android.Provider.MediaStore.ExtraSizeLimit" />
        <altmember cref="F:Android.Provider.MediaStore.ExtraDurationLimit" />
      </Docs>
    </Member>
    <Member MemberName="Authority">
      <MemberSignature Language="C#" Value="public const string Authority;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Authority" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.Authority" />
      <MemberSignature Language="F#" Value="val mutable Authority : string" Usage="Android.Provider.MediaStore.Authority" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUTHORITY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUTHORITY")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The authority for the media provider</summary>
        <remarks>
          <para>The authority for the media provider</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#AUTHORITY" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.AUTHORITY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AuthorityUri">
      <MemberSignature Language="C#" Value="public static Android.Net.Uri AuthorityUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.Uri AuthorityUri" />
      <MemberSignature Language="DocId" Value="P:Android.Provider.MediaStore.AuthorityUri" />
      <MemberSignature Language="F#" Value="static member AuthorityUri : Android.Net.Uri" Usage="Android.Provider.MediaStore.AuthorityUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUTHORITY_URI", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUTHORITY_URI", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A content:// style uri to the authority for the media provider</summary>
        <value>To be added.</value>
        <remarks>
          <para>A content:// style uri to the authority for the media provider</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#AUTHORITY_URI" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.AUTHORITY_URI</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanManageMedia">
      <MemberSignature Language="C#" Value="public static bool CanManageMedia (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanManageMedia(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.MediaStore.CanManageMedia(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member CanManageMedia : Android.Content.Context -&gt; bool" Usage="Android.Provider.MediaStore.CanManageMedia context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("canManageMedia", "(Landroid/content/Context;)Z", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("canManageMedia", "(Landroid/content/Context;)Z", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">the request context</param>
        <summary>Returns whether the calling app is granted <c>android.Manifest.permission#MANAGE_MEDIA</c>
            or not.</summary>
        <returns>true, the calling app is granted the permission. Otherwise, false</returns>
        <remarks>
          <para>Returns whether the calling app is granted <c>android.Manifest.permission#MANAGE_MEDIA</c>
            or not.</para>
          <para>Declaring the permission <c>android.Manifest.permission#MANAGE_MEDIA</c> isn't
            enough to gain the access.</para>
          <para>To request access, use <c>android.provider.Settings#ACTION_REQUEST_MANAGE_MEDIA</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#canManageMedia(android.content.Context)" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.canManageMedia(android.content.Context)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDeleteRequest">
      <MemberSignature Language="C#" Value="public static Android.App.PendingIntent CreateDeleteRequest (Android.Content.ContentResolver resolver, System.Collections.Generic.ICollection&lt;Android.Net.Uri&gt; uris);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.PendingIntent CreateDeleteRequest(class Android.Content.ContentResolver resolver, class System.Collections.Generic.ICollection`1&lt;class Android.Net.Uri&gt; uris) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.MediaStore.CreateDeleteRequest(Android.Content.ContentResolver,System.Collections.Generic.ICollection{Android.Net.Uri})" />
      <MemberSignature Language="F#" Value="static member CreateDeleteRequest : Android.Content.ContentResolver * System.Collections.Generic.ICollection&lt;Android.Net.Uri&gt; -&gt; Android.App.PendingIntent" Usage="Android.Provider.MediaStore.CreateDeleteRequest (resolver, uris)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createDeleteRequest", "(Landroid/content/ContentResolver;Ljava/util/Collection;)Landroid/app/PendingIntent;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createDeleteRequest", "(Landroid/content/ContentResolver;Ljava/util/Collection;)Landroid/app/PendingIntent;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolver" Type="Android.Content.ContentResolver" />
        <Parameter Name="uris" Type="System.Collections.Generic.ICollection&lt;Android.Net.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="resolver">Used to connect with <c>MediaStore#AUTHORITY</c>.
                       Typically this value is <c>Context#getContentResolver()</c>,
                       but if you need more explicit lifecycle controls, you can
                       obtain a <c>ContentProviderClient</c> and wrap it using
                       <c>ContentResolver#wrap(ContentProviderClient)</c>.</param>
        <param name="uris">The set of media items to include in this request. Each item
                       must be hosted by <c>MediaStore#AUTHORITY</c> and must
                       reference a specific media item by <c>BaseColumns#_ID</c>.</param>
        <summary>Create a <c>PendingIntent</c> that will prompt the user to permanently
            delete the requested media items.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Create a <c>PendingIntent</c> that will prompt the user to permanently
            delete the requested media items. When the user approves this request,
            <c>ContentResolver#delete</c> will be called on these items.</para>
          <para>This call only generates the request for a prompt; to display the prompt,
            call <c>Activity#startIntentSenderForResult</c> with
            <c>PendingIntent#getIntentSender()</c>. You can then determine if the
            user granted your request by testing for <c>Activity#RESULT_OK</c> in
            <c>Activity#onActivityResult</c>. The requested operation will have
            completely finished before this activity result is delivered.</para>
          <para>The displayed prompt will reflect all the media items you're requesting,
            including those for which you already hold write access. If you want to
            determine if you already hold write access before requesting access, use
            <c>Context#checkUriPermission(Uri, int, int, int)</c> with
            <c>Intent#FLAG_GRANT_WRITE_URI_PERMISSION</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#createDeleteRequest(android.content.ContentResolver,%20java.util.Collection%3Candroid.net.Uri%3E)" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.createDeleteRequest(android.content.ContentResolver, java.util.Collection&lt;android.net.Uri&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFavoriteRequest">
      <MemberSignature Language="C#" Value="public static Android.App.PendingIntent CreateFavoriteRequest (Android.Content.ContentResolver resolver, System.Collections.Generic.ICollection&lt;Android.Net.Uri&gt; uris, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.PendingIntent CreateFavoriteRequest(class Android.Content.ContentResolver resolver, class System.Collections.Generic.ICollection`1&lt;class Android.Net.Uri&gt; uris, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.MediaStore.CreateFavoriteRequest(Android.Content.ContentResolver,System.Collections.Generic.ICollection{Android.Net.Uri},System.Boolean)" />
      <MemberSignature Language="F#" Value="static member CreateFavoriteRequest : Android.Content.ContentResolver * System.Collections.Generic.ICollection&lt;Android.Net.Uri&gt; * bool -&gt; Android.App.PendingIntent" Usage="Android.Provider.MediaStore.CreateFavoriteRequest (resolver, uris, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createFavoriteRequest", "(Landroid/content/ContentResolver;Ljava/util/Collection;Z)Landroid/app/PendingIntent;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createFavoriteRequest", "(Landroid/content/ContentResolver;Ljava/util/Collection;Z)Landroid/app/PendingIntent;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolver" Type="Android.Content.ContentResolver" />
        <Parameter Name="uris" Type="System.Collections.Generic.ICollection&lt;Android.Net.Uri&gt;" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="resolver">Used to connect with <c>MediaStore#AUTHORITY</c>.
                       Typically this value is <c>Context#getContentResolver()</c>,
                       but if you need more explicit lifecycle controls, you can
                       obtain a <c>ContentProviderClient</c> and wrap it using
                       <c>ContentResolver#wrap(ContentProviderClient)</c>.</param>
        <param name="uris">The set of media items to include in this request. Each item
                       must be hosted by <c>MediaStore#AUTHORITY</c> and must
                       reference a specific media item by <c>BaseColumns#_ID</c>.</param>
        <param name="value">The <c>MediaColumns#IS_FAVORITE</c> value to apply.</param>
        <summary>Create a <c>PendingIntent</c> that will prompt the user to favorite the
            requested media items.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Create a <c>PendingIntent</c> that will prompt the user to favorite the
            requested media items. When the user approves this request,
            <c>MediaColumns#IS_FAVORITE</c> is set on these items.</para>
          <para>This call only generates the request for a prompt; to display the prompt,
            call <c>Activity#startIntentSenderForResult</c> with
            <c>PendingIntent#getIntentSender()</c>. You can then determine if the
            user granted your request by testing for <c>Activity#RESULT_OK</c> in
            <c>Activity#onActivityResult</c>. The requested operation will have
            completely finished before this activity result is delivered.</para>
          <para>The displayed prompt will reflect all the media items you're requesting,
            including those for which you already hold write access. If you want to
            determine if you already hold write access before requesting access, use
            <c>Context#checkUriPermission(Uri, int, int, int)</c> with
            <c>Intent#FLAG_GRANT_WRITE_URI_PERMISSION</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#createFavoriteRequest(android.content.ContentResolver,%20java.util.Collection%3Candroid.net.Uri%3E,%20boolean)" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.createFavoriteRequest(android.content.ContentResolver, java.util.Collection&lt;android.net.Uri&gt;, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTrashRequest">
      <MemberSignature Language="C#" Value="public static Android.App.PendingIntent CreateTrashRequest (Android.Content.ContentResolver resolver, System.Collections.Generic.ICollection&lt;Android.Net.Uri&gt; uris, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.PendingIntent CreateTrashRequest(class Android.Content.ContentResolver resolver, class System.Collections.Generic.ICollection`1&lt;class Android.Net.Uri&gt; uris, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.MediaStore.CreateTrashRequest(Android.Content.ContentResolver,System.Collections.Generic.ICollection{Android.Net.Uri},System.Boolean)" />
      <MemberSignature Language="F#" Value="static member CreateTrashRequest : Android.Content.ContentResolver * System.Collections.Generic.ICollection&lt;Android.Net.Uri&gt; * bool -&gt; Android.App.PendingIntent" Usage="Android.Provider.MediaStore.CreateTrashRequest (resolver, uris, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createTrashRequest", "(Landroid/content/ContentResolver;Ljava/util/Collection;Z)Landroid/app/PendingIntent;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createTrashRequest", "(Landroid/content/ContentResolver;Ljava/util/Collection;Z)Landroid/app/PendingIntent;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolver" Type="Android.Content.ContentResolver" />
        <Parameter Name="uris" Type="System.Collections.Generic.ICollection&lt;Android.Net.Uri&gt;" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="resolver">Used to connect with <c>MediaStore#AUTHORITY</c>.
                       Typically this value is <c>Context#getContentResolver()</c>,
                       but if you need more explicit lifecycle controls, you can
                       obtain a <c>ContentProviderClient</c> and wrap it using
                       <c>ContentResolver#wrap(ContentProviderClient)</c>.</param>
        <param name="uris">The set of media items to include in this request. Each item
                       must be hosted by <c>MediaStore#AUTHORITY</c> and must
                       reference a specific media item by <c>BaseColumns#_ID</c>.</param>
        <param name="value">The <c>MediaColumns#IS_TRASHED</c> value to apply.</param>
        <summary>Create a <c>PendingIntent</c> that will prompt the user to trash the
            requested media items.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Create a <c>PendingIntent</c> that will prompt the user to trash the
            requested media items. When the user approves this request,
            <c>MediaColumns#IS_TRASHED</c> is set on these items.</para>
          <para>This call only generates the request for a prompt; to display the prompt,
            call <c>Activity#startIntentSenderForResult</c> with
            <c>PendingIntent#getIntentSender()</c>. You can then determine if the
            user granted your request by testing for <c>Activity#RESULT_OK</c> in
            <c>Activity#onActivityResult</c>. The requested operation will have
            completely finished before this activity result is delivered.</para>
          <para>The displayed prompt will reflect all the media items you're requesting,
            including those for which you already hold write access. If you want to
            determine if you already hold write access before requesting access, use
            <c>Context#checkUriPermission(Uri, int, int, int)</c> with
            <c>Intent#FLAG_GRANT_WRITE_URI_PERMISSION</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#createTrashRequest(android.content.ContentResolver,%20java.util.Collection%3Candroid.net.Uri%3E,%20boolean)" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.createTrashRequest(android.content.ContentResolver, java.util.Collection&lt;android.net.Uri&gt;, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWriteRequest">
      <MemberSignature Language="C#" Value="public static Android.App.PendingIntent CreateWriteRequest (Android.Content.ContentResolver resolver, System.Collections.Generic.ICollection&lt;Android.Net.Uri&gt; uris);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.PendingIntent CreateWriteRequest(class Android.Content.ContentResolver resolver, class System.Collections.Generic.ICollection`1&lt;class Android.Net.Uri&gt; uris) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.MediaStore.CreateWriteRequest(Android.Content.ContentResolver,System.Collections.Generic.ICollection{Android.Net.Uri})" />
      <MemberSignature Language="F#" Value="static member CreateWriteRequest : Android.Content.ContentResolver * System.Collections.Generic.ICollection&lt;Android.Net.Uri&gt; -&gt; Android.App.PendingIntent" Usage="Android.Provider.MediaStore.CreateWriteRequest (resolver, uris)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createWriteRequest", "(Landroid/content/ContentResolver;Ljava/util/Collection;)Landroid/app/PendingIntent;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createWriteRequest", "(Landroid/content/ContentResolver;Ljava/util/Collection;)Landroid/app/PendingIntent;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolver" Type="Android.Content.ContentResolver" />
        <Parameter Name="uris" Type="System.Collections.Generic.ICollection&lt;Android.Net.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="resolver">Used to connect with <c>MediaStore#AUTHORITY</c>.
                       Typically this value is <c>Context#getContentResolver()</c>,
                       but if you need more explicit lifecycle controls, you can
                       obtain a <c>ContentProviderClient</c> and wrap it using
                       <c>ContentResolver#wrap(ContentProviderClient)</c>.</param>
        <param name="uris">The set of media items to include in this request. Each item
                       must be hosted by <c>MediaStore#AUTHORITY</c> and must
                       reference a specific media item by <c>BaseColumns#_ID</c>.</param>
        <summary>Create a <c>PendingIntent</c> that will prompt the user to grant your
            app write access for the requested media items.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Create a <c>PendingIntent</c> that will prompt the user to grant your
            app write access for the requested media items.</para>
          <para>This call only generates the request for a prompt; to display the prompt,
            call <c>Activity#startIntentSenderForResult</c> with
            <c>PendingIntent#getIntentSender()</c>. You can then determine if the
            user granted your request by testing for <c>Activity#RESULT_OK</c> in
            <c>Activity#onActivityResult</c>. The requested operation will have
            completely finished before this activity result is delivered.</para>
          <para>Permissions granted through this mechanism are tied to the lifecycle of
            the <c>Activity</c> that requests them. If you need to retain
            longer-term access for background actions, you can place items into a
            <c>ClipData</c> or <c>Intent</c> which can then be passed to
            <c>Context#startService</c> or
            <c>android.app.job.JobInfo.Builder#setClipData</c>. Be sure to include
            any relevant access modes you want to retain, such as
            <c>Intent#FLAG_GRANT_WRITE_URI_PERMISSION</c>.</para>
          <para>The displayed prompt will reflect all the media items you're requesting,
            including those for which you already hold write access. If you want to
            determine if you already hold write access before requesting access, use
            <c>Context#checkUriPermission(Uri, int, int, int)</c> with
            <c>Intent#FLAG_GRANT_WRITE_URI_PERMISSION</c>.</para>
          <para>For security and performance reasons this method does not support
            <c>Intent#FLAG_GRANT_PERSISTABLE_URI_PERMISSION</c> or
            <c>Intent#FLAG_GRANT_PREFIX_URI_PERMISSION</c>.</para>
          <para>The write access granted through this request is general-purpose, and
            once obtained you can directly <c>ContentResolver#update</c> columns
            like <c>MediaColumns#IS_FAVORITE</c>, <c>MediaColumns#IS_TRASHED</c>,
            or <c>ContentResolver#delete</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#createWriteRequest(android.content.ContentResolver,%20java.util.Collection%3Candroid.net.Uri%3E)" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.createWriteRequest(android.content.ContentResolver, java.util.Collection&lt;android.net.Uri&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraAcceptOriginalMediaFormat">
      <MemberSignature Language="C#" Value="public const string ExtraAcceptOriginalMediaFormat;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraAcceptOriginalMediaFormat" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ExtraAcceptOriginalMediaFormat" />
      <MemberSignature Language="F#" Value="val mutable ExtraAcceptOriginalMediaFormat : string" Usage="Android.Provider.MediaStore.ExtraAcceptOriginalMediaFormat" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_ACCEPT_ORIGINAL_MEDIA_FORMAT", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_ACCEPT_ORIGINAL_MEDIA_FORMAT", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specify that the caller wants to receive the original media format without transcoding.</summary>
        <remarks>
          <para>Specify that the caller wants to receive the original media format without transcoding.
            
            &lt;b&gt;Caution: using this flag can cause app
            compatibility issues whenever Android adds support for new media formats.&lt;/b&gt;
            Clients should instead specify their supported media capabilities explicitly
            in their manifest or with the <c>#EXTRA_MEDIA_CAPABILITIES</c><c>open</c> flag.
            
            This option is useful for apps that don't attempt to parse the actual byte contents of media
            files, such as playback using <c>MediaPlayer</c> or for off-device backup. Note that the
            <c>android.Manifest.permission#ACCESS_MEDIA_LOCATION</c> permission will still be required
            to avoid sensitive metadata redaction, similar to <c>#setRequireOriginal(Uri)</c>.
            &lt;/ul&gt;
            
            Note that this flag overrides any explicitly declared <c>media_capabilities.xml</c> or
            <c>ApplicationMediaCapabilities</c> extras specified in the same <c>open</c> request.</para>
          <para>This option can be added to the <c>opts</c><c>Bundle</c> in various
            <c>ContentResolver</c><c>open</c> methods.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#EXTRA_ACCEPT_ORIGINAL_MEDIA_FORMAT" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.EXTRA_ACCEPT_ORIGINAL_MEDIA_FORMAT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraBrightness">
      <MemberSignature Language="C#" Value="public const string ExtraBrightness;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraBrightness" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ExtraBrightness" />
      <MemberSignature Language="F#" Value="val mutable ExtraBrightness : string" Usage="Android.Provider.MediaStore.ExtraBrightness" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_BRIGHTNESS", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_BRIGHTNESS", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When defined, the launched application is requested to set the given
            brightness value via
            <c>android.view.WindowManager.LayoutParams#screenBrightness</c> to help
            ensure a smooth transition when launching <c>#ACTION_REVIEW</c> or
            <c>#ACTION_REVIEW_SECURE</c> intents.</summary>
        <remarks>
          <para>When defined, the launched application is requested to set the given
            brightness value via
            <c>android.view.WindowManager.LayoutParams#screenBrightness</c> to help
            ensure a smooth transition when launching <c>#ACTION_REVIEW</c> or
            <c>#ACTION_REVIEW_SECURE</c> intents.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#EXTRA_BRIGHTNESS" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.EXTRA_BRIGHTNESS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraDurationLimit">
      <MemberSignature Language="C#" Value="public const string ExtraDurationLimit;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraDurationLimit" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ExtraDurationLimit" />
      <MemberSignature Language="F#" Value="val mutable ExtraDurationLimit : string" Usage="Android.Provider.MediaStore.ExtraDurationLimit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_DURATION_LIMIT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_DURATION_LIMIT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specify the maximum allowed recording duration in seconds.</summary>
        <remarks>
          <para>Specify the maximum allowed recording duration in seconds.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#EXTRA_DURATION_LIMIT" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.EXTRA_DURATION_LIMIT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ExtraFinishOnCompletion">
      <MemberSignature Language="C#" Value="public const string ExtraFinishOnCompletion;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraFinishOnCompletion" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ExtraFinishOnCompletion" />
      <MemberSignature Language="F#" Value="val mutable ExtraFinishOnCompletion : string" Usage="Android.Provider.MediaStore.ExtraFinishOnCompletion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_FINISH_ON_COMPLETION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_FINISH_ON_COMPLETION")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent-extra used to control the onCompletion behavior of a MovieView.</summary>
        <remarks>
          <para>The name of the Intent-extra used to control the onCompletion behavior of a MovieView. This
            is a boolean property that specifies whether or not to finish the MovieView activity when the
            movie completes playing. The default value is true, which means to automatically exit the
            movie player activity when the movie completes playing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#EXTRA_FINISH_ON_COMPLETION" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.EXTRA_FINISH_ON_COMPLETION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ExtraFullScreen">
      <MemberSignature Language="C#" Value="public const string ExtraFullScreen;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraFullScreen" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ExtraFullScreen" />
      <MemberSignature Language="F#" Value="val mutable ExtraFullScreen : string" Usage="Android.Provider.MediaStore.ExtraFullScreen" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_FULL_SCREEN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_FULL_SCREEN")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of an Intent-extra used to control the UI of a ViewImage.</summary>
        <remarks>
          <para>The name of an Intent-extra used to control the UI of a ViewImage.
            This is a boolean property that overrides the activity's default fullscreen state.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#EXTRA_FULL_SCREEN" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.EXTRA_FULL_SCREEN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ExtraMediaAlbum">
      <MemberSignature Language="C#" Value="public const string ExtraMediaAlbum;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraMediaAlbum" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ExtraMediaAlbum" />
      <MemberSignature Language="F#" Value="val mutable ExtraMediaAlbum : string" Usage="Android.Provider.MediaStore.ExtraMediaAlbum" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_MEDIA_ALBUM")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_MEDIA_ALBUM")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent-extra used to define the album</summary>
        <remarks>
          <para>The name of the Intent-extra used to define the album</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#EXTRA_MEDIA_ALBUM" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.EXTRA_MEDIA_ALBUM</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ExtraMediaArtist">
      <MemberSignature Language="C#" Value="public const string ExtraMediaArtist;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraMediaArtist" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ExtraMediaArtist" />
      <MemberSignature Language="F#" Value="val mutable ExtraMediaArtist : string" Usage="Android.Provider.MediaStore.ExtraMediaArtist" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_MEDIA_ARTIST")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_MEDIA_ARTIST")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent-extra used to define the artist</summary>
        <remarks>
          <para>The name of the Intent-extra used to define the artist</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#EXTRA_MEDIA_ARTIST" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.EXTRA_MEDIA_ARTIST</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ExtraMediaCapabilities">
      <MemberSignature Language="C#" Value="public const string ExtraMediaCapabilities;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraMediaCapabilities" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ExtraMediaCapabilities" />
      <MemberSignature Language="F#" Value="val mutable ExtraMediaCapabilities : string" Usage="Android.Provider.MediaStore.ExtraMediaCapabilities" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_MEDIA_CAPABILITIES", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_MEDIA_CAPABILITIES", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specify the <c>ApplicationMediaCapabilities</c> that should be used while opening a media.</summary>
        <remarks>
          <para>Specify the <c>ApplicationMediaCapabilities</c> that should be used while opening a media.
            
            If the capabilities specified matches the format of the original file, the app will receive
            the original file, otherwise, it will get transcoded to a default supported format.
            
            This flag takes higher precedence over the applications declared
            <c>media_capabilities.xml</c> and is useful for apps that want to have more granular control
            over their supported media capabilities.</para>
          <para>This option can be added to the <c>opts</c><c>Bundle</c> in various
            <c>ContentResolver</c><c>open</c> methods.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#EXTRA_MEDIA_CAPABILITIES" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.EXTRA_MEDIA_CAPABILITIES</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraMediaCapabilitiesUid">
      <MemberSignature Language="C#" Value="public const string ExtraMediaCapabilitiesUid;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraMediaCapabilitiesUid" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ExtraMediaCapabilitiesUid" />
      <MemberSignature Language="F#" Value="val mutable ExtraMediaCapabilitiesUid : string" Usage="Android.Provider.MediaStore.ExtraMediaCapabilitiesUid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_MEDIA_CAPABILITIES_UID", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_MEDIA_CAPABILITIES_UID", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specify the UID of the app that should be used to determine supported media capabilities
            while opening a media.</summary>
        <remarks>
          <para>Specify the UID of the app that should be used to determine supported media capabilities
            while opening a media.</para>
          <para>If this specified UID is found to be capable of handling the original media file format, the
            app will receive the original file, otherwise, the file will get transcoded to a default
            format supported by the specified UID.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#EXTRA_MEDIA_CAPABILITIES_UID" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.EXTRA_MEDIA_CAPABILITIES_UID</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraMediaFocus">
      <MemberSignature Language="C#" Value="public const string ExtraMediaFocus;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraMediaFocus" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ExtraMediaFocus" />
      <MemberSignature Language="F#" Value="val mutable ExtraMediaFocus : string" Usage="Android.Provider.MediaStore.ExtraMediaFocus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_MEDIA_FOCUS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_MEDIA_FOCUS")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent-extra used to define the search focus.</summary>
        <remarks>
          <para>The name of the Intent-extra used to define the search focus. The search focus
            indicates whether the search should be for things related to the artist, album
            or song that is identified by the other extras.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#EXTRA_MEDIA_FOCUS" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.EXTRA_MEDIA_FOCUS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ExtraMediaGenre">
      <MemberSignature Language="C#" Value="public const string ExtraMediaGenre;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraMediaGenre" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ExtraMediaGenre" />
      <MemberSignature Language="F#" Value="val mutable ExtraMediaGenre : string" Usage="Android.Provider.MediaStore.ExtraMediaGenre" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_MEDIA_GENRE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_MEDIA_GENRE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent-extra used to define the genre.</summary>
        <remarks>
          <para>The name of the Intent-extra used to define the genre.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#EXTRA_MEDIA_GENRE" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.EXTRA_MEDIA_GENRE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraMediaPlaylist">
      <MemberSignature Language="C#" Value="public const string ExtraMediaPlaylist;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraMediaPlaylist" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ExtraMediaPlaylist" />
      <MemberSignature Language="F#" Value="val mutable ExtraMediaPlaylist : string" Usage="Android.Provider.MediaStore.ExtraMediaPlaylist" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_MEDIA_PLAYLIST")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_MEDIA_PLAYLIST")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent-extra used to define the playlist.</summary>
        <remarks>
          <para>The name of the Intent-extra used to define the playlist.</para>
          <para>This member is deprecated. Android playlists are now deprecated. We will keep the current
                        functionality for compatibility resons, but we will no longer take feature
                        request. We do not advise adding new usages of Android Playlists. M3U files can
                        be used as an alternative.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#EXTRA_MEDIA_PLAYLIST" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.EXTRA_MEDIA_PLAYLIST</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraMediaRadioChannel">
      <MemberSignature Language="C#" Value="public const string ExtraMediaRadioChannel;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraMediaRadioChannel" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ExtraMediaRadioChannel" />
      <MemberSignature Language="F#" Value="val mutable ExtraMediaRadioChannel : string" Usage="Android.Provider.MediaStore.ExtraMediaRadioChannel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_MEDIA_RADIO_CHANNEL")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_MEDIA_RADIO_CHANNEL")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent-extra used to define the radio channel.</summary>
        <remarks>
          <para>The name of the Intent-extra used to define the radio channel.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#EXTRA_MEDIA_RADIO_CHANNEL" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.EXTRA_MEDIA_RADIO_CHANNEL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraMediaTitle">
      <MemberSignature Language="C#" Value="public const string ExtraMediaTitle;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraMediaTitle" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ExtraMediaTitle" />
      <MemberSignature Language="F#" Value="val mutable ExtraMediaTitle : string" Usage="Android.Provider.MediaStore.ExtraMediaTitle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_MEDIA_TITLE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_MEDIA_TITLE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent-extra used to define the song title</summary>
        <remarks>
          <para>The name of the Intent-extra used to define the song title</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#EXTRA_MEDIA_TITLE" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.EXTRA_MEDIA_TITLE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ExtraOutput">
      <MemberSignature Language="C#" Value="public const string ExtraOutput;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraOutput" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ExtraOutput" />
      <MemberSignature Language="F#" Value="val mutable ExtraOutput : string" Usage="Android.Provider.MediaStore.ExtraOutput" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_OUTPUT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_OUTPUT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent-extra used to indicate a content resolver Uri to be used to
            store the requested image or video.</summary>
        <remarks>
          <para>The name of the Intent-extra used to indicate a content resolver Uri to be used to
            store the requested image or video.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#EXTRA_OUTPUT" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.EXTRA_OUTPUT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ExtraPickImagesAccentColor">
      <MemberSignature Language="C#" Value="public const string ExtraPickImagesAccentColor;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraPickImagesAccentColor" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ExtraPickImagesAccentColor" />
      <MemberSignature Language="F#" Value="val mutable ExtraPickImagesAccentColor : string" Usage="Android.Provider.MediaStore.ExtraPickImagesAccentColor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PICK_IMAGES_ACCENT_COLOR", ApiSince=35)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PICK_IMAGES_ACCENT_COLOR", ApiSince=35)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android35.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android35.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of an optional intent-extra used to allow apps to specify the picker accent color.</summary>
        <remarks>
          <para>The name of an optional intent-extra used to allow apps to specify the picker accent color.
            The extra can only be specified in <c>MediaStore#ACTION_PICK_IMAGES</c>.
            The accent color will be used for various primary elements in the PhotoPicker view.
            All other colors will be set based on android material guidelines.</para>
          <para>The value of this intent extra should be a long color value. The alpha component of the
            given color is not taken into account while setting the accent color. We assume full color
            opacity.
            Only colors with luminance(can also be understood as brightness) greater than 0.05 and
            less than 0.9 are permitted.
            Luminance of a color is determined using:
            luminance = Color.luminance(color)
                  where color is the input accent color to be set.
            Check <c>Color</c> docs for more details on color luminance and long color values.
            In case the luminance of the input color is unacceptable, picker colors will be set
            based on the colors of the device android theme.
            In case of an invalid input color value i.e. the input color cannot be parsed,
            <c>IllegalArgumentException</c> is thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#EXTRA_PICK_IMAGES_ACCENT_COLOR" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.EXTRA_PICK_IMAGES_ACCENT_COLOR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraPickImagesInOrder">
      <MemberSignature Language="C#" Value="public const string ExtraPickImagesInOrder;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraPickImagesInOrder" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ExtraPickImagesInOrder" />
      <MemberSignature Language="F#" Value="val mutable ExtraPickImagesInOrder : string" Usage="Android.Provider.MediaStore.ExtraPickImagesInOrder" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PICK_IMAGES_IN_ORDER", ApiSince=35)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PICK_IMAGES_IN_ORDER", ApiSince=35)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android35.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android35.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of an optional intent-extra used to allow ordered selection of items.</summary>
        <remarks>
          <para>The name of an optional intent-extra used to allow ordered selection of items. Set this extra
            to true to allow the user to see the order of their selected items. The result returned to
            the caller will be the same as the user selected order. This extra is only allowed via the
            <c>MediaStore#ACTION_PICK_IMAGES</c>.</para>
          <para>The value of this intent-extra should be a boolean. Default value is false.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#EXTRA_PICK_IMAGES_IN_ORDER" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.EXTRA_PICK_IMAGES_IN_ORDER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraPickImagesLaunchTab">
      <MemberSignature Language="C#" Value="public const string ExtraPickImagesLaunchTab;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraPickImagesLaunchTab" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ExtraPickImagesLaunchTab" />
      <MemberSignature Language="F#" Value="val mutable ExtraPickImagesLaunchTab : string" Usage="Android.Provider.MediaStore.ExtraPickImagesLaunchTab" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PICK_IMAGES_LAUNCH_TAB", ApiSince=35)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PICK_IMAGES_LAUNCH_TAB", ApiSince=35)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android35.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android35.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of an optional intent-extra used to allow apps to specify the tab the picker should
            open with.</summary>
        <remarks>
          <para>The name of an optional intent-extra used to allow apps to specify the tab the picker should
            open with. The extra can only be specified in <c>MediaStore#ACTION_PICK_IMAGES</c>.</para>
          <para>The value of this intent-extra must be one of: <c>MediaStore#PICK_IMAGES_TAB_ALBUMS</c>
            for the albums tab and <c>MediaStore#PICK_IMAGES_TAB_IMAGES</c> for the photos tab.
            The system will decide which tab to open by default and in most cases,
            it is <c>MediaStore#PICK_IMAGES_TAB_IMAGES</c> i.e. the photos tab.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#EXTRA_PICK_IMAGES_LAUNCH_TAB" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.EXTRA_PICK_IMAGES_LAUNCH_TAB</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraPickImagesMax">
      <MemberSignature Language="C#" Value="public const string ExtraPickImagesMax;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraPickImagesMax" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ExtraPickImagesMax" />
      <MemberSignature Language="F#" Value="val mutable ExtraPickImagesMax : string" Usage="Android.Provider.MediaStore.ExtraPickImagesMax" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PICK_IMAGES_MAX", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PICK_IMAGES_MAX", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of an optional intent-extra used to allow multiple selection of
            items and constrain maximum number of items that can be returned by
            <c>MediaStore#ACTION_PICK_IMAGES</c>, action may still return nothing
            (0 items) if the user chooses to cancel.</summary>
        <remarks>
          <para>The name of an optional intent-extra used to allow multiple selection of
            items and constrain maximum number of items that can be returned by
            <c>MediaStore#ACTION_PICK_IMAGES</c>, action may still return nothing
            (0 items) if the user chooses to cancel.</para>
          <para>The value of this intent-extra should be a positive integer greater
            than 1 and less than or equal to
            <c>MediaStore#getPickImagesMaxLimit</c>, otherwise
            <c>Activity#RESULT_CANCELED</c> is returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#EXTRA_PICK_IMAGES_MAX" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.EXTRA_PICK_IMAGES_MAX</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraScreenOrientation">
      <MemberSignature Language="C#" Value="public const string ExtraScreenOrientation;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraScreenOrientation" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ExtraScreenOrientation" />
      <MemberSignature Language="F#" Value="val mutable ExtraScreenOrientation : string" Usage="Android.Provider.MediaStore.ExtraScreenOrientation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_SCREEN_ORIENTATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_SCREEN_ORIENTATION")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent-extra used to control the orientation of a ViewImage or a MovieView.</summary>
        <remarks>
          <para>The name of the Intent-extra used to control the orientation of a ViewImage or a MovieView.
            This is an int property that overrides the activity's requestedOrientation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#EXTRA_SCREEN_ORIENTATION" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.EXTRA_SCREEN_ORIENTATION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ExtraShowActionIcons">
      <MemberSignature Language="C#" Value="public const string ExtraShowActionIcons;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraShowActionIcons" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ExtraShowActionIcons" />
      <MemberSignature Language="F#" Value="val mutable ExtraShowActionIcons : string" Usage="Android.Provider.MediaStore.ExtraShowActionIcons" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_SHOW_ACTION_ICONS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_SHOW_ACTION_ICONS")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of an Intent-extra used to control the UI of a ViewImage.</summary>
        <remarks>
          <para>The name of an Intent-extra used to control the UI of a ViewImage.
            This is a boolean property that specifies whether or not to show action icons.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#EXTRA_SHOW_ACTION_ICONS" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.EXTRA_SHOW_ACTION_ICONS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ExtraSizeLimit">
      <MemberSignature Language="C#" Value="public const string ExtraSizeLimit;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraSizeLimit" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ExtraSizeLimit" />
      <MemberSignature Language="F#" Value="val mutable ExtraSizeLimit : string" Usage="Android.Provider.MediaStore.ExtraSizeLimit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_SIZE_LIMIT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_SIZE_LIMIT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specify the maximum allowed size.</summary>
        <remarks>
          <para>Specify the maximum allowed size.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#EXTRA_SIZE_LIMIT" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.EXTRA_SIZE_LIMIT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ExtraVideoQuality">
      <MemberSignature Language="C#" Value="public const string ExtraVideoQuality;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraVideoQuality" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.ExtraVideoQuality" />
      <MemberSignature Language="F#" Value="val mutable ExtraVideoQuality : string" Usage="Android.Provider.MediaStore.ExtraVideoQuality" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_VIDEO_QUALITY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_VIDEO_QUALITY")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent-extra used to control the quality of a recorded video.</summary>
        <remarks>
          <para>The name of the Intent-extra used to control the quality of a recorded video. This is an
            integer property. Currently value 0 means low quality, suitable for MMS messages, and
            value 1 means high quality. In the future other quality levels may be added.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#EXTRA_VIDEO_QUALITY" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.EXTRA_VIDEO_QUALITY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetDocumentUri">
      <MemberSignature Language="C#" Value="public static Android.Net.Uri? GetDocumentUri (Android.Content.Context context, Android.Net.Uri mediaUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Net.Uri GetDocumentUri(class Android.Content.Context context, class Android.Net.Uri mediaUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.MediaStore.GetDocumentUri(Android.Content.Context,Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="static member GetDocumentUri : Android.Content.Context * Android.Net.Uri -&gt; Android.Net.Uri" Usage="Android.Provider.MediaStore.GetDocumentUri (context, mediaUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDocumentUri", "(Landroid/content/Context;Landroid/net/Uri;)Landroid/net/Uri;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDocumentUri", "(Landroid/content/Context;Landroid/net/Uri;)Landroid/net/Uri;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-android-34.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="mediaUri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="mediaUri">The <c>MediaStore</c> Uri to convert.</param>
        <summary>Return a <c>DocumentsProvider</c> Uri that is an equivalent to the given
            <c>MediaStore</c> Uri.</summary>
        <returns>An equivalent <c>DocumentsProvider</c> Uri. Returns <c>null</c>
                    if no equivalent was found.</returns>
        <remarks>
          <para>Return a <c>DocumentsProvider</c> Uri that is an equivalent to the given
            <c>MediaStore</c> Uri.</para>
          <para>This allows apps with Storage Access Framework permissions to convert
            between <c>MediaStore</c> and <c>DocumentsProvider</c> Uris that refer
            to the same underlying item. Note that this method doesn't grant any new
            permissions; callers must already hold permissions obtained with
            <c>Intent#ACTION_OPEN_DOCUMENT</c> or related APIs.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#getDocumentUri(android.content.Context,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.getDocumentUri(android.content.Context, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExternalVolumeNames">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.ICollection&lt;string&gt; GetExternalVolumeNames (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.ICollection`1&lt;string&gt; GetExternalVolumeNames(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.MediaStore.GetExternalVolumeNames(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member GetExternalVolumeNames : Android.Content.Context -&gt; System.Collections.Generic.ICollection&lt;string&gt;" Usage="Android.Provider.MediaStore.GetExternalVolumeNames context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getExternalVolumeNames", "(Landroid/content/Context;)Ljava/util/Set;", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getExternalVolumeNames", "(Landroid/content/Context;)Ljava/util/Set;", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>Return list of all specific volume names that make up
            <c>#VOLUME_EXTERNAL</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return list of all specific volume names that make up
            <c>#VOLUME_EXTERNAL</c>. This includes a unique volume name for each
            shared storage device that is currently attached, which typically
            includes <c>MediaStore#VOLUME_EXTERNAL_PRIMARY</c>.</para>
          <para>Each specific volume name can be passed to APIs like
            <c>MediaStore.Images.Media#getContentUri(String)</c> to interact with
            media on that storage device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#getExternalVolumeNames(android.content.Context)" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.getExternalVolumeNames(android.content.Context)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGeneration">
      <MemberSignature Language="C#" Value="public static long GetGeneration (Android.Content.Context context, string volumeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 GetGeneration(class Android.Content.Context context, string volumeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.MediaStore.GetGeneration(Android.Content.Context,System.String)" />
      <MemberSignature Language="F#" Value="static member GetGeneration : Android.Content.Context * string -&gt; int64" Usage="Android.Provider.MediaStore.GetGeneration (context, volumeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getGeneration", "(Landroid/content/Context;Ljava/lang/String;)J", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getGeneration", "(Landroid/content/Context;Ljava/lang/String;)J", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="volumeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="volumeName">specific volume to obtain an generation value for. Must
                       be one of the values returned from
                       <c>#getExternalVolumeNames(Context)</c>.</param>
        <summary>Return the latest generation value for the given volume.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return the latest generation value for the given volume.</para>
          <para>Generation numbers are useful for apps that are attempting to quickly
            identify exactly which media items have been added or changed since a
            previous point in time. Generation numbers are monotonically increasing
            over time, and can be safely arithmetically compared.</para>
          <para>Detecting media changes using generation numbers is more robust than
            using <c>MediaColumns#DATE_ADDED</c> or
            <c>MediaColumns#DATE_MODIFIED</c>, since those values may change in
            unexpected ways when apps use <c>File#setLastModified(long)</c> or when
            the system clock is set incorrectly.</para>
          <para>Note that before comparing these detailed generation values, you should
            first confirm that the overall version hasn't changed by checking
            <c>MediaStore#getVersion(Context, String)</c>, since that indicates when
            a more radical change has occurred. If the overall version changes, you
            should assume that generation numbers have been reset and perform a full
            synchronization pass.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#getGeneration(android.content.Context,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.getGeneration(android.content.Context, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMediaUri">
      <MemberSignature Language="C#" Value="public static Android.Net.Uri? GetMediaUri (Android.Content.Context context, Android.Net.Uri documentUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Net.Uri GetMediaUri(class Android.Content.Context context, class Android.Net.Uri documentUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.MediaStore.GetMediaUri(Android.Content.Context,Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="static member GetMediaUri : Android.Content.Context * Android.Net.Uri -&gt; Android.Net.Uri" Usage="Android.Provider.MediaStore.GetMediaUri (context, documentUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getMediaUri", "(Landroid/content/Context;Landroid/net/Uri;)Landroid/net/Uri;", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getMediaUri", "(Landroid/content/Context;Landroid/net/Uri;)Landroid/net/Uri;", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-android-34.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="documentUri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="documentUri">The <c>DocumentsProvider</c> Uri to convert.</param>
        <summary>Return a <c>MediaStore</c> Uri that is an equivalent to the given
            <c>DocumentsProvider</c> Uri.</summary>
        <returns>An equivalent <c>MediaStore</c> Uri. Returns <c>null</c> if no
                    equivalent was found.</returns>
        <remarks>
          <para>Return a <c>MediaStore</c> Uri that is an equivalent to the given
            <c>DocumentsProvider</c> Uri. This only supports <c>ExternalStorageProvider</c>
            and <c>MediaDocumentsProvider</c> Uris.</para>
          <para>This allows apps with Storage Access Framework permissions to convert
            between <c>MediaStore</c> and <c>DocumentsProvider</c> Uris that refer
            to the same underlying item.
            Note that this method doesn't grant any new permissions, but it grants the same access to
            the Media Store Uri as the caller has to the given DocumentsProvider Uri; callers must
            already hold permissions for documentUri obtained with <c>Intent#ACTION_OPEN_DOCUMENT</c>
            or related APIs.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#getMediaUri(android.content.Context,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.getMediaUri(android.content.Context, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOriginalMediaFormatFileDescriptor">
      <MemberSignature Language="C#" Value="public static Android.OS.ParcelFileDescriptor GetOriginalMediaFormatFileDescriptor (Android.Content.Context context, Android.OS.ParcelFileDescriptor fileDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.OS.ParcelFileDescriptor GetOriginalMediaFormatFileDescriptor(class Android.Content.Context context, class Android.OS.ParcelFileDescriptor fileDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.MediaStore.GetOriginalMediaFormatFileDescriptor(Android.Content.Context,Android.OS.ParcelFileDescriptor)" />
      <MemberSignature Language="F#" Value="static member GetOriginalMediaFormatFileDescriptor : Android.Content.Context * Android.OS.ParcelFileDescriptor -&gt; Android.OS.ParcelFileDescriptor" Usage="Android.Provider.MediaStore.GetOriginalMediaFormatFileDescriptor (context, fileDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOriginalMediaFormatFileDescriptor", "(Landroid/content/Context;Landroid/os/ParcelFileDescriptor;)Landroid/os/ParcelFileDescriptor;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOriginalMediaFormatFileDescriptor", "(Landroid/content/Context;Landroid/os/ParcelFileDescriptor;)Landroid/os/ParcelFileDescriptor;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.ParcelFileDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="fileDescriptor" Type="Android.OS.ParcelFileDescriptor" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="fileDescriptor">To be added.</param>
        <summary>Returns <c>ParcelFileDescriptor</c> representing the original media file format for
            <c>fileDescriptor</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns <c>ParcelFileDescriptor</c> representing the original media file format for
            <c>fileDescriptor</c>.</para>
          <para>Media files may get transcoded based on an application's media capabilities requirements.
            However, in various cases, when the application needs access to the original media file, or
            doesn't attempt to parse the actual byte contents of media files, such as playback using
            <c>MediaPlayer</c> or for off-device backup, this method can be useful.</para>
          <para>This method is applicable only for media files managed by <c>MediaStore</c>.</para>
          <para>The method returns the original file descriptor with the same permission that the caller
            has for the input file descriptor.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#getOriginalMediaFormatFileDescriptor(android.content.Context,%20android.os.ParcelFileDescriptor)" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.getOriginalMediaFormatFileDescriptor(android.content.Context, android.os.ParcelFileDescriptor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecentExternalVolumeNames">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.ICollection&lt;string&gt; GetRecentExternalVolumeNames (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.ICollection`1&lt;string&gt; GetRecentExternalVolumeNames(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.MediaStore.GetRecentExternalVolumeNames(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member GetRecentExternalVolumeNames : Android.Content.Context -&gt; System.Collections.Generic.ICollection&lt;string&gt;" Usage="Android.Provider.MediaStore.GetRecentExternalVolumeNames context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getRecentExternalVolumeNames", "(Landroid/content/Context;)Ljava/util/Set;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getRecentExternalVolumeNames", "(Landroid/content/Context;)Ljava/util/Set;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>Return list of all recent volume names that have been part of
            <c>#VOLUME_EXTERNAL</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return list of all recent volume names that have been part of
            <c>#VOLUME_EXTERNAL</c>.</para>
          <para>These volume names are not currently mounted, but they're likely to
            reappear in the future, so apps are encouraged to preserve any indexed
            metadata related to these volumes to optimize user experiences.</para>
          <para>Each specific volume name can be passed to APIs like
            <c>MediaStore.Images.Media#getContentUri(String)</c> to interact with
            media on that storage device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#getRecentExternalVolumeNames(android.content.Context)" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.getRecentExternalVolumeNames(android.content.Context)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRedactedUri">
      <MemberSignature Language="C#" Value="public static Android.Net.Uri? GetRedactedUri (Android.Content.ContentResolver resolver, Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Net.Uri GetRedactedUri(class Android.Content.ContentResolver resolver, class Android.Net.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.MediaStore.GetRedactedUri(Android.Content.ContentResolver,Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="static member GetRedactedUri : Android.Content.ContentResolver * Android.Net.Uri -&gt; Android.Net.Uri" Usage="Android.Provider.MediaStore.GetRedactedUri (resolver, uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getRedactedUri", "(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/net/Uri;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getRedactedUri", "(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/net/Uri;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-android-34.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolver" Type="Android.Content.ContentResolver" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="resolver">The <c>ContentResolver</c> used to connect with
            <c>MediaStore#AUTHORITY</c>. Typically this value is gotten from
            <c>Context#getContentResolver()</c></param>
        <param name="uri">the <c>Uri</c> Uri to convert</param>
        <summary>Returns an EXIF redacted version of <c>uri</c> i.</summary>
        <returns>redacted version of the <c>uri</c>. Returns <c>null</c> when the given
            <c>Uri</c> could not be found or is unsupported</returns>
        <remarks>
          <para>Returns an EXIF redacted version of <c>uri</c> i.e. a <c>Uri</c> with metadata such as
            location, GPS datestamp etc. redacted from the EXIF headers.</para>
          <para>A redacted Uri can be used to share a file with another application wherein exposing
            sensitive information in EXIF headers is not desirable.
            Note:
            1. Redacted uris cannot be granted write access and can neither be used to perform any kind
            of write operations.
            2. To get a redacted uri the caller must hold read permission to <c>uri</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#getRedactedUri(android.content.ContentResolver,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.getRedactedUri(android.content.ContentResolver, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRedactedUri">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Android.Net.Uri&gt; GetRedactedUri (Android.Content.ContentResolver resolver, System.Collections.Generic.IList&lt;Android.Net.Uri&gt; uris);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class Android.Net.Uri&gt; GetRedactedUri(class Android.Content.ContentResolver resolver, class System.Collections.Generic.IList`1&lt;class Android.Net.Uri&gt; uris) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.MediaStore.GetRedactedUri(Android.Content.ContentResolver,System.Collections.Generic.IList{Android.Net.Uri})" />
      <MemberSignature Language="F#" Value="static member GetRedactedUri : Android.Content.ContentResolver * System.Collections.Generic.IList&lt;Android.Net.Uri&gt; -&gt; System.Collections.Generic.IList&lt;Android.Net.Uri&gt;" Usage="Android.Provider.MediaStore.GetRedactedUri (resolver, uris)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getRedactedUri", "(Landroid/content/ContentResolver;Ljava/util/List;)Ljava/util/List;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getRedactedUri", "(Landroid/content/ContentResolver;Ljava/util/List;)Ljava/util/List;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Net.Uri&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolver" Type="Android.Content.ContentResolver" />
        <Parameter Name="uris" Type="System.Collections.Generic.IList&lt;Android.Net.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="resolver">The <c>ContentResolver</c> used to connect with
            <c>MediaStore#AUTHORITY</c>. Typically this value is gotten from
            <c>Context#getContentResolver()</c></param>
        <param name="uris">the list of <c>Uri</c> Uri to convert</param>
        <summary>Returns a list of EXIF redacted version of <c>uris</c> i.</summary>
        <returns>a list with redacted version of <c>uris</c>, in the same order. Returns <c>null</c>
            when the corresponding <c>Uri</c> could not be found or is unsupported</returns>
        <remarks>
          <para>Returns a list of EXIF redacted version of <c>uris</c> i.e. a <c>Uri</c> with metadata
            such as location, GPS datestamp etc. redacted from the EXIF headers.</para>
          <para>A redacted Uri can be used to share a file with another application wherein exposing
            sensitive information in EXIF headers is not desirable.
            Note:
            1. Order of the returned uris follow the order of the <c>uris</c>.
            2. Redacted uris cannot be granted write access and can neither be used to perform any kind
            of write operations.
            3. To get a redacted uri the caller must hold read permission to its corresponding uri.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#getRedactedUri(android.content.ContentResolver,%20java.util.List%3Candroid.net.Uri%3E)" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.getRedactedUri(android.content.ContentResolver, java.util.List&lt;android.net.Uri&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequireOriginal">
      <MemberSignature Language="C#" Value="public static bool GetRequireOriginal (Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetRequireOriginal(class Android.Net.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.MediaStore.GetRequireOriginal(Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="static member GetRequireOriginal : Android.Net.Uri -&gt; bool" Usage="Android.Provider.MediaStore.GetRequireOriginal uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getRequireOriginal", "(Landroid/net/Uri;)Z", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getRequireOriginal", "(Landroid/net/Uri;)Z", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <summary>Return if the caller requires the original file contents when calling
            <c>ContentResolver#openFileDescriptor(Uri, String)</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return if the caller requires the original file contents when calling
            <c>ContentResolver#openFileDescriptor(Uri, String)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#getRequireOriginal(android.net.Uri)" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.getRequireOriginal(android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVersion">
      <MemberSignature Language="C#" Value="public static string GetVersion (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetVersion(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.MediaStore.GetVersion(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member GetVersion : Android.Content.Context -&gt; string" Usage="Android.Provider.MediaStore.GetVersion context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getVersion", "(Landroid/content/Context;)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getVersion", "(Landroid/content/Context;)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">Context to use for performing the query.</param>
        <summary>Return an opaque version string describing the <c>MediaStore</c> state.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return an opaque version string describing the <c>MediaStore</c> state.</para>
          <para>Applications that import data from <c>MediaStore</c> into their own
            caches can use this to detect that <c>MediaStore</c> has undergone
            substantial changes, and that data should be rescanned.</para>
          <para>No other assumptions should be made about the meaning of the version.</para>
          <para>This method returns the version for
            <c>MediaStore#VOLUME_EXTERNAL_PRIMARY</c>; to obtain a version for a
            different volume, use <c>#getVersion(Context, String)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#getVersion(android.content.Context)" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.getVersion(android.content.Context)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="GetVersion">
      <MemberSignature Language="C#" Value="public static string GetVersion (Android.Content.Context context, string volumeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetVersion(class Android.Content.Context context, string volumeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.MediaStore.GetVersion(Android.Content.Context,System.String)" />
      <MemberSignature Language="F#" Value="static member GetVersion : Android.Content.Context * string -&gt; string" Usage="Android.Provider.MediaStore.GetVersion (context, volumeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getVersion", "(Landroid/content/Context;Ljava/lang/String;)Ljava/lang/String;", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getVersion", "(Landroid/content/Context;Ljava/lang/String;)Ljava/lang/String;", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="volumeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="volumeName">specific volume to obtain an opaque version string for.
                       Must be one of the values returned from
                       <c>#getExternalVolumeNames(Context)</c>.</param>
        <summary>Return an opaque version string describing the <c>MediaStore</c> state.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return an opaque version string describing the <c>MediaStore</c> state.</para>
          <para>Applications that import data from <c>MediaStore</c> into their own
            caches can use this to detect that <c>MediaStore</c> has undergone
            substantial changes, and that data should be rescanned.</para>
          <para>No other assumptions should be made about the meaning of the version.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#getVersion(android.content.Context,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.getVersion(android.content.Context, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVolumeName">
      <MemberSignature Language="C#" Value="public static string GetVolumeName (Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetVolumeName(class Android.Net.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.MediaStore.GetVolumeName(Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="static member GetVolumeName : Android.Net.Uri -&gt; string" Usage="Android.Provider.MediaStore.GetVolumeName uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getVolumeName", "(Landroid/net/Uri;)Ljava/lang/String;", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getVolumeName", "(Landroid/net/Uri;)Ljava/lang/String;", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <summary>Return the volume name that the given <c>Uri</c> references.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return the volume name that the given <c>Uri</c> references.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#getVolumeName(android.net.Uri)" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.getVolumeName(android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntentActionMediaPlayFromSearch">
      <MemberSignature Language="C#" Value="public const string IntentActionMediaPlayFromSearch;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IntentActionMediaPlayFromSearch" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.IntentActionMediaPlayFromSearch" />
      <MemberSignature Language="F#" Value="val mutable IntentActionMediaPlayFromSearch : string" Usage="Android.Provider.MediaStore.IntentActionMediaPlayFromSearch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("INTENT_ACTION_MEDIA_PLAY_FROM_SEARCH")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("INTENT_ACTION_MEDIA_PLAY_FROM_SEARCH")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An intent to perform a search for music media and automatically play content from the
            result when possible.</summary>
        <remarks>
          <para>An intent to perform a search for music media and automatically play content from the
            result when possible. This can be fired, for example, by the result of a voice recognition
            command to listen to music.</para>
          <para>This intent always includes the <c>android.provider.MediaStore#EXTRA_MEDIA_FOCUS</c>
            and <c>android.app.SearchManager#QUERY</c> extras. The
            <c>android.provider.MediaStore#EXTRA_MEDIA_FOCUS</c> extra determines the search mode, and
            the value of the <c>android.app.SearchManager#QUERY</c> extra depends on the search mode.
            For more information about the search modes for this intent, see
            <see href="https://developer.android.com/guide/components/intents-common.html#PlaySearch">Play music based
            on a search query</see> in <see href="https://developer.android.com/guide/components/intents-common.html">Common
            Intents</see>.</para>
          <para>This intent makes the most sense for apps that can support large-scale search of music,
            such as services connected to an online database of music which can be streamed and played
            on the device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#INTENT_ACTION_MEDIA_PLAY_FROM_SEARCH" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.INTENT_ACTION_MEDIA_PLAY_FROM_SEARCH</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="IntentActionMediaSearch">
      <MemberSignature Language="C#" Value="public const string IntentActionMediaSearch;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IntentActionMediaSearch" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.IntentActionMediaSearch" />
      <MemberSignature Language="F#" Value="val mutable IntentActionMediaSearch : string" Usage="Android.Provider.MediaStore.IntentActionMediaSearch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("INTENT_ACTION_MEDIA_SEARCH")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("INTENT_ACTION_MEDIA_SEARCH")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity Action: Perform a search for media.</summary>
        <remarks>
          <para>Activity Action: Perform a search for media.
            Contains at least the <c>android.app.SearchManager#QUERY</c> extra.
            May also contain any combination of the following extras:
            EXTRA_MEDIA_ARTIST, EXTRA_MEDIA_ALBUM, EXTRA_MEDIA_TITLE, EXTRA_MEDIA_FOCUS</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#INTENT_ACTION_MEDIA_SEARCH" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.INTENT_ACTION_MEDIA_SEARCH</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="F:Android.Provider.MediaStore.ExtraMediaArtist" />
        <altmember cref="F:Android.Provider.MediaStore.ExtraMediaAlbum" />
        <altmember cref="F:Android.Provider.MediaStore.ExtraMediaTitle" />
        <altmember cref="F:Android.Provider.MediaStore.ExtraMediaFocus" />
      </Docs>
    </Member>
    <Member MemberName="IntentActionMusicPlayer">
      <MemberSignature Language="C#" Value="public const string IntentActionMusicPlayer;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IntentActionMusicPlayer" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.IntentActionMusicPlayer" />
      <MemberSignature Language="F#" Value="val mutable IntentActionMusicPlayer : string" Usage="Android.Provider.MediaStore.IntentActionMusicPlayer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("INTENT_ACTION_MUSIC_PLAYER")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("INTENT_ACTION_MUSIC_PLAYER")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity Action: Launch a music player.</summary>
        <remarks>
          <para>Activity Action: Launch a music player.
            The activity should be able to play, browse, or manipulate music files stored on the device.</para>
          <para>This member is deprecated. Use <c>android.content.Intent#CATEGORY_APP_MUSIC</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#INTENT_ACTION_MUSIC_PLAYER" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.INTENT_ACTION_MUSIC_PLAYER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="IntentActionStillImageCamera">
      <MemberSignature Language="C#" Value="public const string IntentActionStillImageCamera;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IntentActionStillImageCamera" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.IntentActionStillImageCamera" />
      <MemberSignature Language="F#" Value="val mutable IntentActionStillImageCamera : string" Usage="Android.Provider.MediaStore.IntentActionStillImageCamera" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("INTENT_ACTION_STILL_IMAGE_CAMERA")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("INTENT_ACTION_STILL_IMAGE_CAMERA")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent action used to launch a camera in still image mode.</summary>
        <remarks>
          <para>The name of the Intent action used to launch a camera in still image mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#INTENT_ACTION_STILL_IMAGE_CAMERA" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.INTENT_ACTION_STILL_IMAGE_CAMERA</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="IntentActionStillImageCameraSecure">
      <MemberSignature Language="C#" Value="public const string IntentActionStillImageCameraSecure;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IntentActionStillImageCameraSecure" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.IntentActionStillImageCameraSecure" />
      <MemberSignature Language="F#" Value="val mutable IntentActionStillImageCameraSecure : string" Usage="Android.Provider.MediaStore.IntentActionStillImageCameraSecure" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("INTENT_ACTION_STILL_IMAGE_CAMERA_SECURE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("INTENT_ACTION_STILL_IMAGE_CAMERA_SECURE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent action used to launch a camera in still image mode
            for use when the device is secured (e.</summary>
        <remarks>
          <para>The name of the Intent action used to launch a camera in still image mode
            for use when the device is secured (e.g. with a pin, password, pattern,
            or face unlock). Applications responding to this intent must not expose
            any personal content like existing photos or videos on the device. The
            applications should be careful not to share any photo or video with other
            applications or internet. The activity should use <c>Activity#setShowWhenLocked</c> to display
            on top of the lock screen while secured. There is no activity stack when
            this flag is used, so launching more than one activity is strongly
            discouraged.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#INTENT_ACTION_STILL_IMAGE_CAMERA_SECURE" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.INTENT_ACTION_STILL_IMAGE_CAMERA_SECURE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="IntentActionTextOpenFromSearch">
      <MemberSignature Language="C#" Value="public const string IntentActionTextOpenFromSearch;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IntentActionTextOpenFromSearch" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.IntentActionTextOpenFromSearch" />
      <MemberSignature Language="F#" Value="val mutable IntentActionTextOpenFromSearch : string" Usage="Android.Provider.MediaStore.IntentActionTextOpenFromSearch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("INTENT_ACTION_TEXT_OPEN_FROM_SEARCH")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("INTENT_ACTION_TEXT_OPEN_FROM_SEARCH")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An intent to perform a search for readable media and automatically play content from the
            result when possible.</summary>
        <remarks>
          <para>An intent to perform a search for readable media and automatically play content from the
            result when possible. This can be fired, for example, by the result of a voice recognition
            command to read a book or magazine.</para>
          <para>Contains the <c>android.app.SearchManager#QUERY</c> extra, which is a string that can
            contain any type of unstructured text search, like the name of a book or magazine, an author
            a genre, a publisher, or any combination of these.</para>
          <para>Because this intent includes an open-ended unstructured search string, it makes the most
            sense for apps that can support large-scale search of text media, such as services connected
            to an online database of books and/or magazines which can be read on the device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#INTENT_ACTION_TEXT_OPEN_FROM_SEARCH" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.INTENT_ACTION_TEXT_OPEN_FROM_SEARCH</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="IntentActionVideoCamera">
      <MemberSignature Language="C#" Value="public const string IntentActionVideoCamera;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IntentActionVideoCamera" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.IntentActionVideoCamera" />
      <MemberSignature Language="F#" Value="val mutable IntentActionVideoCamera : string" Usage="Android.Provider.MediaStore.IntentActionVideoCamera" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("INTENT_ACTION_VIDEO_CAMERA")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("INTENT_ACTION_VIDEO_CAMERA")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent action used to launch a camera in video mode.</summary>
        <remarks>
          <para>The name of the Intent action used to launch a camera in video mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#INTENT_ACTION_VIDEO_CAMERA" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.INTENT_ACTION_VIDEO_CAMERA</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="IntentActionVideoPlayFromSearch">
      <MemberSignature Language="C#" Value="public const string IntentActionVideoPlayFromSearch;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IntentActionVideoPlayFromSearch" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.IntentActionVideoPlayFromSearch" />
      <MemberSignature Language="F#" Value="val mutable IntentActionVideoPlayFromSearch : string" Usage="Android.Provider.MediaStore.IntentActionVideoPlayFromSearch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("INTENT_ACTION_VIDEO_PLAY_FROM_SEARCH")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("INTENT_ACTION_VIDEO_PLAY_FROM_SEARCH")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An intent to perform a search for video media and automatically play content from the
            result when possible.</summary>
        <remarks>
          <para>An intent to perform a search for video media and automatically play content from the
            result when possible. This can be fired, for example, by the result of a voice recognition
            command to play movies.</para>
          <para>Contains the <c>android.app.SearchManager#QUERY</c> extra, which is a string that can
            contain any type of unstructured video search, like the name of a movie, one or more actors,
            a genre, or any combination of these.</para>
          <para>Because this intent includes an open-ended unstructured search string, it makes the most
            sense for apps that can support large-scale search of video, such as services connected to an
            online database of videos which can be streamed and played on the device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#INTENT_ACTION_VIDEO_PLAY_FROM_SEARCH" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.INTENT_ACTION_VIDEO_PLAY_FROM_SEARCH</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="IsCurrentCloudMediaProviderAuthority">
      <MemberSignature Language="C#" Value="public static bool IsCurrentCloudMediaProviderAuthority (Android.Content.ContentResolver resolver, string authority);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsCurrentCloudMediaProviderAuthority(class Android.Content.ContentResolver resolver, string authority) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.MediaStore.IsCurrentCloudMediaProviderAuthority(Android.Content.ContentResolver,System.String)" />
      <MemberSignature Language="F#" Value="static member IsCurrentCloudMediaProviderAuthority : Android.Content.ContentResolver * string -&gt; bool" Usage="Android.Provider.MediaStore.IsCurrentCloudMediaProviderAuthority (resolver, authority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isCurrentCloudMediaProviderAuthority", "(Landroid/content/ContentResolver;Ljava/lang/String;)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isCurrentCloudMediaProviderAuthority", "(Landroid/content/ContentResolver;Ljava/lang/String;)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolver" Type="Android.Content.ContentResolver" />
        <Parameter Name="authority" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resolver">To be added.</param>
        <param name="authority">To be added.</param>
        <summary>Returns <c>true</c> if and only if the caller with <c>authority</c> is the currently
            enabled <c>CloudMediaProvider</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns <c>true</c> if and only if the caller with <c>authority</c> is the currently
            enabled <c>CloudMediaProvider</c>. More specifically, <c>false</c> is also returned
            if the calling uid doesn't match the uid of the <c>authority</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#isCurrentCloudMediaProviderAuthority(android.content.ContentResolver,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.isCurrentCloudMediaProviderAuthority(android.content.ContentResolver, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentSystemGallery">
      <MemberSignature Language="C#" Value="public static bool IsCurrentSystemGallery (Android.Content.ContentResolver resolver, int uid, string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsCurrentSystemGallery(class Android.Content.ContentResolver resolver, int32 uid, string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.MediaStore.IsCurrentSystemGallery(Android.Content.ContentResolver,System.Int32,System.String)" />
      <MemberSignature Language="F#" Value="static member IsCurrentSystemGallery : Android.Content.ContentResolver * int * string -&gt; bool" Usage="Android.Provider.MediaStore.IsCurrentSystemGallery (resolver, uid, packageName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isCurrentSystemGallery", "(Landroid/content/ContentResolver;ILjava/lang/String;)Z", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isCurrentSystemGallery", "(Landroid/content/ContentResolver;ILjava/lang/String;)Z", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolver" Type="Android.Content.ContentResolver" />
        <Parameter Name="uid" Type="System.Int32" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resolver">The <c>ContentResolver</c> used to connect with
            <c>MediaStore#AUTHORITY</c>. Typically this value is <c>Context#getContentResolver()</c>.</param>
        <param name="uid">The uid to be checked if it is the current system gallery.</param>
        <param name="packageName">The package name to be checked if it is the current system gallery.</param>
        <summary>Returns true if the given application is the current system gallery of the device.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns true if the given application is the current system gallery of the device.</para>
          <para>The system gallery is one app chosen by the OEM that has read &amp; write access to all photos
            and videos on the device and control over folders in media collections.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#isCurrentSystemGallery(android.content.ContentResolver,%20int,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.isCurrentSystemGallery(android.content.ContentResolver, int, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedCloudMediaProviderAuthority">
      <MemberSignature Language="C#" Value="public static bool IsSupportedCloudMediaProviderAuthority (Android.Content.ContentResolver resolver, string authority);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSupportedCloudMediaProviderAuthority(class Android.Content.ContentResolver resolver, string authority) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.MediaStore.IsSupportedCloudMediaProviderAuthority(Android.Content.ContentResolver,System.String)" />
      <MemberSignature Language="F#" Value="static member IsSupportedCloudMediaProviderAuthority : Android.Content.ContentResolver * string -&gt; bool" Usage="Android.Provider.MediaStore.IsSupportedCloudMediaProviderAuthority (resolver, authority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isSupportedCloudMediaProviderAuthority", "(Landroid/content/ContentResolver;Ljava/lang/String;)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isSupportedCloudMediaProviderAuthority", "(Landroid/content/ContentResolver;Ljava/lang/String;)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolver" Type="Android.Content.ContentResolver" />
        <Parameter Name="authority" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resolver">To be added.</param>
        <param name="authority">To be added.</param>
        <summary>Returns <c>true</c> if and only if the caller with <c>authority</c> is a supported
            <c>CloudMediaProvider</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns <c>true</c> if and only if the caller with <c>authority</c> is a supported
            <c>CloudMediaProvider</c>. More specifically, <c>false</c> is also returned
            if the calling uid doesn't match the uid of the <c>authority</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#isSupportedCloudMediaProviderAuthority(android.content.ContentResolver,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.isSupportedCloudMediaProviderAuthority(android.content.ContentResolver, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Provider.MediaStore.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Provider.MediaStore.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchDefault">
      <MemberSignature Language="C#" Value="public const Android.Provider.MediaStoreMatchBehavior MatchDefault = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Provider.MediaStoreMatchBehavior MatchDefault = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.MatchDefault" />
      <MemberSignature Language="F#" Value="val mutable MatchDefault : Android.Provider.MediaStoreMatchBehavior" Usage="Android.Provider.MediaStore.MatchDefault" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MATCH_DEFAULT", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MATCH_DEFAULT", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Provider.MediaStoreMatchBehavior enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Provider.MediaStoreMatchBehavior enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Provider.MediaStoreMatchBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Value indicating that the default matching behavior should be used, as
            defined by the key documentation.</summary>
        <remarks>
          <para>Value indicating that the default matching behavior should be used, as
            defined by the key documentation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#MATCH_DEFAULT" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.MATCH_DEFAULT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchExclude">
      <MemberSignature Language="C#" Value="public const Android.Provider.MediaStoreMatchBehavior MatchExclude = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Provider.MediaStoreMatchBehavior MatchExclude = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.MatchExclude" />
      <MemberSignature Language="F#" Value="val mutable MatchExclude : Android.Provider.MediaStoreMatchBehavior" Usage="Android.Provider.MediaStore.MatchExclude" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MATCH_EXCLUDE", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MATCH_EXCLUDE", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Provider.MediaStoreMatchBehavior enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Provider.MediaStoreMatchBehavior enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Provider.MediaStoreMatchBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Value indicating that operations should exclude items matching the
            criteria defined by this key.</summary>
        <remarks>
          <para>Value indicating that operations should exclude items matching the
            criteria defined by this key.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#MATCH_EXCLUDE" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.MATCH_EXCLUDE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchInclude">
      <MemberSignature Language="C#" Value="public const Android.Provider.MediaStoreMatchBehavior MatchInclude = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Provider.MediaStoreMatchBehavior MatchInclude = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.MatchInclude" />
      <MemberSignature Language="F#" Value="val mutable MatchInclude : Android.Provider.MediaStoreMatchBehavior" Usage="Android.Provider.MediaStore.MatchInclude" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MATCH_INCLUDE", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MATCH_INCLUDE", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Provider.MediaStoreMatchBehavior enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Provider.MediaStoreMatchBehavior enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Provider.MediaStoreMatchBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Value indicating that operations should include items matching the
            criteria defined by this key.</summary>
        <remarks>
          <para>Value indicating that operations should include items matching the
            criteria defined by this key.</para>
          <para>Note that items &lt;em&gt;not&lt;/em&gt; matching the criteria &lt;em&gt;may&lt;/em&gt; also be
            included depending on the default behavior documented by the key. If you
            want to operate exclusively on matching items, use <c>#MATCH_ONLY</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#MATCH_INCLUDE" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.MATCH_INCLUDE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchOnly">
      <MemberSignature Language="C#" Value="public const Android.Provider.MediaStoreMatchBehavior MatchOnly = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Provider.MediaStoreMatchBehavior MatchOnly = (3)" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.MatchOnly" />
      <MemberSignature Language="F#" Value="val mutable MatchOnly : Android.Provider.MediaStoreMatchBehavior" Usage="Android.Provider.MediaStore.MatchOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MATCH_ONLY", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MATCH_ONLY", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Provider.MediaStoreMatchBehavior enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Provider.MediaStoreMatchBehavior enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Provider.MediaStoreMatchBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Value indicating that operations should only operate on items explicitly
            matching the criteria defined by this key.</summary>
        <remarks>
          <para>Value indicating that operations should only operate on items explicitly
            matching the criteria defined by this key.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#MATCH_ONLY" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.MATCH_ONLY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaIgnoreFilename">
      <MemberSignature Language="C#" Value="public const string MediaIgnoreFilename;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaIgnoreFilename" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.MediaIgnoreFilename" />
      <MemberSignature Language="F#" Value="val mutable MediaIgnoreFilename : string" Usage="Android.Provider.MediaStore.MediaIgnoreFilename" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MEDIA_IGNORE_FILENAME")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MEDIA_IGNORE_FILENAME")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Name of the file signaling the media scanner to ignore media in the containing directory
            and its subdirectories.</summary>
        <remarks>
          <para>Name of the file signaling the media scanner to ignore media in the containing directory
            and its subdirectories. Developers should use this to avoid application graphics showing
            up in the Gallery and likewise prevent application sounds and music from showing up in
            the Music app.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#MEDIA_IGNORE_FILENAME" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.MEDIA_IGNORE_FILENAME</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="MediaScannerUri">
      <MemberSignature Language="C#" Value="public static Android.Net.Uri? MediaScannerUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.Uri MediaScannerUri" />
      <MemberSignature Language="DocId" Value="P:Android.Provider.MediaStore.MediaScannerUri" />
      <MemberSignature Language="F#" Value="static member MediaScannerUri : Android.Net.Uri" Usage="Android.Provider.MediaStore.MediaScannerUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMediaScannerUri", "()Landroid/net/Uri;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMediaScannerUri", "()Landroid/net/Uri;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Uri for querying the state of the media scanner.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Uri for querying the state of the media scanner.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#getMediaScannerUri()" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.getMediaScannerUri()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MediaScannerVolume">
      <MemberSignature Language="C#" Value="public const string MediaScannerVolume;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaScannerVolume" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.MediaScannerVolume" />
      <MemberSignature Language="F#" Value="val mutable MediaScannerVolume : string" Usage="Android.Provider.MediaStore.MediaScannerVolume" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MEDIA_SCANNER_VOLUME")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MEDIA_SCANNER_VOLUME")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Name of current volume being scanned by the media scanner.</summary>
        <remarks>
          <para>Name of current volume being scanned by the media scanner.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#MEDIA_SCANNER_VOLUME" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.MEDIA_SCANNER_VOLUME</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MetaDataReviewGalleryPrewarmService">
      <MemberSignature Language="C#" Value="public const string MetaDataReviewGalleryPrewarmService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MetaDataReviewGalleryPrewarmService" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.MetaDataReviewGalleryPrewarmService" />
      <MemberSignature Language="F#" Value="val mutable MetaDataReviewGalleryPrewarmService : string" Usage="Android.Provider.MediaStore.MetaDataReviewGalleryPrewarmService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("META_DATA_REVIEW_GALLERY_PREWARM_SERVICE", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("META_DATA_REVIEW_GALLERY_PREWARM_SERVICE", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Name under which an activity handling <c>#ACTION_REVIEW</c> or
            <c>#ACTION_REVIEW_SECURE</c> publishes the service name for its prewarm
            service.</summary>
        <remarks>
          <para>Name under which an activity handling <c>#ACTION_REVIEW</c> or
            <c>#ACTION_REVIEW_SECURE</c> publishes the service name for its prewarm
            service.</para>
          <para>This meta-data should reference the fully qualified class name of the prewarm service</para>
          <para>The prewarm service can be bound before starting <c>#ACTION_REVIEW</c> or
            <c>#ACTION_REVIEW_SECURE</c>.
            An application implementing this prewarm service should do the absolute minimum amount of
            work to initialize its resources to efficiently handle an <c>#ACTION_REVIEW</c> or
            <c>#ACTION_REVIEW_SECURE</c> in the near future.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#META_DATA_REVIEW_GALLERY_PREWARM_SERVICE" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.META_DATA_REVIEW_GALLERY_PREWARM_SERVICE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetaDataStillImageCameraPrewarmService">
      <MemberSignature Language="C#" Value="public const string MetaDataStillImageCameraPrewarmService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MetaDataStillImageCameraPrewarmService" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.MetaDataStillImageCameraPrewarmService" />
      <MemberSignature Language="F#" Value="val mutable MetaDataStillImageCameraPrewarmService : string" Usage="Android.Provider.MediaStore.MetaDataStillImageCameraPrewarmService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("META_DATA_STILL_IMAGE_CAMERA_PREWARM_SERVICE", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("META_DATA_STILL_IMAGE_CAMERA_PREWARM_SERVICE", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Name under which an activity handling <c>#INTENT_ACTION_STILL_IMAGE_CAMERA</c> or
            <c>#INTENT_ACTION_STILL_IMAGE_CAMERA_SECURE</c> publishes the service name for its prewarm
            service.</summary>
        <remarks>
          <para>Name under which an activity handling <c>#INTENT_ACTION_STILL_IMAGE_CAMERA</c> or
            <c>#INTENT_ACTION_STILL_IMAGE_CAMERA_SECURE</c> publishes the service name for its prewarm
            service.</para>
          <para>This meta-data should reference the fully qualified class name of the prewarm service
            extending <c>CameraPrewarmService</c>.</para>
          <para>The prewarm service will get bound and receive a prewarm signal
            <c>CameraPrewarmService#onPrewarm()</c> when a camera launch intent fire might be imminent.
            An application implementing a prewarm service should do the absolute minimum amount of work
            to initialize the camera in order to reduce startup time in likely case that shortly after a
            camera launch intent would be sent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#META_DATA_STILL_IMAGE_CAMERA_PREWARM_SERVICE" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.META_DATA_STILL_IMAGE_CAMERA_PREWARM_SERVICE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyCloudMediaChangedEvent">
      <MemberSignature Language="C#" Value="public static void NotifyCloudMediaChangedEvent (Android.Content.ContentResolver resolver, string authority, string currentMediaCollectionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NotifyCloudMediaChangedEvent(class Android.Content.ContentResolver resolver, string authority, string currentMediaCollectionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.MediaStore.NotifyCloudMediaChangedEvent(Android.Content.ContentResolver,System.String,System.String)" />
      <MemberSignature Language="F#" Value="static member NotifyCloudMediaChangedEvent : Android.Content.ContentResolver * string * string -&gt; unit" Usage="Android.Provider.MediaStore.NotifyCloudMediaChangedEvent (resolver, authority, currentMediaCollectionId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("notifyCloudMediaChangedEvent", "(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("notifyCloudMediaChangedEvent", "(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolver" Type="Android.Content.ContentResolver" />
        <Parameter Name="authority" Type="System.String" />
        <Parameter Name="currentMediaCollectionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resolver">To be added.</param>
        <param name="authority">To be added.</param>
        <param name="currentMediaCollectionId">To be added.</param>
        <summary>Notifies the OS about a cloud media event requiring a full or incremental media collection
            sync for the currently enabled cloud provider, <c>authority</c>.</summary>
        <remarks>
          <para>Notifies the OS about a cloud media event requiring a full or incremental media collection
            sync for the currently enabled cloud provider, <c>authority</c>.
            
            The OS will schedule the sync in the background and will attempt to batch frequent
            notifications into a single sync event.
            
            If the caller is not the currently enabled cloud provider as returned by
            <c>#isCurrentCloudMediaProviderAuthority(ContentResolver, String)</c>, the request will be
            unsuccessful.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#notifyCloudMediaChangedEvent(android.content.ContentResolver,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.notifyCloudMediaChangedEvent(android.content.ContentResolver, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PickImagesMaxLimit">
      <MemberSignature Language="C#" Value="public static int PickImagesMaxLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 PickImagesMaxLimit" />
      <MemberSignature Language="DocId" Value="P:Android.Provider.MediaStore.PickImagesMaxLimit" />
      <MemberSignature Language="F#" Value="static member PickImagesMaxLimit : int" Usage="Android.Provider.MediaStore.PickImagesMaxLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPickImagesMaxLimit", "()I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPickImagesMaxLimit", "()I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The maximum limit for the number of items that can be selected using
            <c>MediaStore#ACTION_PICK_IMAGES</c> when launched in multiple selection mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The maximum limit for the number of items that can be selected using
            <c>MediaStore#ACTION_PICK_IMAGES</c> when launched in multiple selection mode.
            This can be used as a constant value for <c>MediaStore#EXTRA_PICK_IMAGES_MAX</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#getPickImagesMaxLimit()" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.getPickImagesMaxLimit()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PickImagesTabAlbums">
      <MemberSignature Language="C#" Value="public const Android.Provider.MediaStorePickImagesTab PickImagesTabAlbums = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Provider.MediaStorePickImagesTab PickImagesTabAlbums = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.PickImagesTabAlbums" />
      <MemberSignature Language="F#" Value="val mutable PickImagesTabAlbums : Android.Provider.MediaStorePickImagesTab" Usage="Android.Provider.MediaStore.PickImagesTabAlbums" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[Android.Runtime.Register("PICK_IMAGES_TAB_ALBUMS", ApiSince=35)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PICK_IMAGES_TAB_ALBUMS", ApiSince=35)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Provider.MediaStorePickImagesTab enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Provider.MediaStorePickImagesTab enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android35.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android35.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Provider.MediaStorePickImagesTab</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>One of the permitted values for <c>MediaStore#EXTRA_PICK_IMAGES_LAUNCH_TAB</c> to open the
            picker with albums tab.</summary>
        <remarks>
          <para>One of the permitted values for <c>MediaStore#EXTRA_PICK_IMAGES_LAUNCH_TAB</c> to open the
            picker with albums tab.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#PICK_IMAGES_TAB_ALBUMS" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.PICK_IMAGES_TAB_ALBUMS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PickImagesTabImages">
      <MemberSignature Language="C#" Value="public const Android.Provider.MediaStorePickImagesTab PickImagesTabImages = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Provider.MediaStorePickImagesTab PickImagesTabImages = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.PickImagesTabImages" />
      <MemberSignature Language="F#" Value="val mutable PickImagesTabImages : Android.Provider.MediaStorePickImagesTab" Usage="Android.Provider.MediaStore.PickImagesTabImages" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[Android.Runtime.Register("PICK_IMAGES_TAB_IMAGES", ApiSince=35)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PICK_IMAGES_TAB_IMAGES", ApiSince=35)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Provider.MediaStorePickImagesTab enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Provider.MediaStorePickImagesTab enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android35.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android35.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Provider.MediaStorePickImagesTab</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>One of the permitted values for <c>MediaStore#EXTRA_PICK_IMAGES_LAUNCH_TAB</c> to open the
            picker with photos tab.</summary>
        <remarks>
          <para>One of the permitted values for <c>MediaStore#EXTRA_PICK_IMAGES_LAUNCH_TAB</c> to open the
            picker with photos tab.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#PICK_IMAGES_TAB_IMAGES" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.PICK_IMAGES_TAB_IMAGES</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryArgIncludeRecentlyUnmountedVolumes">
      <MemberSignature Language="C#" Value="public const string QueryArgIncludeRecentlyUnmountedVolumes;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string QueryArgIncludeRecentlyUnmountedVolumes" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.QueryArgIncludeRecentlyUnmountedVolumes" />
      <MemberSignature Language="F#" Value="val mutable QueryArgIncludeRecentlyUnmountedVolumes : string" Usage="Android.Provider.MediaStore.QueryArgIncludeRecentlyUnmountedVolumes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("QUERY_ARG_INCLUDE_RECENTLY_UNMOUNTED_VOLUMES", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("QUERY_ARG_INCLUDE_RECENTLY_UNMOUNTED_VOLUMES", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Flag that requests <c>ContentResolver#query</c> to include content from
            recently unmounted volumes.</summary>
        <remarks>
          <para>Flag that requests <c>ContentResolver#query</c> to include content from
            recently unmounted volumes.</para>
          <para>When the flag is set, <c>ContentResolver#query</c> will return content
            from all volumes(i.e., both mounted and recently unmounted volume whose
            content is still held by MediaProvider).</para>
          <para>Note that the query result doesn't provide any hint for content from
            unmounted volume. It's strongly recommended to use default query to
            avoid accessing/operating on the content that are not available on the
            device.</para>
          <para>The flag is useful for apps which manage their own database and
            query MediaStore in order to synchronize between MediaStore database
            and their own database.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#QUERY_ARG_INCLUDE_RECENTLY_UNMOUNTED_VOLUMES" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.QUERY_ARG_INCLUDE_RECENTLY_UNMOUNTED_VOLUMES</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryArgLatestSelectionOnly">
      <MemberSignature Language="C#" Value="public const string QueryArgLatestSelectionOnly;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string QueryArgLatestSelectionOnly" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.QueryArgLatestSelectionOnly" />
      <MemberSignature Language="F#" Value="val mutable QueryArgLatestSelectionOnly : string" Usage="Android.Provider.MediaStore.QueryArgLatestSelectionOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[Android.Runtime.Register("QUERY_ARG_LATEST_SELECTION_ONLY", ApiSince=35)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("QUERY_ARG_LATEST_SELECTION_ONLY", ApiSince=35)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android35.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android35.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Flag that indicates if only the latest selection in the photoPicker for
            the calling app should be returned.</summary>
        <remarks>
          <para>Flag that indicates if only the latest selection in the photoPicker for
            the calling app should be returned. If set to true, all items that were
            granted to the calling app in the last selection are returned.</para>
          <para>Selection in this scenario refers to when the user selects items in
            &lt;b&gt; the permission prompt photo picker&lt;/b&gt;. The access for these items
            is granted to the calling app and these grants are persisted unless the
            user deselects a granted item explicitly.</para>
          <para>The result excludes items owned by the calling app unless they are
            explicitly selected by the user.</para>
          <para>Note: If there has been no user selections after the introduction of
            this feature then all the granted items will be returned.</para>
          <para>This key can be placed in a <c>Bundle</c> of extras and passed to
            <c>ContentResolver#query</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#QUERY_ARG_LATEST_SELECTION_ONLY" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.QUERY_ARG_LATEST_SELECTION_ONLY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryArgMatchFavorite">
      <MemberSignature Language="C#" Value="public const string QueryArgMatchFavorite;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string QueryArgMatchFavorite" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.QueryArgMatchFavorite" />
      <MemberSignature Language="F#" Value="val mutable QueryArgMatchFavorite : string" Usage="Android.Provider.MediaStore.QueryArgMatchFavorite" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("QUERY_ARG_MATCH_FAVORITE", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("QUERY_ARG_MATCH_FAVORITE", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specify how <c>MediaColumns#IS_FAVORITE</c> items should be filtered
            when performing a <c>MediaStore</c> operation.</summary>
        <remarks>
          <para>Specify how <c>MediaColumns#IS_FAVORITE</c> items should be filtered
            when performing a <c>MediaStore</c> operation.</para>
          <para>This key can be placed in a <c>Bundle</c> of extras and passed to
            <c>ContentResolver#query</c>, <c>ContentResolver#update</c>, or
            <c>ContentResolver#delete</c>.</para>
          <para>By default, favorite items are &lt;em&gt;not&lt;/em&gt; filtered away from
            operations.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#QUERY_ARG_MATCH_FAVORITE" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.QUERY_ARG_MATCH_FAVORITE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryArgMatchPending">
      <MemberSignature Language="C#" Value="public const string QueryArgMatchPending;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string QueryArgMatchPending" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.QueryArgMatchPending" />
      <MemberSignature Language="F#" Value="val mutable QueryArgMatchPending : string" Usage="Android.Provider.MediaStore.QueryArgMatchPending" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("QUERY_ARG_MATCH_PENDING", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("QUERY_ARG_MATCH_PENDING", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specify how <c>MediaColumns#IS_PENDING</c> items should be filtered when
            performing a <c>MediaStore</c> operation.</summary>
        <remarks>
          <para>Specify how <c>MediaColumns#IS_PENDING</c> items should be filtered when
            performing a <c>MediaStore</c> operation.</para>
          <para>This key can be placed in a <c>Bundle</c> of extras and passed to
            <c>ContentResolver#query</c>, <c>ContentResolver#update</c>, or
            <c>ContentResolver#delete</c>.</para>
          <para>By default, pending items are filtered away from operations.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#QUERY_ARG_MATCH_PENDING" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.QUERY_ARG_MATCH_PENDING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryArgMatchTrashed">
      <MemberSignature Language="C#" Value="public const string QueryArgMatchTrashed;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string QueryArgMatchTrashed" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.QueryArgMatchTrashed" />
      <MemberSignature Language="F#" Value="val mutable QueryArgMatchTrashed : string" Usage="Android.Provider.MediaStore.QueryArgMatchTrashed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("QUERY_ARG_MATCH_TRASHED", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("QUERY_ARG_MATCH_TRASHED", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specify how <c>MediaColumns#IS_TRASHED</c> items should be filtered when
            performing a <c>MediaStore</c> operation.</summary>
        <remarks>
          <para>Specify how <c>MediaColumns#IS_TRASHED</c> items should be filtered when
            performing a <c>MediaStore</c> operation.</para>
          <para>This key can be placed in a <c>Bundle</c> of extras and passed to
            <c>ContentResolver#query</c>, <c>ContentResolver#update</c>, or
            <c>ContentResolver#delete</c>.</para>
          <para>By default, trashed items are filtered away from operations.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#QUERY_ARG_MATCH_TRASHED" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.QUERY_ARG_MATCH_TRASHED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryArgRelatedUri">
      <MemberSignature Language="C#" Value="public const string QueryArgRelatedUri;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string QueryArgRelatedUri" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.QueryArgRelatedUri" />
      <MemberSignature Language="F#" Value="val mutable QueryArgRelatedUri : string" Usage="Android.Provider.MediaStore.QueryArgRelatedUri" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("QUERY_ARG_RELATED_URI", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("QUERY_ARG_RELATED_URI", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specify a <c>Uri</c> that is "related" to the current operation being
            performed.</summary>
        <remarks>
          <para>Specify a <c>Uri</c> that is "related" to the current operation being
            performed.</para>
          <para>This is typically used to allow an operation that may normally be
            rejected, such as making a copy of a pre-existing image located under a
            <c>MediaColumns#RELATIVE_PATH</c> where new images are not allowed.</para>
          <para>It's strongly recommended that when making a copy of pre-existing content
            that you define the "original document ID" GUID as defined by the &lt;em&gt;XMP
            Media Management&lt;/em&gt; standard.</para>
          <para>This key can be placed in a <c>Bundle</c> of extras and passed to
            <c>ContentResolver#insert</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#QUERY_ARG_RELATED_URI" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.QUERY_ARG_RELATED_URI</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIncludePending">
      <MemberSignature Language="C#" Value="public static Android.Net.Uri SetIncludePending (Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Net.Uri SetIncludePending(class Android.Net.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.MediaStore.SetIncludePending(Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="static member SetIncludePending : Android.Net.Uri -&gt; Android.Net.Uri" Usage="Android.Provider.MediaStore.SetIncludePending uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setIncludePending", "(Landroid/net/Uri;)Landroid/net/Uri;", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setIncludePending", "(Landroid/net/Uri;)Landroid/net/Uri;", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <summary>Update the given <c>Uri</c> to also include any pending media items from
            calls such as
            <c>ContentResolver#query(Uri, String[], Bundle, CancellationSignal)</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Update the given <c>Uri</c> to also include any pending media items from
            calls such as
            <c>ContentResolver#query(Uri, String[], Bundle, CancellationSignal)</c>.
            By default no pending items are returned.</para>
          <para>This member is deprecated. consider migrating to <c>#QUERY_ARG_MATCH_PENDING</c> which
                        is more expressive.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#setIncludePending(android.net.Uri)" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.setIncludePending(android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRequireOriginal">
      <MemberSignature Language="C#" Value="public static Android.Net.Uri SetRequireOriginal (Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Net.Uri SetRequireOriginal(class Android.Net.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.MediaStore.SetRequireOriginal(Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="static member SetRequireOriginal : Android.Net.Uri -&gt; Android.Net.Uri" Usage="Android.Provider.MediaStore.SetRequireOriginal uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setRequireOriginal", "(Landroid/net/Uri;)Landroid/net/Uri;", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setRequireOriginal", "(Landroid/net/Uri;)Landroid/net/Uri;", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <summary>Update the given <c>Uri</c> to indicate that the caller requires the
            original file contents when calling
            <c>ContentResolver#openFileDescriptor(Uri, String)</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Update the given <c>Uri</c> to indicate that the caller requires the
            original file contents when calling
            <c>ContentResolver#openFileDescriptor(Uri, String)</c>.</para>
          <para>This can be useful when the caller wants to ensure they're backing up the
            exact bytes of the underlying media, without any Exif redaction being
            performed.</para>
          <para>If the original file contents cannot be provided, a
            <c>UnsupportedOperationException</c> will be thrown when the returned
            <c>Uri</c> is used, such as when the caller doesn't hold
            <c>android.Manifest.permission#ACCESS_MEDIA_LOCATION</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#setRequireOriginal(android.net.Uri)" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.setRequireOriginal(android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Provider.MediaStore.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Provider.MediaStore.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Provider.MediaStore.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Provider.MediaStore.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownString">
      <MemberSignature Language="C#" Value="public const string UnknownString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UnknownString" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.UnknownString" />
      <MemberSignature Language="F#" Value="val mutable UnknownString : string" Usage="Android.Provider.MediaStore.UnknownString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("UNKNOWN_STRING")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("UNKNOWN_STRING")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The string that is used when a media attribute is not known.</summary>
        <remarks>
          <para>The string that is used when a media attribute is not known. For example,
            if an audio file does not have any meta data, the artist and album columns
            will be set to this value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#UNKNOWN_STRING" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.UNKNOWN_STRING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="VolumeExternal">
      <MemberSignature Language="C#" Value="public const string VolumeExternal;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string VolumeExternal" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.VolumeExternal" />
      <MemberSignature Language="F#" Value="val mutable VolumeExternal : string" Usage="Android.Provider.MediaStore.VolumeExternal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("VOLUME_EXTERNAL", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("VOLUME_EXTERNAL", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Synthetic volume name that provides a view of all content across the
            "external" storage of the device.</summary>
        <remarks>
          <para>Synthetic volume name that provides a view of all content across the
            "external" storage of the device.</para>
          <para>This synthetic volume provides a merged view of all media across all
            currently attached external storage devices.</para>
          <para>Because this is a synthetic volume, you can't insert new content into
            this volume. Instead, you can insert content into a specific storage
            volume obtained from <c>#getExternalVolumeNames(Context)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#VOLUME_EXTERNAL" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.VOLUME_EXTERNAL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolumeExternalPrimary">
      <MemberSignature Language="C#" Value="public const string VolumeExternalPrimary;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string VolumeExternalPrimary" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.VolumeExternalPrimary" />
      <MemberSignature Language="F#" Value="val mutable VolumeExternalPrimary : string" Usage="Android.Provider.MediaStore.VolumeExternalPrimary" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("VOLUME_EXTERNAL_PRIMARY", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("VOLUME_EXTERNAL_PRIMARY", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specific volume name that represents the primary external storage device
            at <c>Environment#getExternalStorageDirectory()</c>.</summary>
        <remarks>
          <para>Specific volume name that represents the primary external storage device
            at <c>Environment#getExternalStorageDirectory()</c>.</para>
          <para>This volume may not always be available, such as when the user has
            ejected the device. You can find a list of all specific volume names
            using <c>#getExternalVolumeNames(Context)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#VOLUME_EXTERNAL_PRIMARY" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.VOLUME_EXTERNAL_PRIMARY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolumeInternal">
      <MemberSignature Language="C#" Value="public const string VolumeInternal;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string VolumeInternal" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.MediaStore.VolumeInternal" />
      <MemberSignature Language="F#" Value="val mutable VolumeInternal : string" Usage="Android.Provider.MediaStore.VolumeInternal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("VOLUME_INTERNAL", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("VOLUME_INTERNAL", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Synthetic volume name that provides a view of all content across the
            "internal" storage of the device.</summary>
        <remarks>
          <para>Synthetic volume name that provides a view of all content across the
            "internal" storage of the device.</para>
          <para>This synthetic volume provides a merged view of all media distributed
            with the device, such as built-in ringtones and wallpapers.</para>
          <para>Because this is a synthetic volume, you can't insert new content into
            this volume.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/MediaStore#VOLUME_INTERNAL" title="Reference documentation">Java documentation for <code>android.provider.MediaStore.VOLUME_INTERNAL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
