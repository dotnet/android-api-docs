<Type Name="CardEmulation" FullName="Android.Nfc.CardEmulators.CardEmulation">
  <TypeSignature Language="C#" Value="public sealed class CardEmulation : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CardEmulation extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Nfc.CardEmulators.CardEmulation" />
  <TypeSignature Language="F#" Value="type CardEmulation = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/nfc/cardemulation/CardEmulation", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/nfc/cardemulation/CardEmulation", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="19">
    <summary>This class can be used to query the state of
            NFC card emulation services.</summary>
    <remarks>
      <para>This class can be used to query the state of
            NFC card emulation services.
            
            For a general introduction into NFC card emulation,
            please read the <see href="https://developer.android.com/guide/topics/connectivity/nfc/hce.html">
            NFC card emulation developer guide</see>.&lt;/p&gt;</para>
      <para>Use of this class requires the
            <c>PackageManager#FEATURE_NFC_HOST_CARD_EMULATION</c> to be present
            on the device.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActionChangeDefault">
      <MemberSignature Language="C#" Value="public const string ActionChangeDefault;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionChangeDefault" />
      <MemberSignature Language="DocId" Value="F:Android.Nfc.CardEmulators.CardEmulation.ActionChangeDefault" />
      <MemberSignature Language="F#" Value="val mutable ActionChangeDefault : string" Usage="Android.Nfc.CardEmulators.CardEmulation.ActionChangeDefault" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_CHANGE_DEFAULT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_CHANGE_DEFAULT")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-34.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android35.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android35.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity action: ask the user to change the default
            card emulation service for a certain category.</summary>
        <remarks>
          <para>Activity action: ask the user to change the default
            card emulation service for a certain category. This will
            show a dialog that asks the user whether they want to
            replace the current default service with the service
            identified with the ComponentName specified in
            <c>#EXTRA_SERVICE_COMPONENT</c>, for the category
            specified in <c>#EXTRA_CATEGORY</c>. There is an optional
            extra field using <c>Intent#EXTRA_USER</c> to specify
            the <c>UserHandle</c> of the user that owns the app.</para>
          <para>This member is deprecated. Please use <c>android.app.role.RoleManager#createRequestRoleIntent(String)</c>
            with <c>android.app.role.RoleManager#ROLE_WALLET</c> parameter
            and <c>Activity#startActivityForResult(Intent, int)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#ACTION_CHANGE_DEFAULT" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.ACTION_CHANGE_DEFAULT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AidsForPreferredPaymentService">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt;? AidsForPreferredPaymentService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; AidsForPreferredPaymentService" />
      <MemberSignature Language="DocId" Value="P:Android.Nfc.CardEmulators.CardEmulation.AidsForPreferredPaymentService" />
      <MemberSignature Language="F#" Value="member this.AidsForPreferredPaymentService : System.Collections.Generic.IList&lt;string&gt;" Usage="Android.Nfc.CardEmulators.CardEmulation.AidsForPreferredPaymentService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAidsForPreferredPaymentService", "()Ljava/util/List;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAidsForPreferredPaymentService", "()Ljava/util/List;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.RequiresPermission("android.permission.NFC_PREFERRED_PAYMENT_INFO")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.RequiresPermission("android.permission.NFC_PREFERRED_PAYMENT_INFO")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieves the registered AIDs for the preferred payment service.</summary>
        <value>The list of AIDs registered for this category, or null if it couldn't be found.</value>
        <remarks>
          <para>Retrieves the registered AIDs for the preferred payment service.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#getAidsForPreferredPaymentService()" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.getAidsForPreferredPaymentService()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryAllowsForegroundPreference">
      <MemberSignature Language="C#" Value="public bool CategoryAllowsForegroundPreference (string? category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CategoryAllowsForegroundPreference(string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.CardEmulators.CardEmulation.CategoryAllowsForegroundPreference(System.String)" />
      <MemberSignature Language="F#" Value="member this.CategoryAllowsForegroundPreference : string -&gt; bool" Usage="cardEmulation.CategoryAllowsForegroundPreference category" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("categoryAllowsForegroundPreference", "(Ljava/lang/String;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("categoryAllowsForegroundPreference", "(Ljava/lang/String;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category">The category, e.g. <c>#CATEGORY_PAYMENT</c></param>
        <summary>Returns whether the user has allowed AIDs registered in the
            specified category to be handled by a service that is preferred
            by the foreground application, instead of by a pre-configured default.</summary>
        <returns>whether AIDs in the category can be handled by a service
                    specified by the foreground app.</returns>
        <remarks>
          <para>Returns whether the user has allowed AIDs registered in the
            specified category to be handled by a service that is preferred
            by the foreground application, instead of by a pre-configured default.
            
            Foreground applications can set such preferences using the
            <c>#setPreferredService(Activity, ComponentName)</c> method.</para>
          <para>Starting with <c>Build.VERSION_CODES#VANILLA_ICE_CREAM</c>, this method will always
            return true.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#categoryAllowsForegroundPreference(java.lang.String)" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.categoryAllowsForegroundPreference(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryOther">
      <MemberSignature Language="C#" Value="public const string CategoryOther;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CategoryOther" />
      <MemberSignature Language="DocId" Value="F:Android.Nfc.CardEmulators.CardEmulation.CategoryOther" />
      <MemberSignature Language="F#" Value="val mutable CategoryOther : string" Usage="Android.Nfc.CardEmulators.CardEmulation.CategoryOther" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CATEGORY_OTHER")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CATEGORY_OTHER")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-34.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Category that can be used for all other card emulation
            services.</summary>
        <remarks>
          <para>Category that can be used for all other card emulation
            services.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#CATEGORY_OTHER" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.CATEGORY_OTHER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryPayment">
      <MemberSignature Language="C#" Value="public const string CategoryPayment;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CategoryPayment" />
      <MemberSignature Language="DocId" Value="F:Android.Nfc.CardEmulators.CardEmulation.CategoryPayment" />
      <MemberSignature Language="F#" Value="val mutable CategoryPayment : string" Usage="Android.Nfc.CardEmulators.CardEmulation.CategoryPayment" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CATEGORY_PAYMENT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CATEGORY_PAYMENT")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-34.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Category used for NFC payment services.</summary>
        <remarks>
          <para>Category used for NFC payment services.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#CATEGORY_PAYMENT" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.CATEGORY_PAYMENT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DescriptionForPreferredPaymentService">
      <MemberSignature Language="C#" Value="public string? DescriptionForPreferredPaymentService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DescriptionForPreferredPaymentService" />
      <MemberSignature Language="DocId" Value="P:Android.Nfc.CardEmulators.CardEmulation.DescriptionForPreferredPaymentService" />
      <MemberSignature Language="F#" Value="member this.DescriptionForPreferredPaymentService : string" Usage="Android.Nfc.CardEmulators.CardEmulation.DescriptionForPreferredPaymentService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DescriptionForPreferredPaymentServiceFormatted">
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence? DescriptionForPreferredPaymentServiceFormatted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence DescriptionForPreferredPaymentServiceFormatted" />
      <MemberSignature Language="DocId" Value="P:Android.Nfc.CardEmulators.CardEmulation.DescriptionForPreferredPaymentServiceFormatted" />
      <MemberSignature Language="F#" Value="member this.DescriptionForPreferredPaymentServiceFormatted : Java.Lang.ICharSequence" Usage="Android.Nfc.CardEmulators.CardEmulation.DescriptionForPreferredPaymentServiceFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDescriptionForPreferredPaymentService", "()Ljava/lang/CharSequence;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDescriptionForPreferredPaymentService", "()Ljava/lang/CharSequence;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.RequiresPermission("android.permission.NFC_PREFERRED_PAYMENT_INFO")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.RequiresPermission("android.permission.NFC_PREFERRED_PAYMENT_INFO")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a user-visible description of the preferred payment service.</summary>
        <value>the preferred payment service description</value>
        <remarks>
          <para>Returns a user-visible description of the preferred payment service.</para>
          <para>Starting with <c>Build.VERSION_CODES#VANILLA_ICE_CREAM</c>, the preferred payment service
            no longer exists and is replaced by <c>android.app.role.RoleManager#ROLE_WALLET</c>. This
            will return the description for one of the services registered by the role holder (if any).
            If there are multiple services registered, it is unspecified which of those will be used
            to obtain the service description here.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#getDescriptionForPreferredPaymentService()" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.getDescriptionForPreferredPaymentService()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraCategory">
      <MemberSignature Language="C#" Value="public const string ExtraCategory;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraCategory" />
      <MemberSignature Language="DocId" Value="F:Android.Nfc.CardEmulators.CardEmulation.ExtraCategory" />
      <MemberSignature Language="F#" Value="val mutable ExtraCategory : string" Usage="Android.Nfc.CardEmulators.CardEmulation.ExtraCategory" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_CATEGORY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_CATEGORY")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-34.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The category extra for <c>#ACTION_CHANGE_DEFAULT</c>.</summary>
        <remarks>
          <para>The category extra for <c>#ACTION_CHANGE_DEFAULT</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#EXTRA_CATEGORY" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.EXTRA_CATEGORY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="F:Android.Nfc.CardEmulators.CardEmulation.ActionChangeDefault" />
      </Docs>
    </Member>
    <Member MemberName="ExtraServiceComponent">
      <MemberSignature Language="C#" Value="public const string ExtraServiceComponent;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraServiceComponent" />
      <MemberSignature Language="DocId" Value="F:Android.Nfc.CardEmulators.CardEmulation.ExtraServiceComponent" />
      <MemberSignature Language="F#" Value="val mutable ExtraServiceComponent : string" Usage="Android.Nfc.CardEmulators.CardEmulation.ExtraServiceComponent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_SERVICE_COMPONENT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_SERVICE_COMPONENT")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-34.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The service <c>ComponentName</c> object passed in as an
            extra for <c>#ACTION_CHANGE_DEFAULT</c>.</summary>
        <remarks>
          <para>The service <c>ComponentName</c> object passed in as an
            extra for <c>#ACTION_CHANGE_DEFAULT</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#EXTRA_SERVICE_COMPONENT" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.EXTRA_SERVICE_COMPONENT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="F:Android.Nfc.CardEmulators.CardEmulation.ActionChangeDefault" />
      </Docs>
    </Member>
    <Member MemberName="GetAidsForService">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt;? GetAidsForService (Android.Content.ComponentName? service, string? category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;string&gt; GetAidsForService(class Android.Content.ComponentName service, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.CardEmulators.CardEmulation.GetAidsForService(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="member this.GetAidsForService : Android.Content.ComponentName * string -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="cardEmulation.GetAidsForService (service, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAidsForService", "(Landroid/content/ComponentName;Ljava/lang/String;)Ljava/util/List;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAidsForService", "(Landroid/content/ComponentName;Ljava/lang/String;)Ljava/util/List;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-android-34.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Android.Content.ComponentName" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="service">The component name of the service</param>
        <param name="category">The category for which the AIDs were registered,
                            e.g. <c>#CATEGORY_PAYMENT</c></param>
        <summary>Retrieves the currently registered AIDs for the specified
            category for a service.</summary>
        <returns>The list of AIDs registered for this category, or null if it couldn't be found.</returns>
        <remarks>
          <para>Retrieves the currently registered AIDs for the specified
            category for a service.</para>
          <para>Note that this will only return AIDs that were dynamically
            registered using <c>#registerAidsForService(ComponentName, String, List)</c>
            method. It will *not* return AIDs that were statically registered
            in the manifest.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#getAidsForService(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.getAidsForService(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Android.Nfc.CardEmulators.CardEmulation? GetInstance (Android.Nfc.NfcAdapter? adapter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Nfc.CardEmulators.CardEmulation GetInstance(class Android.Nfc.NfcAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.CardEmulators.CardEmulation.GetInstance(Android.Nfc.NfcAdapter)" />
      <MemberSignature Language="F#" Value="static member GetInstance : Android.Nfc.NfcAdapter -&gt; Android.Nfc.CardEmulators.CardEmulation" Usage="Android.Nfc.CardEmulators.CardEmulation.GetInstance adapter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Landroid/nfc/NfcAdapter;)Landroid/nfc/cardemulation/CardEmulation;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Landroid/nfc/NfcAdapter;)Landroid/nfc/cardemulation/CardEmulation;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.CardEmulators.CardEmulation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="Android.Nfc.NfcAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">A reference to an NfcAdapter object.</param>
        <summary>Helper to get an instance of this class.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Helper to get an instance of this class.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#getInstance(android.nfc.NfcAdapter)" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.getInstance(android.nfc.NfcAdapter)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelectionModeForCategory">
      <MemberSignature Language="C#" Value="public Android.Nfc.CardEmulators.CardSelectionMode GetSelectionModeForCategory (string? category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Android.Nfc.CardEmulators.CardSelectionMode GetSelectionModeForCategory(string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.CardEmulators.CardEmulation.GetSelectionModeForCategory(System.String)" />
      <MemberSignature Language="F#" Value="member this.GetSelectionModeForCategory : string -&gt; Android.Nfc.CardEmulators.CardSelectionMode" Usage="cardEmulation.GetSelectionModeForCategory category" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSelectionModeForCategory", "(Ljava/lang/String;)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSelectionModeForCategory", "(Ljava/lang/String;)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.CardEmulators.CardSelectionMode</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-android-34.0">
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category">The category, for example <c>#CATEGORY_PAYMENT</c></param>
        <summary>Returns the service selection mode for the passed in category.</summary>
        <returns>the selection mode for the passed in category</returns>
        <remarks>
          <para>Returns the service selection mode for the passed in category.
            Valid return values are:</para>
          <para>
            <c>#SELECTION_MODE_PREFER_DEFAULT</c> the user has requested a default
               service for this category, which will be preferred.</para>
          <para>
            <c>#SELECTION_MODE_ALWAYS_ASK</c> the user has requested to be asked
               every time what service they would like to use in this category.</para>
          <para>
            <c>#SELECTION_MODE_ASK_IF_CONFLICT</c> the user will only be asked
               to pick a service if there is a conflict.</para>
          <para>Starting with <c>Build.VERSION_CODES#VANILLA_ICE_CREAM</c>, the default service defined
            by the holder of <c>android.app.role.RoleManager#ROLE_WALLET</c> and is category agnostic.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#getSelectionModeForCategory(java.lang.String)" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.getSelectionModeForCategory(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultServiceForAid">
      <MemberSignature Language="C#" Value="public bool IsDefaultServiceForAid (Android.Content.ComponentName? service, string? aid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDefaultServiceForAid(class Android.Content.ComponentName service, string aid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.CardEmulators.CardEmulation.IsDefaultServiceForAid(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="member this.IsDefaultServiceForAid : Android.Content.ComponentName * string -&gt; bool" Usage="cardEmulation.IsDefaultServiceForAid (service, aid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isDefaultServiceForAid", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isDefaultServiceForAid", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Android.Content.ComponentName" />
        <Parameter Name="aid" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="service">The ComponentName of the service</param>
        <param name="aid">The ISO7816-4 Application ID</param>
        <summary>Allows an application to query whether a service is currently
            the default handler for a specified ISO7816-4 Application ID.</summary>
        <returns>whether the service is the default handler for the specified AID
            
            &lt;p class="note"&gt;Requires the <c>android.Manifest.permission#NFC</c> permission.</returns>
        <remarks>
          <para>Allows an application to query whether a service is currently
            the default handler for a specified ISO7816-4 Application ID.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#isDefaultServiceForAid(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.isDefaultServiceForAid(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultServiceForCategory">
      <MemberSignature Language="C#" Value="public bool IsDefaultServiceForCategory (Android.Content.ComponentName? service, string? category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDefaultServiceForCategory(class Android.Content.ComponentName service, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.CardEmulators.CardEmulation.IsDefaultServiceForCategory(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="member this.IsDefaultServiceForCategory : Android.Content.ComponentName * string -&gt; bool" Usage="cardEmulation.IsDefaultServiceForCategory (service, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isDefaultServiceForCategory", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isDefaultServiceForCategory", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Android.Content.ComponentName" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="service">The ComponentName of the service</param>
        <param name="category">The category</param>
        <summary>Allows an application to query whether a service is currently
            the default service to handle a card emulation category.</summary>
        <returns>whether service is currently the default service for the category.
            
            &lt;p class="note"&gt;Requires the <c>android.Manifest.permission#NFC</c> permission.</returns>
        <remarks>
          <para>Allows an application to query whether a service is currently
            the default service to handle a card emulation category.</para>
          <para>Note that if <c>#getSelectionModeForCategory(String)</c>
            returns <c>#SELECTION_MODE_ALWAYS_ASK</c> or <c>#SELECTION_MODE_ASK_IF_CONFLICT</c>,
            this method will always return false. That is because in these
            selection modes a default can't be set at the category level. For categories where
            the selection mode is <c>#SELECTION_MODE_ALWAYS_ASK</c> or
            <c>#SELECTION_MODE_ASK_IF_CONFLICT</c>, use
            <c>#isDefaultServiceForAid(ComponentName, String)</c> to determine whether a service
            is the default for a specific AID.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#isDefaultServiceForCategory(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.isDefaultServiceForCategory(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Nfc.CardEmulators.CardEmulation.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Nfc.CardEmulators.CardEmulation.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-34.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterAidsForService">
      <MemberSignature Language="C#" Value="public bool RegisterAidsForService (Android.Content.ComponentName? service, string? category, System.Collections.Generic.IList&lt;string&gt;? aids);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RegisterAidsForService(class Android.Content.ComponentName service, string category, class System.Collections.Generic.IList`1&lt;string&gt; aids) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.CardEmulators.CardEmulation.RegisterAidsForService(Android.Content.ComponentName,System.String,System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="F#" Value="member this.RegisterAidsForService : Android.Content.ComponentName * string * System.Collections.Generic.IList&lt;string&gt; -&gt; bool" Usage="cardEmulation.RegisterAidsForService (service, category, aids)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerAidsForService", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/util/List;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerAidsForService", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/util/List;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Android.Content.ComponentName" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="aids" Type="System.Collections.Generic.IList&lt;System.String&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="service">The component name of the service</param>
        <param name="category">The category of AIDs to be registered</param>
        <param name="aids">A list containing the AIDs to be registered</param>
        <summary>Registers a list of AIDs for a specific category for the
            specified service.</summary>
        <returns>whether the registration was successful.</returns>
        <remarks>
          <para>Registers a list of AIDs for a specific category for the
            specified service.</para>
          <para>If a list of AIDs for that category was previously
            registered for this service (either statically
            through the manifest, or dynamically by using this API),
            that list of AIDs will be replaced with this one.</para>
          <para>Note that you can only register AIDs for a service that
            is running under the same UID as the caller of this API. Typically
            this means you need to call this from the same
            package as the service itself, though UIDs can also
            be shared between packages using shared UIDs.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#registerAidsForService(android.content.ComponentName,%20java.lang.String,%20java.util.List%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.registerAidsForService(android.content.ComponentName, java.lang.String, java.util.List&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterPollingLoopFilterForService">
      <MemberSignature Language="C#" Value="public bool RegisterPollingLoopFilterForService (Android.Content.ComponentName service, string pollingLoopFilter, bool autoTransact);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RegisterPollingLoopFilterForService(class Android.Content.ComponentName service, string pollingLoopFilter, bool autoTransact) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.CardEmulators.CardEmulation.RegisterPollingLoopFilterForService(Android.Content.ComponentName,System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.RegisterPollingLoopFilterForService : Android.Content.ComponentName * string * bool -&gt; bool" Usage="cardEmulation.RegisterPollingLoopFilterForService (service, pollingLoopFilter, autoTransact)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[Android.Runtime.Register("registerPollingLoopFilterForService", "(Landroid/content/ComponentName;Ljava/lang/String;Z)Z", "", ApiSince=35)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerPollingLoopFilterForService", "(Landroid/content/ComponentName;Ljava/lang/String;Z)Z", "", ApiSince=35)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android35.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android35.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Android.Content.ComponentName" Index="0" FrameworkAlternate="net-android-35.0" />
        <Parameter Name="pollingLoopFilter" Type="System.String" Index="1" FrameworkAlternate="net-android-35.0" />
        <Parameter Name="autoTransact" Type="System.Boolean" Index="2" FrameworkAlternate="net-android-35.0" />
      </Parameters>
      <Docs>
        <param name="service">The HostApduService to register the filter for</param>
        <param name="pollingLoopFilter">The filter to register</param>
        <param name="autoTransact">true to have the NFC stack automatically disable observe mode and allow
                    transactions to proceed when this filter matches, false otherwise</param>
        <summary>Register a polling loop filter (PLF) for a HostApduService and indicate whether it should
            auto-transact or not.</summary>
        <returns>true if the filter was registered, false otherwise</returns>
        <remarks>
          <para>Register a polling loop filter (PLF) for a HostApduService and indicate whether it should
            auto-transact or not.  The PLF can be sequence of an
            even number of at least 2 hexadecimal numbers (0-9, A-F or a-f), representing a series of
            bytes. When non-standard polling loop frame matches this sequence exactly, it may be
            delivered to <c>HostApduService#processPollingFrames(List)</c>.  If auto-transact
            is set to true and this service is currently preferred or there are no other services
            registered for this filter then observe mode will also be disabled.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#registerPollingLoopFilterForService(android.content.ComponentName,%20java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.registerPollingLoopFilterForService(android.content.ComponentName, java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterPollingLoopPatternFilterForService">
      <MemberSignature Language="C#" Value="public bool RegisterPollingLoopPatternFilterForService (Android.Content.ComponentName service, string pollingLoopPatternFilter, bool autoTransact);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RegisterPollingLoopPatternFilterForService(class Android.Content.ComponentName service, string pollingLoopPatternFilter, bool autoTransact) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.CardEmulators.CardEmulation.RegisterPollingLoopPatternFilterForService(Android.Content.ComponentName,System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.RegisterPollingLoopPatternFilterForService : Android.Content.ComponentName * string * bool -&gt; bool" Usage="cardEmulation.RegisterPollingLoopPatternFilterForService (service, pollingLoopPatternFilter, autoTransact)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[Android.Runtime.Register("registerPollingLoopPatternFilterForService", "(Landroid/content/ComponentName;Ljava/lang/String;Z)Z", "", ApiSince=35)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerPollingLoopPatternFilterForService", "(Landroid/content/ComponentName;Ljava/lang/String;Z)Z", "", ApiSince=35)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android35.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android35.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Android.Content.ComponentName" Index="0" FrameworkAlternate="net-android-35.0" />
        <Parameter Name="pollingLoopPatternFilter" Type="System.String" Index="1" FrameworkAlternate="net-android-35.0" />
        <Parameter Name="autoTransact" Type="System.Boolean" Index="2" FrameworkAlternate="net-android-35.0" />
      </Parameters>
      <Docs>
        <param name="service">The HostApduService to register the filter for</param>
        <param name="pollingLoopPatternFilter">The pattern filter to register, must to be compatible with
                    <c>java.util.regex.Pattern#compile(String)</c> and only contain hexadecimal numbers
                    and `.`, `?` and `*` operators</param>
        <param name="autoTransact">true to have the NFC stack automatically disable observe mode and allow
                    transactions to proceed when this filter matches, false otherwise</param>
        <summary>Register a polling loop pattern filter (PLPF) for a HostApduService and indicate whether it
            should auto-transact or not.</summary>
        <returns>true if the filter was registered, false otherwise</returns>
        <remarks>
          <para>Register a polling loop pattern filter (PLPF) for a HostApduService and indicate whether it
            should auto-transact or not. The pattern may include the characters 0-9 and A-F as well as
            the regular expression operators `.`, `?` and `*`. When the beginning of anon-standard
            polling loop frame matches this sequence exactly, it may be delivered to
            <c>HostApduService#processPollingFrames(List)</c>. If auto-transact is set to true and this
            service is currently preferred or there are no other services registered for this filter
            then observe mode will also be disabled.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#registerPollingLoopPatternFilterForService(android.content.ComponentName,%20java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.registerPollingLoopPatternFilterForService(android.content.ComponentName, java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAidsForService">
      <MemberSignature Language="C#" Value="public bool RemoveAidsForService (Android.Content.ComponentName? service, string? category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAidsForService(class Android.Content.ComponentName service, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.CardEmulators.CardEmulation.RemoveAidsForService(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="member this.RemoveAidsForService : Android.Content.ComponentName * string -&gt; bool" Usage="cardEmulation.RemoveAidsForService (service, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeAidsForService", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeAidsForService", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Android.Content.ComponentName" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="service">The component name of the service</param>
        <param name="category">The category of the AIDs to be removed, e.g. <c>#CATEGORY_PAYMENT</c></param>
        <summary>Removes a previously registered list of AIDs for the specified category for the
            service provided.</summary>
        <returns>whether the group was successfully removed.</returns>
        <remarks>
          <para>Removes a previously registered list of AIDs for the specified category for the
            service provided.</para>
          <para>Note that this will only remove AIDs that were dynamically
            registered using the <c>#registerAidsForService(ComponentName, String, List)</c>
            method. It will *not* remove AIDs that were statically registered in
            the manifest. If dynamically registered AIDs are removed using
            this method, and a statically registered AID group for the same category
            exists in the manifest, the static AID group will become active again.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#removeAidsForService(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.removeAidsForService(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePollingLoopFilterForService">
      <MemberSignature Language="C#" Value="public bool RemovePollingLoopFilterForService (Android.Content.ComponentName service, string pollingLoopFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemovePollingLoopFilterForService(class Android.Content.ComponentName service, string pollingLoopFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.CardEmulators.CardEmulation.RemovePollingLoopFilterForService(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="member this.RemovePollingLoopFilterForService : Android.Content.ComponentName * string -&gt; bool" Usage="cardEmulation.RemovePollingLoopFilterForService (service, pollingLoopFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[Android.Runtime.Register("removePollingLoopFilterForService", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "", ApiSince=35)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removePollingLoopFilterForService", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "", ApiSince=35)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android35.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android35.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Android.Content.ComponentName" Index="0" FrameworkAlternate="net-android-35.0" />
        <Parameter Name="pollingLoopFilter" Type="System.String" Index="1" FrameworkAlternate="net-android-35.0" />
      </Parameters>
      <Docs>
        <param name="service">The HostApduService to unregister the filter for</param>
        <param name="pollingLoopFilter">The filter to unregister</param>
        <summary>Unregister a polling loop filter (PLF) for a HostApduService.</summary>
        <returns>true if the filter was removed, false otherwise</returns>
        <remarks>
          <para>Unregister a polling loop filter (PLF) for a HostApduService. If the PLF had previously been
            registered via <c>#registerPollingLoopFilterForService(ComponentName, String, boolean)</c>
            for this service it will be removed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#removePollingLoopFilterForService(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.removePollingLoopFilterForService(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePollingLoopPatternFilterForService">
      <MemberSignature Language="C#" Value="public bool RemovePollingLoopPatternFilterForService (Android.Content.ComponentName service, string pollingLoopPatternFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemovePollingLoopPatternFilterForService(class Android.Content.ComponentName service, string pollingLoopPatternFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.CardEmulators.CardEmulation.RemovePollingLoopPatternFilterForService(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="member this.RemovePollingLoopPatternFilterForService : Android.Content.ComponentName * string -&gt; bool" Usage="cardEmulation.RemovePollingLoopPatternFilterForService (service, pollingLoopPatternFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[Android.Runtime.Register("removePollingLoopPatternFilterForService", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "", ApiSince=35)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removePollingLoopPatternFilterForService", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "", ApiSince=35)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android35.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android35.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Android.Content.ComponentName" Index="0" FrameworkAlternate="net-android-35.0" />
        <Parameter Name="pollingLoopPatternFilter" Type="System.String" Index="1" FrameworkAlternate="net-android-35.0" />
      </Parameters>
      <Docs>
        <param name="service">The HostApduService to unregister the filter for</param>
        <param name="pollingLoopPatternFilter">The filter to unregister, must to be compatible with
                    <c>java.util.regex.Pattern#compile(String)</c> and only contain hexadecimal numbers
                    and`.`, `?` and `*` operators</param>
        <summary>Unregister a polling loop pattern filter (PLPF) for a HostApduService.</summary>
        <returns>true if the filter was removed, false otherwise</returns>
        <remarks>
          <para>Unregister a polling loop pattern filter (PLPF) for a HostApduService. If the PLF had
            previously been registered via
            <c>#registerPollingLoopFilterForService(ComponentName, String, boolean)</c> for this
            service it will be removed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#removePollingLoopPatternFilterForService(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.removePollingLoopPatternFilterForService(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteDestinationForPreferredPaymentService">
      <MemberSignature Language="C#" Value="public string? RouteDestinationForPreferredPaymentService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RouteDestinationForPreferredPaymentService" />
      <MemberSignature Language="DocId" Value="P:Android.Nfc.CardEmulators.CardEmulation.RouteDestinationForPreferredPaymentService" />
      <MemberSignature Language="F#" Value="member this.RouteDestinationForPreferredPaymentService : string" Usage="Android.Nfc.CardEmulators.CardEmulation.RouteDestinationForPreferredPaymentService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRouteDestinationForPreferredPaymentService", "()Ljava/lang/String;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRouteDestinationForPreferredPaymentService", "()Ljava/lang/String;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.RequiresPermission("android.permission.NFC_PREFERRED_PAYMENT_INFO")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.RequiresPermission("android.permission.NFC_PREFERRED_PAYMENT_INFO")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieves the route destination for the preferred payment service.</summary>
        <value>The route destination secure element name of the preferred payment service.
                    HCE payment: "Host"
                    OffHost payment: 1. String with prefix SIM or prefix eSE string.
                                        Ref: GSMA TS.26 - NFC Handset Requirements
                                        TS26_NFC_REQ_069: For UICC, Secure Element Name SHALL be
                                                          SIM[smartcard slot]
                                                          (e.g. SIM/SIM1, SIM2… SIMn).
                                        TS26_NFC_REQ_070: For embedded SE, Secure Element Name SHALL be
                                                          eSE[number]
                                                          (e.g. eSE/eSE1, eSE2, etc.).
                                     2. "OffHost" if the payment service does not specify secure element
                                        name.</value>
        <remarks>
          <para>Retrieves the route destination for the preferred payment service.</para>
          <para>Starting with <c>Build.VERSION_CODES#VANILLA_ICE_CREAM</c>, the preferred payment service
            no longer exists and is replaced by <c>android.app.role.RoleManager#ROLE_WALLET</c>. This
            will return the route for one of the services registered by the role holder (if any). If
            there are multiple services registered, it is unspecified which of those will be used to
            determine the route.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#getRouteDestinationForPreferredPaymentService()" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.getRouteDestinationForPreferredPaymentService()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionModeAlwaysAsk">
      <MemberSignature Language="C#" Value="public const Android.Nfc.CardEmulators.CardSelectionMode SelectionModeAlwaysAsk = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Nfc.CardEmulators.CardSelectionMode SelectionModeAlwaysAsk = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Nfc.CardEmulators.CardEmulation.SelectionModeAlwaysAsk" />
      <MemberSignature Language="F#" Value="val mutable SelectionModeAlwaysAsk : Android.Nfc.CardEmulators.CardSelectionMode" Usage="Android.Nfc.CardEmulators.CardEmulation.SelectionModeAlwaysAsk" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SELECTION_MODE_ALWAYS_ASK")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SELECTION_MODE_ALWAYS_ASK")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Nfc.CardEmulators.CardSelectionMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Nfc.CardEmulators.CardSelectionMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.CardEmulators.CardSelectionMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Return value for <c>#getSelectionModeForCategory(String)</c>.</summary>
        <remarks>
          <para>Return value for <c>#getSelectionModeForCategory(String)</c>.</para>
          <para>In this mode, when using ISO-DEP card emulation with <c>HostApduService</c>
               or <c>OffHostApduService</c>, whenever an Application ID (AID) of this category
               is selected, the user is asked which service they want to use to handle
               the transaction, even if there is only one matching service.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#SELECTION_MODE_ALWAYS_ASK" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.SELECTION_MODE_ALWAYS_ASK</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionModeAskIfConflict">
      <MemberSignature Language="C#" Value="public const Android.Nfc.CardEmulators.CardSelectionMode SelectionModeAskIfConflict = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Nfc.CardEmulators.CardSelectionMode SelectionModeAskIfConflict = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Nfc.CardEmulators.CardEmulation.SelectionModeAskIfConflict" />
      <MemberSignature Language="F#" Value="val mutable SelectionModeAskIfConflict : Android.Nfc.CardEmulators.CardSelectionMode" Usage="Android.Nfc.CardEmulators.CardEmulation.SelectionModeAskIfConflict" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SELECTION_MODE_ASK_IF_CONFLICT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SELECTION_MODE_ASK_IF_CONFLICT")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Nfc.CardEmulators.CardSelectionMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Nfc.CardEmulators.CardSelectionMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.CardEmulators.CardSelectionMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Return value for <c>#getSelectionModeForCategory(String)</c>.</summary>
        <remarks>
          <para>Return value for <c>#getSelectionModeForCategory(String)</c>.</para>
          <para>In this mode, when using ISO-DEP card emulation with <c>HostApduService</c>
               or <c>OffHostApduService</c>, the user will only be asked to select a service
               if the Application ID (AID) selected by the reader has been registered by multiple
               services. If there is only one service that has registered for the AID,
               that service will be invoked directly.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#SELECTION_MODE_ASK_IF_CONFLICT" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.SELECTION_MODE_ASK_IF_CONFLICT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionModePreferDefault">
      <MemberSignature Language="C#" Value="public const Android.Nfc.CardEmulators.CardSelectionMode SelectionModePreferDefault = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Nfc.CardEmulators.CardSelectionMode SelectionModePreferDefault = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Nfc.CardEmulators.CardEmulation.SelectionModePreferDefault" />
      <MemberSignature Language="F#" Value="val mutable SelectionModePreferDefault : Android.Nfc.CardEmulators.CardSelectionMode" Usage="Android.Nfc.CardEmulators.CardEmulation.SelectionModePreferDefault" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SELECTION_MODE_PREFER_DEFAULT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SELECTION_MODE_PREFER_DEFAULT")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Nfc.CardEmulators.CardSelectionMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Nfc.CardEmulators.CardSelectionMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.CardEmulators.CardSelectionMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Return value for <c>#getSelectionModeForCategory(String)</c>.</summary>
        <remarks>
          <para>Return value for <c>#getSelectionModeForCategory(String)</c>.</para>
          <para>In this mode, the user has set a default service for this
               category.</para>
          <para>When using ISO-DEP card emulation with <c>HostApduService</c>
               or <c>OffHostApduService</c>, if a remote NFC device selects
               any of the Application IDs (AIDs)
               that the default service has registered in this category,
               that service will automatically be bound to to handle
               the transaction.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#SELECTION_MODE_PREFER_DEFAULT" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.SELECTION_MODE_PREFER_DEFAULT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOffHostForService">
      <MemberSignature Language="C#" Value="public bool SetOffHostForService (Android.Content.ComponentName service, string offHostSecureElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetOffHostForService(class Android.Content.ComponentName service, string offHostSecureElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.CardEmulators.CardEmulation.SetOffHostForService(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="member this.SetOffHostForService : Android.Content.ComponentName * string -&gt; bool" Usage="cardEmulation.SetOffHostForService (service, offHostSecureElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOffHostForService", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOffHostForService", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.NFC")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.NFC")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Android.Content.ComponentName" />
        <Parameter Name="offHostSecureElement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="service">The component name of the service</param>
        <param name="offHostSecureElement">Secure Element to register the AID to. Only accept strings with
                                        prefix SIM or prefix eSE.
                                        Ref: GSMA TS.26 - NFC Handset Requirements
                                        TS26_NFC_REQ_069: For UICC, Secure Element Name SHALL be
                                                          SIM[smartcard slot]
                                                          (e.g. SIM/SIM1, SIM2… SIMn).
                                        TS26_NFC_REQ_070: For embedded SE, Secure Element Name SHALL be
                                                          eSE[number]
                                                          (e.g. eSE/eSE1, eSE2, etc.).</param>
        <summary>Sets the off-host Secure Element for the given service.</summary>
        <returns>whether the registration was successful.</returns>
        <remarks>
          <para>Sets the off-host Secure Element for the given service.</para>
          <para>If off-host SE was initially set (either statically
            through the manifest, or dynamically by using this API),
            it will be replaced with this one. All AIDs registered by
            this service will be re-routed to this Secure Element if
            successful. AIDs that was statically assigned using manifest
            will re-route to off-host SE that stated in manifest after NFC
            toggle.</para>
          <para>Note that you can only set off-host SE for a service that
            is running under the same UID as the caller of this API. Typically
            this means you need to call this from the same
            package as the service itself, though UIDs can also
            be shared between packages using shared UIDs.</para>
          <para>Registeration will be successful only if the Secure Element
            exists on the device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#setOffHostForService(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.setOffHostForService(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPreferredService">
      <MemberSignature Language="C#" Value="public bool SetPreferredService (Android.App.Activity? activity, Android.Content.ComponentName? service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetPreferredService(class Android.App.Activity activity, class Android.Content.ComponentName service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.CardEmulators.CardEmulation.SetPreferredService(Android.App.Activity,Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="member this.SetPreferredService : Android.App.Activity * Android.Content.ComponentName -&gt; bool" Usage="cardEmulation.SetPreferredService (activity, service)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPreferredService", "(Landroid/app/Activity;Landroid/content/ComponentName;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPreferredService", "(Landroid/app/Activity;Landroid/content/ComponentName;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
        <Parameter Name="service" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="activity">The activity which prefers this service to be invoked</param>
        <param name="service">The service to be preferred while this activity is in the foreground</param>
        <summary>Allows a foreground application to specify which card emulation service
            should be preferred while a specific Activity is in the foreground.</summary>
        <returns>whether the registration was successful</returns>
        <remarks>
          <para>Allows a foreground application to specify which card emulation service
            should be preferred while a specific Activity is in the foreground.</para>
          <para>The specified Activity must currently be in resumed state. A good
            paradigm is to call this method in your <c>Activity#onResume</c>, and to call
            <c>#unsetPreferredService(Activity)</c> in your <c>Activity#onPause</c>.</para>
          <para>This method call will fail in two specific scenarios:
            &lt;ul&gt;
            &lt;li&gt; If the service registers one or more AIDs in the <c>#CATEGORY_PAYMENT</c>
            category, but the user has indicated that foreground apps are not allowed
            to override the default payment service.
            &lt;li&gt; If the service registers one or more AIDs in the <c>#CATEGORY_OTHER</c>
            category that are also handled by the default payment service, and the
            user has indicated that foreground apps are not allowed to override the
            default payment service.
            &lt;/ul&gt;</para>
          <para>Use <c>#categoryAllowsForegroundPreference(String)</c> to determine
            whether foreground apps can override the default payment service.</para>
          <para>Note that this preference is not persisted by the OS, and hence must be
            called every time the Activity is resumed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#setPreferredService(android.app.Activity,%20android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.setPreferredService(android.app.Activity, android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShouldDefaultToObserveModeForService">
      <MemberSignature Language="C#" Value="public bool SetShouldDefaultToObserveModeForService (Android.Content.ComponentName service, bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetShouldDefaultToObserveModeForService(class Android.Content.ComponentName service, bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.CardEmulators.CardEmulation.SetShouldDefaultToObserveModeForService(Android.Content.ComponentName,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.SetShouldDefaultToObserveModeForService : Android.Content.ComponentName * bool -&gt; bool" Usage="cardEmulation.SetShouldDefaultToObserveModeForService (service, enable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[Android.Runtime.Register("setShouldDefaultToObserveModeForService", "(Landroid/content/ComponentName;Z)Z", "", ApiSince=35)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setShouldDefaultToObserveModeForService", "(Landroid/content/ComponentName;Z)Z", "", ApiSince=35)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android35.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android35.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Android.Content.ComponentName" Index="0" FrameworkAlternate="net-android-35.0" />
        <Parameter Name="enable" Type="System.Boolean" Index="1" FrameworkAlternate="net-android-35.0" />
      </Parameters>
      <Docs>
        <param name="service">The component name of the service</param>
        <param name="enable">Whether the service should default to observe mode or not</param>
        <summary>Sets whether when this service becomes the preferred service, if the NFC stack
            should enable observe mode or disable observe mode.</summary>
        <returns>whether the change was successful.</returns>
        <remarks>
          <para>Sets whether when this service becomes the preferred service, if the NFC stack
            should enable observe mode or disable observe mode. The default is to not enable observe
            mode when a service either the foreground default service or the default payment service so
            not calling this method will preserve that behavior.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#setShouldDefaultToObserveModeForService(android.content.ComponentName,%20boolean)" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.setShouldDefaultToObserveModeForService(android.content.ComponentName, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsAidPrefixRegistration">
      <MemberSignature Language="C#" Value="public bool SupportsAidPrefixRegistration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SupportsAidPrefixRegistration() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.CardEmulators.CardEmulation.SupportsAidPrefixRegistration" />
      <MemberSignature Language="F#" Value="member this.SupportsAidPrefixRegistration : unit -&gt; bool" Usage="cardEmulation.SupportsAidPrefixRegistration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("supportsAidPrefixRegistration", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("supportsAidPrefixRegistration", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Some devices may allow an application to register all
            AIDs that starts with a certain prefix, e.</summary>
        <returns>whether AID prefix registering is supported on this device.</returns>
        <remarks>
          <para>Some devices may allow an application to register all
            AIDs that starts with a certain prefix, e.g.
            "A000000004*" to register all MasterCard AIDs.</para>
          <para>Use this method to determine whether this device
            supports registering AID prefixes.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#supportsAidPrefixRegistration()" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.supportsAidPrefixRegistration()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Nfc.CardEmulators.CardEmulation.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Nfc.CardEmulators.CardEmulation.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Nfc.CardEmulators.CardEmulation.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Nfc.CardEmulators.CardEmulation.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-34.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsetOffHostForService">
      <MemberSignature Language="C#" Value="public bool UnsetOffHostForService (Android.Content.ComponentName service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UnsetOffHostForService(class Android.Content.ComponentName service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.CardEmulators.CardEmulation.UnsetOffHostForService(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="member this.UnsetOffHostForService : Android.Content.ComponentName -&gt; bool" Usage="cardEmulation.UnsetOffHostForService service" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unsetOffHostForService", "(Landroid/content/ComponentName;)Z", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unsetOffHostForService", "(Landroid/content/ComponentName;)Z", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.NFC")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.NFC")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="service">The component name of the service</param>
        <summary>Unsets the off-host Secure Element for the given service.</summary>
        <returns>whether the registration was successful.</returns>
        <remarks>
          <para>Unsets the off-host Secure Element for the given service.</para>
          <para>Note that this will only remove Secure Element that was dynamically
            set using the <c>#setOffHostForService(ComponentName, String)</c>
            and resets it to a value that was statically assigned using manifest.</para>
          <para>Note that you can only unset off-host SE for a service that
            is running under the same UID as the caller of this API. Typically
            this means you need to call this from the same
            package as the service itself, though UIDs can also
            be shared between packages using shared UIDs.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#unsetOffHostForService(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.unsetOffHostForService(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsetPreferredService">
      <MemberSignature Language="C#" Value="public bool UnsetPreferredService (Android.App.Activity? activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UnsetPreferredService(class Android.App.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Nfc.CardEmulators.CardEmulation.UnsetPreferredService(Android.App.Activity)" />
      <MemberSignature Language="F#" Value="member this.UnsetPreferredService : Android.App.Activity -&gt; bool" Usage="cardEmulation.UnsetPreferredService activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unsetPreferredService", "(Landroid/app/Activity;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unsetPreferredService", "(Landroid/app/Activity;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">The activity which the service was registered for</param>
        <summary>Unsets the preferred service for the specified Activity.</summary>
        <returns>true when successful</returns>
        <remarks>
          <para>Unsets the preferred service for the specified Activity.</para>
          <para>Note that the specified Activity must still be in resumed
            state at the time of this call. A good place to call this method
            is in your <c>Activity#onPause</c> implementation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#unsetPreferredService(android.app.Activity)" title="Reference documentation">Java documentation for <code>android.nfc.cardemulation.CardEmulation.unsetPreferredService(android.app.Activity)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
