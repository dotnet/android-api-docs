<Type Name="UCharacter" FullName="Android.Icu.Lang.UCharacter">
  <TypeSignature Language="C#" Value="public sealed class UCharacter : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit UCharacter extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Icu.Lang.UCharacter" />
  <TypeSignature Language="F#" Value="type UCharacter = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/icu/lang/UCharacter", ApiSince=24, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/icu/lang/UCharacter", ApiSince=24, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>&lt;strong&gt;[icu enhancement]&lt;/strong&gt; ICU's replacement for <c>java.lang.Character</c>.</summary>
    <remarks>
      <para>&lt;strong&gt;[icu enhancement]&lt;/strong&gt; ICU's replacement for <c>java.lang.Character</c>.&amp;nbsp;Methods, fields, and other functionality specific to ICU are labeled '&lt;strong&gt;[icu]&lt;/strong&gt;'.</para>
      <para>The UCharacter class provides extensions to the <c>java.lang.Character</c> class.
            These extensions provide support for more Unicode properties.
            Each ICU release supports the latest version of Unicode available at that time.</para>
      <para>For some time before Java 5 added support for supplementary Unicode code points,
            The ICU UCharacter class and many other ICU classes already supported them.
            Some UCharacter methods and constants were widened slightly differently than
            how the Character class methods and constants were widened later.
            In particular, <c>Character#MAX_VALUE</c> is still a char with the value U+FFFF,
            while the <c>UCharacter#MAX_VALUE</c> is an int with the value U+10FFFF.</para>
      <para>Code points are represented in these API using ints. While it would be
            more convenient in Java to have a separate primitive datatype for them,
            ints suffice in the meantime.</para>
      <para>Aside from the additions for UTF-16 support, and the updated Unicode
            properties, the main differences between UCharacter and Character are:
            &lt;ul&gt;
            &lt;li&gt; UCharacter is not designed to be a char wrapper and does not have
                 APIs to which involves management of that single char.&lt;br&gt;
                 These include:
                 &lt;ul&gt;
                   &lt;li&gt; char charValue(),
                   &lt;li&gt; int compareTo(java.lang.Character, java.lang.Character), etc.
                 &lt;/ul&gt;
            &lt;li&gt; UCharacter does not include Character APIs that are deprecated, nor
                 does it include the Java-specific character information, such as
                 boolean isJavaIdentifierPart(char ch).
            &lt;li&gt; Character maps characters 'A' - 'Z' and 'a' - 'z' to the numeric
                 values '10' - '35'. UCharacter also does this in digit and
                 getNumericValue, to adhere to the java semantics of these
                 methods.  New methods unicodeDigit, and
                 getUnicodeNumericValue do not treat the above code points
                 as having numeric values.  This is a semantic change from ICU4J 1.3.1.
            &lt;/ul&gt;</para>
      <para>In addition to Java compatibility functions, which calculate derived properties,
            this API provides low-level access to the Unicode Character Database.</para>
      <para>Unicode assigns each code point (not just assigned character) values for
            many properties.
            Most of them are simple boolean flags, or constants from a small enumerated list.
            For some properties, values are strings or other relatively more complex types.</para>
      <para>For more information see
            <see href="http://www.unicode/org/ucd/">"About the Unicode Character Database"</see>
            (http://www.unicode.org/ucd/)
            and the <see href="https://unicode-org.github.io/icu/userguide/strings/properties">ICU
            User Guide chapter on Properties</see>
            (https://unicode-org.github.io/icu/userguide/strings/properties).</para>
      <para>There are also functions that provide easy migration from C/POSIX functions
            like isblank(). Their use is generally discouraged because the C/POSIX
            standards do not define their semantics beyond the ASCII range, which means
            that different implementations exhibit very different behavior.
            Instead, Unicode properties should be used directly.</para>
      <para>There are also only a few, broad C/POSIX character classes, and they tend
            to be used for conflicting purposes. For example, the "isalpha()" class
            is sometimes used to determine word boundaries, while a more sophisticated
            approach would at least distinguish initial letters from continuation
            characters (the latter including combining marks).
            (In ICU, BreakIterator is the most sophisticated API for word boundaries.)
            Another example: There is no "istitle()" class for titlecase characters.</para>
      <para>ICU 3.4 and later provides API access for all twelve C/POSIX character classes.
            ICU implements them according to the Standard Recommendations in
            Annex C: Compatibility Properties of UTS #18 Unicode Regular Expressions
            (http://www.unicode.org/reports/tr18/#Compatibility_Properties).</para>
      <para>API access for C/POSIX character classes is as follows:</para>
      <code lang="text/java">{@code
            - alpha:     isUAlphabetic(c) or hasBinaryProperty(c, UProperty.ALPHABETIC)
            - lower:     isULowercase(c) or hasBinaryProperty(c, UProperty.LOWERCASE)
            - upper:     isUUppercase(c) or hasBinaryProperty(c, UProperty.UPPERCASE)
            - punct:     ((1&lt;&lt;getType(c)) &amp; ((1&lt;&lt;DASH_PUNCTUATION)|(1&lt;&lt;START_PUNCTUATION)|
                          (1&lt;&lt;END_PUNCTUATION)|(1&lt;&lt;CONNECTOR_PUNCTUATION)|(1&lt;&lt;OTHER_PUNCTUATION)|
                          (1&lt;&lt;INITIAL_PUNCTUATION)|(1&lt;&lt;FINAL_PUNCTUATION)))!=0
            - digit:     isDigit(c) or getType(c)==DECIMAL_DIGIT_NUMBER
            - xdigit:    hasBinaryProperty(c, UProperty.POSIX_XDIGIT)
            - alnum:     hasBinaryProperty(c, UProperty.POSIX_ALNUM)
            - space:     isUWhiteSpace(c) or hasBinaryProperty(c, UProperty.WHITE_SPACE)
            - blank:     hasBinaryProperty(c, UProperty.POSIX_BLANK)
            - cntrl:     getType(c)==CONTROL
            - graph:     hasBinaryProperty(c, UProperty.POSIX_GRAPH)
            - print:     hasBinaryProperty(c, UProperty.POSIX_PRINT)}</code>
      <para>The C/POSIX character classes are also available in UnicodeSet patterns,
            using patterns like [:graph:] or \p{graph}.</para>
      <para>&lt;strong&gt;[icu] Note:&lt;/strong&gt; There are several ICU (and Java) whitespace functions.
            Comparison:&lt;ul&gt;
            &lt;li&gt; isUWhiteSpace=UCHAR_WHITE_SPACE: Unicode White_Space property;
                  most of general categories "Z" (separators) + most whitespace ISO controls
                  (including no-break spaces, but excluding IS1..IS4)
            &lt;li&gt; isWhitespace: Java isWhitespace; Z + whitespace ISO controls but excluding no-break spaces
            &lt;li&gt; isSpaceChar: just Z (including no-break spaces)&lt;/ul&gt;</para>
      <para>This class is not subclassable.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/icu/lang/UCharacter" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CharCount">
      <MemberSignature Language="C#" Value="public static int CharCount (int cp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CharCount(int32 cp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.CharCount(System.Int32)" />
      <MemberSignature Language="F#" Value="static member CharCount : int -&gt; int" Usage="Android.Icu.Lang.UCharacter.CharCount cp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("charCount", "(I)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("charCount", "(I)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cp" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cp">the code point to check</param>
        <summary>Same as <c>Character#charCount</c>.</summary>
        <returns>the number of chars needed to represent the code point</returns>
        <remarks>
          <para>Same as <c>Character#charCount</c>.
            Returns the number of chars needed to represent the code point (1 or 2).
            This does not check the code point for validity.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#charCount(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.charCount(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePointAt">
      <MemberSignature Language="C#" Value="public static int CodePointAt (Java.Lang.ICharSequence? seq, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointAt(class Java.Lang.ICharSequence seq, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.CodePointAt(Java.Lang.ICharSequence,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointAt : Java.Lang.ICharSequence * int -&gt; int" Usage="Android.Icu.Lang.UCharacter.CodePointAt (seq, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("codePointAt", "(Ljava/lang/CharSequence;I)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("codePointAt", "(Ljava/lang/CharSequence;I)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="Java.Lang.ICharSequence" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="seq">the characters to check</param>
        <param name="index">the index of the first or only char forming the code point</param>
        <summary>Same as <c>Character#codePointAt(CharSequence, int)</c>.</summary>
        <returns>the code point at the index</returns>
        <remarks>
          <para>Same as <c>Character#codePointAt(CharSequence, int)</c>.
            Returns the code point at index.
            This examines only the characters at index and index+1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#codePointAt(java.lang.CharSequence,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.codePointAt(java.lang.CharSequence, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePointAt">
      <MemberSignature Language="C#" Value="public static int CodePointAt (char[]? text, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointAt(char[] text, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.CodePointAt(System.Char[],System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointAt : char[] * int -&gt; int" Usage="Android.Icu.Lang.UCharacter.CodePointAt (text, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("codePointAt", "([CI)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("codePointAt", "([CI)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">the characters to check</param>
        <param name="index">the index of the first or only char forming the code point</param>
        <summary>Same as <c>Character#codePointAt(char[], int)</c>.</summary>
        <returns>the code point at the index</returns>
        <remarks>
          <para>Same as <c>Character#codePointAt(char[], int)</c>.
            Returns the code point at index.
            This examines only the characters at index and index+1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#codePointAt(char[],%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.codePointAt(char[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePointAt">
      <MemberSignature Language="C#" Value="public static int CodePointAt (string? seq, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointAt(string seq, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.CodePointAt(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointAt : string * int -&gt; int" Usage="Android.Icu.Lang.UCharacter.CodePointAt (seq, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="seq">the characters to check</param>
        <param name="index">the index of the first or only char forming the code point</param>
        <summary>Same as <c>Character#codePointAt(CharSequence, int)</c>.</summary>
        <returns>the code point at the index</returns>
        <remarks>
          <para>Same as <c>Character#codePointAt(CharSequence, int)</c>.
            Returns the code point at index.
            This examines only the characters at index and index+1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#codePointAt(java.lang.CharSequence,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.codePointAt(java.lang.CharSequence, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePointAt">
      <MemberSignature Language="C#" Value="public static int CodePointAt (char[]? text, int index, int limit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointAt(char[] text, int32 index, int32 limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.CodePointAt(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointAt : char[] * int * int -&gt; int" Usage="Android.Icu.Lang.UCharacter.CodePointAt (text, index, limit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("codePointAt", "([CII)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("codePointAt", "([CII)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="limit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">the characters to check</param>
        <param name="index">the index of the first or only char forming the code point</param>
        <param name="limit">the limit of the valid text</param>
        <summary>Same as <c>Character#codePointAt(char[], int, int)</c>.</summary>
        <returns>the code point at the index</returns>
        <remarks>
          <para>Same as <c>Character#codePointAt(char[], int, int)</c>.
            Returns the code point at index.
            This examines only the characters at index and index+1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#codePointAt(char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.codePointAt(char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePointBefore">
      <MemberSignature Language="C#" Value="public static int CodePointBefore (Java.Lang.ICharSequence? seq, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointBefore(class Java.Lang.ICharSequence seq, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.CodePointBefore(Java.Lang.ICharSequence,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointBefore : Java.Lang.ICharSequence * int -&gt; int" Usage="Android.Icu.Lang.UCharacter.CodePointBefore (seq, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("codePointBefore", "(Ljava/lang/CharSequence;I)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("codePointBefore", "(Ljava/lang/CharSequence;I)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="Java.Lang.ICharSequence" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="seq">the characters to check</param>
        <param name="index">the index after the last or only char forming the code point</param>
        <summary>Same as <c>Character#codePointBefore(CharSequence, int)</c>.</summary>
        <returns>the code point before the index</returns>
        <remarks>
          <para>Same as <c>Character#codePointBefore(CharSequence, int)</c>.
            Return the code point before index.
            This examines only the characters at index-1 and index-2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#codePointBefore(java.lang.CharSequence,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.codePointBefore(java.lang.CharSequence, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePointBefore">
      <MemberSignature Language="C#" Value="public static int CodePointBefore (char[]? text, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointBefore(char[] text, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.CodePointBefore(System.Char[],System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointBefore : char[] * int -&gt; int" Usage="Android.Icu.Lang.UCharacter.CodePointBefore (text, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("codePointBefore", "([CI)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("codePointBefore", "([CI)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">the characters to check</param>
        <param name="index">the index after the last or only char forming the code point</param>
        <summary>Same as <c>Character#codePointBefore(char[], int)</c>.</summary>
        <returns>the code point before the index</returns>
        <remarks>
          <para>Same as <c>Character#codePointBefore(char[], int)</c>.
            Returns the code point before index.
            This examines only the characters at index-1 and index-2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#codePointBefore(char[],%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.codePointBefore(char[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePointBefore">
      <MemberSignature Language="C#" Value="public static int CodePointBefore (string? seq, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointBefore(string seq, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.CodePointBefore(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointBefore : string * int -&gt; int" Usage="Android.Icu.Lang.UCharacter.CodePointBefore (seq, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="seq">the characters to check</param>
        <param name="index">the index after the last or only char forming the code point</param>
        <summary>Same as <c>Character#codePointBefore(CharSequence, int)</c>.</summary>
        <returns>the code point before the index</returns>
        <remarks>
          <para>Same as <c>Character#codePointBefore(CharSequence, int)</c>.
            Return the code point before index.
            This examines only the characters at index-1 and index-2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#codePointBefore(java.lang.CharSequence,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.codePointBefore(java.lang.CharSequence, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePointBefore">
      <MemberSignature Language="C#" Value="public static int CodePointBefore (char[]? text, int index, int limit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointBefore(char[] text, int32 index, int32 limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.CodePointBefore(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointBefore : char[] * int * int -&gt; int" Usage="Android.Icu.Lang.UCharacter.CodePointBefore (text, index, limit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("codePointBefore", "([CII)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("codePointBefore", "([CII)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="limit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">the characters to check</param>
        <param name="index">the index after the last or only char forming the code point</param>
        <param name="limit">the start of the valid text</param>
        <summary>Same as <c>Character#codePointBefore(char[], int, int)</c>.</summary>
        <returns>the code point before the index</returns>
        <remarks>
          <para>Same as <c>Character#codePointBefore(char[], int, int)</c>.
            Return the code point before index.
            This examines only the characters at index-1 and index-2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#codePointBefore(char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.codePointBefore(char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePointCount">
      <MemberSignature Language="C#" Value="public static int CodePointCount (Java.Lang.ICharSequence? text, int start, int limit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointCount(class Java.Lang.ICharSequence text, int32 start, int32 limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.CodePointCount(Java.Lang.ICharSequence,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointCount : Java.Lang.ICharSequence * int * int -&gt; int" Usage="Android.Icu.Lang.UCharacter.CodePointCount (text, start, limit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("codePointCount", "(Ljava/lang/CharSequence;II)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("codePointCount", "(Ljava/lang/CharSequence;II)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="limit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">the characters to check</param>
        <param name="start">the start of the range</param>
        <param name="limit">the limit of the range</param>
        <summary>Equivalent to the <c>Character#codePointCount(CharSequence, int, int)</c>
            method, for convenience.</summary>
        <returns>the number of code points in the range</returns>
        <remarks>
          <para>Equivalent to the <c>Character#codePointCount(CharSequence, int, int)</c>
            method, for convenience.  Counts the number of code points in the range
            of text.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#codePointCount(java.lang.CharSequence,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.codePointCount(java.lang.CharSequence, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePointCount">
      <MemberSignature Language="C#" Value="public static int CodePointCount (char[]? text, int start, int limit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointCount(char[] text, int32 start, int32 limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.CodePointCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointCount : char[] * int * int -&gt; int" Usage="Android.Icu.Lang.UCharacter.CodePointCount (text, start, limit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("codePointCount", "([CII)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("codePointCount", "([CII)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="limit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">the characters to check</param>
        <param name="start">the start of the range</param>
        <param name="limit">the limit of the range</param>
        <summary>Equivalent to the <c>Character#codePointCount(char[], int, int)</c> method, for
            convenience.</summary>
        <returns>the number of code points in the range</returns>
        <remarks>
          <para>Equivalent to the <c>Character#codePointCount(char[], int, int)</c> method, for
            convenience. Counts the number of code points in the range of text.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#codePointCount(char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.codePointCount(char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePointCount">
      <MemberSignature Language="C#" Value="public static int CodePointCount (string? text, int start, int limit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CodePointCount(string text, int32 start, int32 limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.CodePointCount(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CodePointCount : string * int * int -&gt; int" Usage="Android.Icu.Lang.UCharacter.CodePointCount (text, start, limit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="limit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">the characters to check</param>
        <param name="start">the start of the range</param>
        <param name="limit">the limit of the range</param>
        <summary>Equivalent to the <c>Character#codePointCount(CharSequence, int, int)</c>
            method, for convenience.</summary>
        <returns>the number of code points in the range</returns>
        <remarks>
          <para>Equivalent to the <c>Character#codePointCount(CharSequence, int, int)</c>
            method, for convenience.  Counts the number of code points in the range
            of text.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#codePointCount(java.lang.CharSequence,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.codePointCount(java.lang.CharSequence, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Digit">
      <MemberSignature Language="C#" Value="public static int Digit (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Digit(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.Digit(System.Int32)" />
      <MemberSignature Language="F#" Value="static member Digit : int -&gt; int" Usage="Android.Icu.Lang.UCharacter.Digit ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("digit", "(I)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("digit", "(I)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">the code point to query</param>
        <summary>Returnss the numeric value of a decimal digit code point.</summary>
        <returns>the numeric value represented by the code point,
            or -1 if the code point is not a decimal digit or if its
            value is too large for a decimal radix</returns>
        <remarks>
          <para>Returnss the numeric value of a decimal digit code point.
            &lt;br&gt;This is a convenience overload of <c>digit(int, int)</c>
            that provides a decimal radix.
            &lt;br&gt;&lt;em&gt;Semantic Change:&lt;/em&gt; In release 1.3.1 and prior, this
            treated numeric letters and other numbers as digits.  This has
            been changed to conform to the java semantics.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#digit(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.digit(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Digit">
      <MemberSignature Language="C#" Value="public static int Digit (int ch, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Digit(int32 ch, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.Digit(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Digit : int * int -&gt; int" Usage="Android.Icu.Lang.UCharacter.Digit (ch, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("digit", "(II)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("digit", "(II)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">the code point to query</param>
        <param name="radix">the radix</param>
        <summary>Returnss the numeric value of a decimal digit code point.</summary>
        <returns>the numeric value represented by the code point in the
            specified radix, or -1 if the code point is not a decimal digit
            or if its value is too large for the radix</returns>
        <remarks>
          <para>Returnss the numeric value of a decimal digit code point.
            &lt;br&gt;This method observes the semantics of
            <c>java.lang.Character.digit()</c>.  Note that this
            will return positive values for code points for which isDigit
            returns false, just like java.lang.Character.
            &lt;br&gt;&lt;em&gt;Semantic Change:&lt;/em&gt; In release 1.3.1 and
            prior, this did not treat the European letters as having a
            digit value, and also treated numeric letters and other numbers as
            digits.
            This has been changed to conform to the java semantics.
            &lt;br&gt;A code point is a valid digit if and only if:
            &lt;ul&gt;
              &lt;li&gt;ch is a decimal digit or one of the european letters, and
              &lt;li&gt;the value of ch is less than the specified radix.
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#digit(int,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.digit(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedNameIterator">
      <MemberSignature Language="C#" Value="public static Android.Icu.Util.IValueIterator? ExtendedNameIterator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Icu.Util.IValueIterator ExtendedNameIterator" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Lang.UCharacter.ExtendedNameIterator" />
      <MemberSignature Language="F#" Value="static member ExtendedNameIterator : Android.Icu.Util.IValueIterator" Usage="Android.Icu.Lang.UCharacter.ExtendedNameIterator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getExtendedNameIterator", "()Landroid/icu/util/ValueIterator;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getExtendedNameIterator", "()Landroid/icu/util/ValueIterator;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Util.IValueIterator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt;</summary>
        <value>an iterator</value>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt;</para>
          <para>Returns an iterator for character names, iterating over codepoints.</para>
          <para>This API only gets the iterator for the extended names.
            For modern, most up-to-date Unicode names use getNameIterator() or
            for older 1.0 Unicode names use get1_0NameIterator().</para>
          <para>Example of use:&lt;br&gt;</para>
          <code lang="text/java">ValueIterator iterator = UCharacter.getExtendedNameIterator();
            ValueIterator.Element element = new ValueIterator.Element();
            while (iterator.next(element)) {
                System.out.println("Codepoint \\u" +
                                   Integer.toHexString(element.codepoint) +
                                   " has the name " + (String)element.value);
            }
            </code>
          <para>The maximal range which the name iterator iterates is from</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getExtendedNameIterator()" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getExtendedNameIterator()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FoldCase">
      <MemberSignature Language="C#" Value="public static int FoldCase (int ch, Android.Icu.Lang.FoldCaseOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FoldCase(int32 ch, valuetype Android.Icu.Lang.FoldCaseOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.FoldCase(System.Int32,Android.Icu.Lang.FoldCaseOptions)" />
      <MemberSignature Language="F#" Value="static member FoldCase : int * Android.Icu.Lang.FoldCaseOptions -&gt; int" Usage="Android.Icu.Lang.UCharacter.FoldCase (ch, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("foldCase", "(II)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("foldCase", "(II)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
        <Parameter Name="options" Type="Android.Icu.Lang.FoldCaseOptions">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ch">the character to be converted</param>
        <param name="options">A bit set for special processing. Currently the recognised options
            are FOLD_CASE_EXCLUDE_SPECIAL_I and FOLD_CASE_DEFAULT</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; The given character is mapped to its case folding equivalent according
            to UnicodeData.</summary>
        <returns>the case folding equivalent of the character, if any; otherwise the
            character itself.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; The given character is mapped to its case folding equivalent according
            to UnicodeData.txt and CaseFolding.txt; if the character has no case
            folding equivalent, the character itself is returned.</para>
          <para>This function only returns the simple, single-code point case mapping.
            Full case mappings should be used whenever possible because they produce
            better results by working on whole strings.
            They can map to a result string with a different length as appropriate.
            Full case mappings are applied by the case mapping functions
            that take String parameters rather than code points (int).
            See also the User Guide chapter on C/POSIX migration:
            https://unicode-org.github.io/icu/userguide/icu/posix#case-mappings</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#foldCase(int,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.foldCase(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FoldCase">
      <MemberSignature Language="C#" Value="public static int FoldCase (int ch, bool defaultmapping);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FoldCase(int32 ch, bool defaultmapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.FoldCase(System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member FoldCase : int * bool -&gt; int" Usage="Android.Icu.Lang.UCharacter.FoldCase (ch, defaultmapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("foldCase", "(IZ)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("foldCase", "(IZ)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
        <Parameter Name="defaultmapping" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be converted</param>
        <param name="defaultmapping">Indicates whether the default mappings defined in
                                  CaseFolding.txt are to be used, otherwise the
                                  mappings for dotted I and dotless i marked with
                                  'T' in CaseFolding.txt are included.</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; The given character is mapped to its case folding equivalent according
            to UnicodeData.</summary>
        <returns>the case folding equivalent of the character, if
                                  any; otherwise the character itself.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; The given character is mapped to its case folding equivalent according
            to UnicodeData.txt and CaseFolding.txt; if the character has no case
            folding equivalent, the character itself is returned.</para>
          <para>This function only returns the simple, single-code point case mapping.
            Full case mappings should be used whenever possible because they produce
            better results by working on whole strings.
            They can map to a result string with a different length as appropriate.
            Full case mappings are applied by the case mapping functions
            that take String parameters rather than code points (int).
            See also the User Guide chapter on C/POSIX migration:
            https://unicode-org.github.io/icu/userguide/icu/posix#case-mappings</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#foldCase(int,%20boolean)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.foldCase(int, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FoldCase">
      <MemberSignature Language="C#" Value="public static string? FoldCase (string? str, Android.Icu.Lang.FoldCaseOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FoldCase(string str, valuetype Android.Icu.Lang.FoldCaseOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.FoldCase(System.String,Android.Icu.Lang.FoldCaseOptions)" />
      <MemberSignature Language="F#" Value="static member FoldCase : string * Android.Icu.Lang.FoldCaseOptions -&gt; string" Usage="Android.Icu.Lang.UCharacter.FoldCase (str, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("foldCase", "(Ljava/lang/String;I)Ljava/lang/String;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("foldCase", "(Ljava/lang/String;I)Ljava/lang/String;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="options" Type="Android.Icu.Lang.FoldCaseOptions">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="str">the String to be converted</param>
        <param name="options">A bit set for special processing. Currently the recognised options
                           are FOLD_CASE_EXCLUDE_SPECIAL_I and FOLD_CASE_DEFAULT</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; The given string is mapped to its case folding equivalent according to
            UnicodeData.</summary>
        <returns>the case folding equivalent of the character, if any; otherwise the
                    character itself.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; The given string is mapped to its case folding equivalent according to
            UnicodeData.txt and CaseFolding.txt; if any character has no case
            folding equivalent, the character itself is returned.
            "Full", multiple-code point case folding mappings are returned here.
            For "simple" single-code point mappings use the API
            foldCase(int ch, boolean defaultmapping).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#foldCase(java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.foldCase(java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FoldCase">
      <MemberSignature Language="C#" Value="public static string? FoldCase (string? str, bool defaultmapping);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FoldCase(string str, bool defaultmapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.FoldCase(System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member FoldCase : string * bool -&gt; string" Usage="Android.Icu.Lang.UCharacter.FoldCase (str, defaultmapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("foldCase", "(Ljava/lang/String;Z)Ljava/lang/String;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("foldCase", "(Ljava/lang/String;Z)Ljava/lang/String;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="defaultmapping" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="str">the String to be converted</param>
        <param name="defaultmapping">Indicates whether the default mappings defined in
                                  CaseFolding.txt are to be used, otherwise the
                                  mappings for dotted I and dotless i marked with
                                  'T' in CaseFolding.txt are included.</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; The given string is mapped to its case folding equivalent according to
            UnicodeData.</summary>
        <returns>the case folding equivalent of the character, if
                                  any; otherwise the character itself.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; The given string is mapped to its case folding equivalent according to
            UnicodeData.txt and CaseFolding.txt; if any character has no case
            folding equivalent, the character itself is returned.
            "Full", multiple-code point case folding mappings are returned here.
            For "simple" single-code point mappings use the API
            foldCase(int ch, boolean defaultmapping).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#foldCase(java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.foldCase(java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FoldCaseDefault">
      <MemberSignature Language="C#" Value="public const Android.Icu.Lang.FoldCaseOptions FoldCaseDefault = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Icu.Lang.FoldCaseOptions FoldCaseDefault = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Lang.UCharacter.FoldCaseDefault" />
      <MemberSignature Language="F#" Value="val mutable FoldCaseDefault : Android.Icu.Lang.FoldCaseOptions" Usage="Android.Icu.Lang.UCharacter.FoldCaseDefault" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FOLD_CASE_DEFAULT", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FOLD_CASE_DEFAULT", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Icu.Lang.FoldCaseOptions enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Icu.Lang.FoldCaseOptions enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Lang.FoldCaseOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Option value for case folding: use default mappings defined in
            CaseFolding.</summary>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Option value for case folding: use default mappings defined in
            CaseFolding.txt.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#FOLD_CASE_DEFAULT" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.FOLD_CASE_DEFAULT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FoldCaseExcludeSpecialI">
      <MemberSignature Language="C#" Value="public const Android.Icu.Lang.FoldCaseOptions FoldCaseExcludeSpecialI = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Icu.Lang.FoldCaseOptions FoldCaseExcludeSpecialI = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Lang.UCharacter.FoldCaseExcludeSpecialI" />
      <MemberSignature Language="F#" Value="val mutable FoldCaseExcludeSpecialI : Android.Icu.Lang.FoldCaseOptions" Usage="Android.Icu.Lang.UCharacter.FoldCaseExcludeSpecialI" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FOLD_CASE_EXCLUDE_SPECIAL_I", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FOLD_CASE_EXCLUDE_SPECIAL_I", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Icu.Lang.FoldCaseOptions enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Icu.Lang.FoldCaseOptions enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Lang.FoldCaseOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Option value for case folding:
            Use the modified set of mappings provided in CaseFolding.</summary>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Option value for case folding:
            Use the modified set of mappings provided in CaseFolding.txt to handle dotted I
            and dotless i appropriately for Turkic languages (tr, az).</para>
          <para>Before Unicode 3.2, CaseFolding.txt contains mappings marked with 'I' that
            are to be included for default mappings and
            excluded for the Turkic-specific mappings.</para>
          <para>Unicode 3.2 CaseFolding.txt instead contains mappings marked with 'T' that
            are to be excluded for default mappings and
            included for the Turkic-specific mappings.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#FOLD_CASE_EXCLUDE_SPECIAL_I" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.FOLD_CASE_EXCLUDE_SPECIAL_I</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForDigit">
      <MemberSignature Language="C#" Value="public static char ForDigit (int digit, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ForDigit(int32 digit, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.ForDigit(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member ForDigit : int * int -&gt; char" Usage="Android.Icu.Lang.UCharacter.ForDigit (digit, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("forDigit", "(II)C", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("forDigit", "(II)C", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digit" Type="System.Int32" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="digit">To be added.</param>
        <param name="radix">To be added.</param>
        <summary>Provide the java.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Provide the java.lang.Character forDigit API, for convenience.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#forDigit(int,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.forDigit(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAge">
      <MemberSignature Language="C#" Value="public static Android.Icu.Util.VersionInfo? GetAge (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Icu.Util.VersionInfo GetAge(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetAge(System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetAge : int -&gt; Android.Icu.Util.VersionInfo" Usage="Android.Icu.Lang.UCharacter.GetAge ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAge", "(I)Landroid/icu/util/VersionInfo;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAge", "(I)Landroid/icu/util/VersionInfo;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Util.VersionInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">The code point.</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the "age" of the code point.</summary>
        <returns>the Unicode version number</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the "age" of the code point.</para>
          <para>The "age" is the Unicode version when the code point was first
            designated (as a non-character or for Private Use) or assigned a
            character.</para>
          <para>This can be useful to avoid emitting code points to receiving
            processes that do not accept newer characters.</para>
          <para>The data is from the UCD file DerivedAge.txt.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getAge(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getAge(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBidiPairedBracket">
      <MemberSignature Language="C#" Value="public static int GetBidiPairedBracket (int c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetBidiPairedBracket(int32 c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetBidiPairedBracket(System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetBidiPairedBracket : int -&gt; int" Usage="Android.Icu.Lang.UCharacter.GetBidiPairedBracket c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getBidiPairedBracket", "(I)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getBidiPairedBracket", "(I)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="c">the code point to be mapped</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Maps the specified character to its paired bracket character.</summary>
        <returns>the paired bracket code point,
                    or c itself if there is no such mapping
                    (Bidi_Paired_Bracket_Type=None)</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Maps the specified character to its paired bracket character.
            For Bidi_Paired_Bracket_Type!=None, this is the same as getMirror(int).
            Otherwise c itself is returned.
            See http://www.unicode.org/reports/tr9/</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getBidiPairedBracket(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getBidiPairedBracket(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCharFromExtendedName">
      <MemberSignature Language="C#" Value="public static int GetCharFromExtendedName (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetCharFromExtendedName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetCharFromExtendedName(System.String)" />
      <MemberSignature Language="F#" Value="static member GetCharFromExtendedName : string -&gt; int" Usage="Android.Icu.Lang.UCharacter.GetCharFromExtendedName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCharFromExtendedName", "(Ljava/lang/String;)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCharFromExtendedName", "(Ljava/lang/String;)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">codepoint name</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt;</summary>
        <returns>code point associated with the name or -1 if the name is not
                    found.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt;</para>
          <para>Find a Unicode character by either its name and return its code
            point value. All Unicode names are in uppercase.
            Extended names are all lowercase except for numbers and are contained
            within angle brackets.
            The names are searched in the following order
            &lt;ul&gt;
            &lt;li&gt; Most current Unicode name if there is any
            &lt;li&gt; Unicode 1.0 name if there is any
            &lt;li&gt; Extended name in the form of
                 "&amp;lt;codepoint_type-codepoint_hex_digits&amp;gt;". E.g. &amp;lt;noncharacter-FFFE&amp;gt;
            &lt;/ul&gt;
            Note calling any methods related to code point names, e.g. <c>getName()</c>
            incurs a one-time initialization cost to construct the name tables.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getCharFromExtendedName(java.lang.String)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getCharFromExtendedName(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCharFromName">
      <MemberSignature Language="C#" Value="public static int GetCharFromName (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetCharFromName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetCharFromName(System.String)" />
      <MemberSignature Language="F#" Value="static member GetCharFromName : string -&gt; int" Usage="Android.Icu.Lang.UCharacter.GetCharFromName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCharFromName", "(Ljava/lang/String;)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCharFromName", "(Ljava/lang/String;)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">most current Unicode character name whose code point is to
                   be returned</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt;</summary>
        <returns>code point or -1 if name is not found</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt;</para>
          <para>Finds a Unicode code point by its most current Unicode name and
            return its code point value. All Unicode names are in uppercase.
            Note calling any methods related to code point names, e.g. <c>getName()</c>
            incurs a one-time initialization cost to construct the name tables.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getCharFromName(java.lang.String)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getCharFromName(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCharFromNameAlias">
      <MemberSignature Language="C#" Value="public static int GetCharFromNameAlias (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetCharFromNameAlias(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetCharFromNameAlias(System.String)" />
      <MemberSignature Language="F#" Value="static member GetCharFromNameAlias : string -&gt; int" Usage="Android.Icu.Lang.UCharacter.GetCharFromNameAlias name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCharFromNameAlias", "(Ljava/lang/String;)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCharFromNameAlias", "(Ljava/lang/String;)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Unicode name alias whose code point is to be returned</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt;</summary>
        <returns>code point or -1 if name is not found</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt;</para>
          <para>Find a Unicode character by its corrected name alias and return
            its code point value. All Unicode names are in uppercase.
            Note calling any methods related to code point names, e.g. <c>getName()</c>
            incurs a one-time initialization cost to construct the name tables.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getCharFromNameAlias(java.lang.String)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getCharFromNameAlias(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCodePoint">
      <MemberSignature Language="C#" Value="public static int GetCodePoint (char char16);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetCodePoint(char char16) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetCodePoint(System.Char)" />
      <MemberSignature Language="F#" Value="static member GetCodePoint : char -&gt; int" Usage="Android.Icu.Lang.UCharacter.GetCodePoint char16" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCodePoint", "(C)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCodePoint", "(C)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="char16" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="char16">the BMP code point</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the code point corresponding to the BMP code point.</summary>
        <returns>code point if argument is a valid character.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the code point corresponding to the BMP code point.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getCodePoint(char)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getCodePoint(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCodePoint">
      <MemberSignature Language="C#" Value="public static int GetCodePoint (char lead, char trail);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetCodePoint(char lead, char trail) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetCodePoint(System.Char,System.Char)" />
      <MemberSignature Language="F#" Value="static member GetCodePoint : char * char -&gt; int" Usage="Android.Icu.Lang.UCharacter.GetCodePoint (lead, trail)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCodePoint", "(CC)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCodePoint", "(CC)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lead" Type="System.Char" />
        <Parameter Name="trail" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lead">the lead char</param>
        <param name="trail">the trail char</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Returns a code point corresponding to the two surrogate code units.</summary>
        <returns>code point if surrogate characters are valid.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Returns a code point corresponding to the two surrogate code units.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getCodePoint(char,%20char)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getCodePoint(char, char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCodePoint">
      <MemberSignature Language="C#" Value="public static int GetCodePoint (int lead, int trail);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetCodePoint(int32 lead, int32 trail) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetCodePoint(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetCodePoint : int * int -&gt; int" Usage="Android.Icu.Lang.UCharacter.GetCodePoint (lead, trail)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCodePoint", "(II)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCodePoint", "(II)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lead" Type="System.Int32" />
        <Parameter Name="trail" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lead">the lead unit
                   (In ICU 2.1-69 the type of both parameters was <c>char</c>.)</param>
        <param name="trail">the trail unit</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Returns a code point corresponding to the two surrogate code units.</summary>
        <returns>code point if lead and trail form a valid surrogate pair.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Returns a code point corresponding to the two surrogate code units.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getCodePoint(int,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getCodePoint(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCombiningClass">
      <MemberSignature Language="C#" Value="public static int GetCombiningClass (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetCombiningClass(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetCombiningClass(System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetCombiningClass : int -&gt; int" Usage="Android.Icu.Lang.UCharacter.GetCombiningClass ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCombiningClass", "(I)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCombiningClass", "(I)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point whose combining is to be retrieved</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the combining class of the argument codepoint</summary>
        <returns>the combining class of the codepoint</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the combining class of the argument codepoint</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getCombiningClass(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getCombiningClass(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirection">
      <MemberSignature Language="C#" Value="public static int GetDirection (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDirection(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetDirection(System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetDirection : int -&gt; int" Usage="Android.Icu.Lang.UCharacter.GetDirection ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDirection", "(I)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDirection", "(I)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">the code point to be determined its direction</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the Bidirection property of a code point.</summary>
        <returns>direction constant from UCharacterDirection.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the Bidirection property of a code point.
            For example, 0x0041 (letter A) has the LEFT_TO_RIGHT directional
            property.&lt;br&gt;
            Result returned belongs to the interface
            UCharacterDirection</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getDirection(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getDirection(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectionality">
      <MemberSignature Language="C#" Value="public static sbyte GetDirectionality (int cp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 GetDirectionality(int32 cp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetDirectionality(System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetDirectionality : int -&gt; sbyte" Usage="Android.Icu.Lang.UCharacter.GetDirectionality cp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDirectionality", "(I)B", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDirectionality", "(I)B", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cp" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cp">the code point to check</param>
        <summary>Equivalent to the <c>Character#getDirectionality(char)</c> method, for
            convenience.</summary>
        <returns>the directionality of the code point</returns>
        <remarks>
          <para>Equivalent to the <c>Character#getDirectionality(char)</c> method, for
            convenience. Returns a byte representing the directionality of the
            character.
            
            &lt;strong&gt;[icu] Note:&lt;/strong&gt; Unlike <c>Character#getDirectionality(char)</c>, this returns
            DIRECTIONALITY_LEFT_TO_RIGHT for undefined or out-of-bounds characters.
            
            &lt;strong&gt;[icu] Note:&lt;/strong&gt; The return value must be tested using the constants defined in <c>UCharacterDirection</c> and its interface <c>UCharacterEnums.ECharacterDirection</c> since the values are different from the ones
            defined by <c>java.lang.Character</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getDirectionality(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getDirectionality(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtendedName">
      <MemberSignature Language="C#" Value="public static string? GetExtendedName (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetExtendedName(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetExtendedName(System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetExtendedName : int -&gt; string" Usage="Android.Icu.Lang.UCharacter.GetExtendedName ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getExtendedName", "(I)Ljava/lang/String;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getExtendedName", "(I)Ljava/lang/String;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">the code point for which to get the name</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Returns a name for a valid codepoint.</summary>
        <returns>a name for the argument codepoint</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Returns a name for a valid codepoint. Unlike, getName(int) and
            getName1_0(int), this method will return a name even for codepoints that
            are not assigned a name in UnicodeData.txt.</para>
          <para>The names are returned in the following order.
            &lt;ul&gt;
            &lt;li&gt; Most current Unicode name if there is any
            &lt;li&gt; Unicode 1.0 name if there is any
            &lt;li&gt; Extended name in the form of
                 "&amp;lt;codepoint_type-codepoint_hex_digits&amp;gt;". E.g., &amp;lt;noncharacter-fffe&amp;gt;
            &lt;/ul&gt;
            Note calling any methods related to code point names, e.g. <c>getName()</c>
            incurs a one-time initialization cost to construct the name tables.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getExtendedName(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getExtendedName(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHanNumericValue">
      <MemberSignature Language="C#" Value="public static int GetHanNumericValue (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetHanNumericValue(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetHanNumericValue(System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetHanNumericValue : int -&gt; int" Usage="Android.Icu.Lang.UCharacter.GetHanNumericValue ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getHanNumericValue", "(I)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getHanNumericValue", "(I)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point to query</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the numeric value of a Han character.</summary>
        <returns>value if it is a Han 'numeric character,' otherwise return -1.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the numeric value of a Han character.</para>
          <para>This returns the value of Han 'numeric' code points,
            including those for zero, ten, hundred, thousand, ten thousand,
            and hundred million.
            This includes both the standard and 'checkwriting'
            characters, the 'big circle' zero character, and the standard
            zero character.</para>
          <para>Note: The Unicode Standard has numeric values for more
            Han characters recognized by this method
            (see <c>#getNumericValue(int)</c> and the UCD file DerivedNumericValues.txt),
            and a <c>android.icu.text.NumberFormat</c> can be used with
            a Chinese <c>android.icu.text.NumberingSystem</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getHanNumericValue(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getHanNumericValue(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntPropertyMaxValue">
      <MemberSignature Language="C#" Value="public static int GetIntPropertyMaxValue (int type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetIntPropertyMaxValue(int32 type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetIntPropertyMaxValue(System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetIntPropertyMaxValue : int -&gt; int" Usage="Android.Icu.Lang.UCharacter.GetIntPropertyMaxValue type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getIntPropertyMaxValue", "(I)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getIntPropertyMaxValue", "(I)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="type">UProperty selector constant, identifies which binary
                   property to check. Must be
                   UProperty.BINARY_START &amp;lt;= type &amp;lt; UProperty.BINARY_LIMIT or
                   UProperty.INT_START &amp;lt;= type &amp;lt; UProperty.INT_LIMIT.</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the maximum value for an integer/binary Unicode property.</summary>
        <returns>Maximum value returned by u_getIntPropertyValue for a Unicode
                    property. &amp;lt;= 0 if the property selector 'type' is out of range.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the maximum value for an integer/binary Unicode property.
            Can be used together with UCharacter.getIntPropertyMinValue(int)
            to allocate arrays of android.icu.text.UnicodeSet or similar.
            Examples for min/max values (for Unicode 3.2):
            &lt;ul&gt;
            &lt;li&gt; UProperty.BIDI_CLASS:    0/18
            (UCharacterDirection.LEFT_TO_RIGHT/UCharacterDirection.BOUNDARY_NEUTRAL)
            &lt;li&gt; UProperty.SCRIPT:        0/45 (UScript.COMMON/UScript.TAGBANWA)
            &lt;li&gt; UProperty.IDEOGRAPHIC:   0/1  (false/true)
            &lt;/ul&gt;
            For undefined UProperty constant values, min/max values will be 0/-1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getIntPropertyMaxValue(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getIntPropertyMaxValue(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntPropertyMinValue">
      <MemberSignature Language="C#" Value="public static int GetIntPropertyMinValue (int type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetIntPropertyMinValue(int32 type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetIntPropertyMinValue(System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetIntPropertyMinValue : int -&gt; int" Usage="Android.Icu.Lang.UCharacter.GetIntPropertyMinValue type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getIntPropertyMinValue", "(I)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getIntPropertyMinValue", "(I)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="type">UProperty selector constant, identifies which binary
                   property to check. Must be
                   UProperty.BINARY_START &amp;lt;= type &amp;lt; UProperty.BINARY_LIMIT or
                   UProperty.INT_START &amp;lt;= type &amp;lt; UProperty.INT_LIMIT.</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the minimum value for an integer/binary Unicode property type.</summary>
        <returns>Minimum value returned by UCharacter.getIntPropertyValue(int)
                    for a Unicode property. 0 if the property
                    selector 'type' is out of range.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the minimum value for an integer/binary Unicode property type.
            Can be used together with UCharacter.getIntPropertyMaxValue(int)
            to allocate arrays of android.icu.text.UnicodeSet or similar.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getIntPropertyMinValue(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getIntPropertyMinValue(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntPropertyValue">
      <MemberSignature Language="C#" Value="public static int GetIntPropertyValue (int ch, int type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetIntPropertyValue(int32 ch, int32 type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetIntPropertyValue(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetIntPropertyValue : int * int -&gt; int" Usage="Android.Icu.Lang.UCharacter.GetIntPropertyValue (ch, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getIntPropertyValue", "(II)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getIntPropertyValue", "(II)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
        <Parameter Name="type" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point to test.</param>
        <param name="type">UProperty selector constant, identifies which binary
                   property to check. Must be
                   UProperty.BINARY_START &amp;lt;= type &amp;lt; UProperty.BINARY_LIMIT or
                   UProperty.INT_START &amp;lt;= type &amp;lt; UProperty.INT_LIMIT or
                   UProperty.MASK_START &amp;lt;= type &amp;lt; UProperty.MASK_LIMIT.</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the property value for a Unicode property type of a code point.</summary>
        <returns>numeric value that is directly the property value or,
                    for enumerated properties, corresponds to the numeric value of
                    the enumerated constant of the respective property value type
                    (<c>ECharacterCategory</c>, <c>ECharacterDirection</c>,
                    <c>DecompositionType</c>, etc.).
                    Returns 0 or 1 (for false / true) for binary Unicode properties.
                    Returns a bit-mask for mask properties.
                    Returns 0 if 'type' is out of bounds or if the Unicode version
                    does not have data for the property at all, or not for this code
                    point.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the property value for a Unicode property type of a code point.
            Also returns binary and mask property values.</para>
          <para>Unicode, especially in version 3.2, defines many more properties than
            the original set in UnicodeData.txt.</para>
          <para>The properties APIs are intended to reflect Unicode properties as
            defined in the Unicode Character Database (UCD) and Unicode Technical
            Reports (UTR). For details about the properties see
            http://www.unicode.org/.</para>
          <para>For names of Unicode properties see the UCD file PropertyAliases.txt.</para>
          <code lang="text/java">Sample usage:
            int ea = UCharacter.getIntPropertyValue(c, UProperty.EAST_ASIAN_WIDTH);
            int ideo = UCharacter.getIntPropertyValue(c, UProperty.IDEOGRAPHIC);
            boolean b = (ideo == 1) ? true : false;
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getIntPropertyValue(int,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getIntPropertyValue(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMirror">
      <MemberSignature Language="C#" Value="public static int GetMirror (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMirror(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetMirror(System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetMirror : int -&gt; int" Usage="Android.Icu.Lang.UCharacter.GetMirror ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getMirror", "(I)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getMirror", "(I)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point whose mirror is to be retrieved</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Maps the specified code point to a "mirror-image" code point.</summary>
        <returns>another code point that may serve as a mirror-image substitute,
                    or ch itself if there is no such mapping or ch does not have the
                    "mirrored" property</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Maps the specified code point to a "mirror-image" code point.
            For code points with the "mirrored" property, implementations sometimes
            need a "poor man's" mapping to another code point such that the default
            glyph may serve as the mirror-image of the default glyph of the
            specified code point.&lt;br&gt;
            This is useful for text conversion to and from codepages with visual
            order, and for displays without glyph selection capabilities.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getMirror(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getMirror(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public static string? GetName (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetName(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetName(System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetName : int -&gt; string" Usage="Android.Icu.Lang.UCharacter.GetName ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getName", "(I)Ljava/lang/String;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getName", "(I)Ljava/lang/String;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">the code point for which to get the name</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the most current Unicode name of the argument code point, or
            null if the character is unassigned or outside the range
            <c>UCharacter.MIN_VALUE</c> and <c>UCharacter.MAX_VALUE</c> or does not
            have a name.</summary>
        <returns>most current Unicode name</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the most current Unicode name of the argument code point, or
            null if the character is unassigned or outside the range
            <c>UCharacter.MIN_VALUE</c> and <c>UCharacter.MAX_VALUE</c> or does not
            have a name.
            &lt;br&gt;
            Note calling any methods related to code point names, e.g. <c>getName()</c>
            incurs a one-time initialization cost to construct the name tables.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getName(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getName(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public static string? GetName (string? s, string? separator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetName(string s, string separator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetName(System.String,System.String)" />
      <MemberSignature Language="F#" Value="static member GetName : string * string -&gt; string" Usage="Android.Icu.Lang.UCharacter.GetName (s, separator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getName", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getName", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="separator" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">string to format</param>
        <param name="separator">string to go between names</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the names for each of the characters in a string</summary>
        <returns>string of names</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the names for each of the characters in a string</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getName(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getName(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNameAlias">
      <MemberSignature Language="C#" Value="public static string? GetNameAlias (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNameAlias(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetNameAlias(System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetNameAlias : int -&gt; string" Usage="Android.Icu.Lang.UCharacter.GetNameAlias ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getNameAlias", "(I)Ljava/lang/String;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getNameAlias", "(I)Ljava/lang/String;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">the code point for which to get the name alias</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the corrected name from NameAliases.</summary>
        <returns>Unicode name alias, or null</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the corrected name from NameAliases.txt if there is one.
            Returns null if the character is unassigned or outside the range
            UCharacter.MIN_VALUE and UCharacter.MAX_VALUE or does not have a name.
            &lt;br&gt;
            Note calling any methods related to code point names, e.g. <c>getName()</c>
            incurs a one-time initialization cost to construct the name tables.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getNameAlias(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getNameAlias(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static int GetNumericValue (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumericValue(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetNumericValue(System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : int -&gt; int" Usage="Android.Icu.Lang.UCharacter.GetNumericValue ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getNumericValue", "(I)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getNumericValue", "(I)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">the code point to query</param>
        <summary>Returns the numeric value of the code point as a nonnegative
            integer.</summary>
        <returns>the numeric value of the code point, or -1 if it has no numeric
            value, or -2 if it has a numeric value that cannot be represented as a
            nonnegative integer</returns>
        <remarks>
          <para>Returns the numeric value of the code point as a nonnegative
            integer.
            &lt;br&gt;If the code point does not have a numeric value, then -1 is returned.
            &lt;br&gt;
            If the code point has a numeric value that cannot be represented as a
            nonnegative integer (for example, a fractional value), then -2 is
            returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getNumericValue(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getNumericValue(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyEnum">
      <MemberSignature Language="C#" Value="public static int GetPropertyEnum (Java.Lang.ICharSequence? propertyAlias);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetPropertyEnum(class Java.Lang.ICharSequence propertyAlias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetPropertyEnum(Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="static member GetPropertyEnum : Java.Lang.ICharSequence -&gt; int" Usage="Android.Icu.Lang.UCharacter.GetPropertyEnum propertyAlias" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPropertyEnum", "(Ljava/lang/CharSequence;)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPropertyEnum", "(Ljava/lang/CharSequence;)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyAlias" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="propertyAlias">the property name to be matched.  The name
            is compared using "loose matching" as described in
            PropertyAliases.txt.</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Return the UProperty selector for a given property name, as
            specified in the Unicode database file PropertyAliases.</summary>
        <returns>a UProperty enum.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Return the UProperty selector for a given property name, as
            specified in the Unicode database file PropertyAliases.txt.
            Short, long, and any other variants are recognized.
            
            In addition, this function maps the synthetic names "gcm" /
            "General_Category_Mask" to the property
            UProperty.GENERAL_CATEGORY_MASK.  These names are not in
            PropertyAliases.txt.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getPropertyEnum(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getPropertyEnum(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyEnum">
      <MemberSignature Language="C#" Value="public static int GetPropertyEnum (string? propertyAlias);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetPropertyEnum(string propertyAlias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetPropertyEnum(System.String)" />
      <MemberSignature Language="F#" Value="static member GetPropertyEnum : string -&gt; int" Usage="Android.Icu.Lang.UCharacter.GetPropertyEnum propertyAlias" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyAlias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyAlias">the property name to be matched.  The name
            is compared using "loose matching" as described in
            PropertyAliases.txt.</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Return the UProperty selector for a given property name, as
            specified in the Unicode database file PropertyAliases.</summary>
        <returns>a UProperty enum.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Return the UProperty selector for a given property name, as
            specified in the Unicode database file PropertyAliases.txt.
            Short, long, and any other variants are recognized.
            
            In addition, this function maps the synthetic names "gcm" /
            "General_Category_Mask" to the property
            UProperty.GENERAL_CATEGORY_MASK.  These names are not in
            PropertyAliases.txt.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getPropertyEnum(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getPropertyEnum(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyName">
      <MemberSignature Language="C#" Value="public static string? GetPropertyName (int property, int nameChoice);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyName(int32 property, int32 nameChoice) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetPropertyName(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetPropertyName : int * int -&gt; string" Usage="Android.Icu.Lang.UCharacter.GetPropertyName (property, nameChoice)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPropertyName", "(II)Ljava/lang/String;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPropertyName", "(II)Ljava/lang/String;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Int32" />
        <Parameter Name="nameChoice" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="property">UProperty selector.</param>
        <param name="nameChoice">UProperty.NameChoice selector for which name
            to get.  All properties have a long name.  Most have a short
            name, but some do not.  Unicode allows for additional names; if
            present these will be returned by UProperty.NameChoice.LONG + i,
            where i=1, 2,...</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Return the Unicode name for a given property, as given in the
            Unicode database file PropertyAliases.</summary>
        <returns>a name, or null if Unicode explicitly defines no name
            ("n/a") for a given property/nameChoice.  If a given nameChoice
            throws an exception, then all larger values of nameChoice will
            throw an exception.  If null is returned for a given
            nameChoice, then other nameChoice values may return non-null
            results.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Return the Unicode name for a given property, as given in the
            Unicode database file PropertyAliases.txt.  Most properties
            have more than one name.  The nameChoice determines which one
            is returned.
            
            In addition, this function maps the property
            UProperty.GENERAL_CATEGORY_MASK to the synthetic names "gcm" /
            "General_Category_Mask".  These names are not in
            PropertyAliases.txt.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getPropertyName(int,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getPropertyName(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueEnum">
      <MemberSignature Language="C#" Value="public static int GetPropertyValueEnum (int property, Java.Lang.ICharSequence? valueAlias);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetPropertyValueEnum(int32 property, class Java.Lang.ICharSequence valueAlias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetPropertyValueEnum(System.Int32,Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="static member GetPropertyValueEnum : int * Java.Lang.ICharSequence -&gt; int" Usage="Android.Icu.Lang.UCharacter.GetPropertyValueEnum (property, valueAlias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPropertyValueEnum", "(ILjava/lang/CharSequence;)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPropertyValueEnum", "(ILjava/lang/CharSequence;)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Int32" />
        <Parameter Name="valueAlias" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="property">UProperty selector constant.
            UProperty.INT_START &amp;lt;= property &amp;lt; UProperty.INT_LIMIT or
            UProperty.BINARY_START &amp;lt;= property &amp;lt; UProperty.BINARY_LIMIT or
            UProperty.MASK_START &amp;lt; = property &amp;lt; UProperty.MASK_LIMIT.
            Only these properties can be enumerated.</param>
        <param name="valueAlias">the value name to be matched.  The name is
            compared using "loose matching" as described in
            PropertyValueAliases.txt.</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Return the property value integer for a given value name, as
            specified in the Unicode database file PropertyValueAliases.</summary>
        <returns>a value integer.  Note: UProperty.GENERAL_CATEGORY
            values are mask values produced by left-shifting 1 by
            UCharacter.getType().  This allows grouped categories such as
            [:L:] to be represented.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Return the property value integer for a given value name, as
            specified in the Unicode database file PropertyValueAliases.txt.
            Short, long, and any other variants are recognized.
            
            Note: Some of the names in PropertyValueAliases.txt will only be
            recognized with UProperty.GENERAL_CATEGORY_MASK, not
            UProperty.GENERAL_CATEGORY.  These include: "C" / "Other", "L" /
            "Letter", "LC" / "Cased_Letter", "M" / "Mark", "N" / "Number", "P"
            / "Punctuation", "S" / "Symbol", and "Z" / "Separator".</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getPropertyValueEnum(int,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getPropertyValueEnum(int, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueEnum">
      <MemberSignature Language="C#" Value="public static int GetPropertyValueEnum (int property, string? valueAlias);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetPropertyValueEnum(int32 property, string valueAlias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetPropertyValueEnum(System.Int32,System.String)" />
      <MemberSignature Language="F#" Value="static member GetPropertyValueEnum : int * string -&gt; int" Usage="Android.Icu.Lang.UCharacter.GetPropertyValueEnum (property, valueAlias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Int32" />
        <Parameter Name="valueAlias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">UProperty selector constant.
            UProperty.INT_START &amp;lt;= property &amp;lt; UProperty.INT_LIMIT or
            UProperty.BINARY_START &amp;lt;= property &amp;lt; UProperty.BINARY_LIMIT or
            UProperty.MASK_START &amp;lt; = property &amp;lt; UProperty.MASK_LIMIT.
            Only these properties can be enumerated.</param>
        <param name="valueAlias">the value name to be matched.  The name is
            compared using "loose matching" as described in
            PropertyValueAliases.txt.</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Return the property value integer for a given value name, as
            specified in the Unicode database file PropertyValueAliases.</summary>
        <returns>a value integer.  Note: UProperty.GENERAL_CATEGORY
            values are mask values produced by left-shifting 1 by
            UCharacter.getType().  This allows grouped categories such as
            [:L:] to be represented.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Return the property value integer for a given value name, as
            specified in the Unicode database file PropertyValueAliases.txt.
            Short, long, and any other variants are recognized.
            
            Note: Some of the names in PropertyValueAliases.txt will only be
            recognized with UProperty.GENERAL_CATEGORY_MASK, not
            UProperty.GENERAL_CATEGORY.  These include: "C" / "Other", "L" /
            "Letter", "LC" / "Cased_Letter", "M" / "Mark", "N" / "Number", "P"
            / "Punctuation", "S" / "Symbol", and "Z" / "Separator".</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getPropertyValueEnum(int,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getPropertyValueEnum(int, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueName">
      <MemberSignature Language="C#" Value="public static string? GetPropertyValueName (int property, int value, int nameChoice);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValueName(int32 property, int32 value, int32 nameChoice) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetPropertyValueName(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetPropertyValueName : int * int * int -&gt; string" Usage="Android.Icu.Lang.UCharacter.GetPropertyValueName (property, value, nameChoice)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPropertyValueName", "(III)Ljava/lang/String;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPropertyValueName", "(III)Ljava/lang/String;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="nameChoice" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="property">UProperty selector constant.
            UProperty.INT_START &amp;lt;= property &amp;lt; UProperty.INT_LIMIT or
            UProperty.BINARY_START &amp;lt;= property &amp;lt; UProperty.BINARY_LIMIT or
            UProperty.MASK_START &amp;lt; = property &amp;lt; UProperty.MASK_LIMIT.
            If out of range, null is returned.</param>
        <param name="value">selector for a value for the given property.  In
            general, valid values range from 0 up to some maximum.  There
            are a few exceptions: (1.) UProperty.BLOCK values begin at the
            non-zero value BASIC_LATIN.getID().  (2.)
            UProperty.CANONICAL_COMBINING_CLASS values are not contiguous
            and range from 0..240.  (3.)  UProperty.GENERAL_CATEGORY_MASK values
            are mask values produced by left-shifting 1 by
            UCharacter.getType().  This allows grouped categories such as
            [:L:] to be represented.  Mask values are non-contiguous.</param>
        <param name="nameChoice">UProperty.NameChoice selector for which name
            to get.  All values have a long name.  Most have a short name,
            but some do not.  Unicode allows for additional names; if
            present these will be returned by UProperty.NameChoice.LONG + i,
            where i=1, 2,...</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Return the Unicode name for a given property value, as given in
            the Unicode database file PropertyValueAliases.</summary>
        <returns>a name, or null if Unicode explicitly defines no name
            ("n/a") for a given property/value/nameChoice.  If a given
            nameChoice throws an exception, then all larger values of
            nameChoice will throw an exception.  If null is returned for a
            given nameChoice, then other nameChoice values may return
            non-null results.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Return the Unicode name for a given property value, as given in
            the Unicode database file PropertyValueAliases.txt.  Most
            values have more than one name.  The nameChoice determines
            which one is returned.
            
            Note: Some of the names in PropertyValueAliases.txt can only be
            retrieved using UProperty.GENERAL_CATEGORY_MASK, not
            UProperty.GENERAL_CATEGORY.  These include: "C" / "Other", "L" /
            "Letter", "LC" / "Cased_Letter", "M" / "Mark", "N" / "Number", "P"
            / "Punctuation", "S" / "Symbol", and "Z" / "Separator".</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getPropertyValueName(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getPropertyValueName(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public static int GetType (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetType(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetType(System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetType : int -&gt; int" Usage="Android.Icu.Lang.UCharacter.GetType ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getType", "(I)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getType", "(I)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point whose type is to be determined</param>
        <summary>Returns a value indicating a code point's Unicode category.</summary>
        <returns>category which is a value of UCharacterCategory</returns>
        <remarks>
          <para>Returns a value indicating a code point's Unicode category.
            Up-to-date Unicode implementation of java.lang.Character.getType()
            except for the above mentioned code points that had their category
            changed.&lt;br&gt;
            Return results are constants from the interface
            UCharacterCategory&lt;br&gt;
            &lt;em&gt;NOTE:&lt;/em&gt; the UCharacterCategory values are &lt;em&gt;not&lt;/em&gt; compatible with
            those returned by java.lang.Character.getType.  UCharacterCategory values
            match the ones used in ICU4C, while java.lang.Character type
            values, though similar, skip the value 17.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getType(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getType(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeNumericValue">
      <MemberSignature Language="C#" Value="public static double GetUnicodeNumericValue (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetUnicodeNumericValue(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.GetUnicodeNumericValue(System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetUnicodeNumericValue : int -&gt; double" Usage="Android.Icu.Lang.UCharacter.GetUnicodeNumericValue ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getUnicodeNumericValue", "(I)D", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getUnicodeNumericValue", "(I)D", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">Code point to get the numeric value for.</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the numeric value for a Unicode code point as defined in the
            Unicode Character Database.</summary>
        <returns>numeric value of ch, or NO_NUMERIC_VALUE if none is defined.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the numeric value for a Unicode code point as defined in the
            Unicode Character Database.</para>
          <para>A "double" return type is necessary because some numeric values are
            fractions, negative, or too large for int.</para>
          <para>For characters without any numeric values in the Unicode Character
            Database, this function will return NO_NUMERIC_VALUE.
            Note: This is different from the Unicode Standard which specifies NaN as the default value.</para>
          <para>&lt;em&gt;API Change:&lt;/em&gt; In release 2.2 and prior, this API has a
            return type int and returns -1 when the argument ch does not have a
            corresponding numeric value. This has been changed to synch with ICU4C
            
            This corresponds to the ICU4C function u_getNumericValue.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getUnicodeNumericValue(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getUnicodeNumericValue(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasBinaryProperty">
      <MemberSignature Language="C#" Value="public static bool HasBinaryProperty (Java.Lang.ICharSequence? s, int property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasBinaryProperty(class Java.Lang.ICharSequence s, int32 property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.HasBinaryProperty(Java.Lang.ICharSequence,System.Int32)" />
      <MemberSignature Language="F#" Value="static member HasBinaryProperty : Java.Lang.ICharSequence * int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.HasBinaryProperty (s, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hasBinaryProperty", "(Ljava/lang/CharSequence;I)Z", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hasBinaryProperty", "(Ljava/lang/CharSequence;I)Z", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="Java.Lang.ICharSequence" />
        <Parameter Name="property" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">String to test.</param>
        <param name="property">UProperty selector constant, identifies which binary property to check.
                   Must be BINARY_START&amp;lt;=which&amp;lt;BINARY_LIMIT.</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Returns true if the property is true for the string.</summary>
        <returns>true or false according to the binary Unicode property value for the string.
                    Also false if <c>property</c> is out of bounds or if the Unicode version
                    does not have data for the property at all.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Returns true if the property is true for the string.
            Same as <c>#hasBinaryProperty(int, int)</c>
            if the string contains exactly one code point.</para>
          <para>Most properties apply only to single code points.
            <see href="https://www.unicode.org/reports/tr51/#Emoji_Sets">UTS #51 Unicode Emoji</see>
            defines several properties of strings.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#hasBinaryProperty(java.lang.CharSequence,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.hasBinaryProperty(java.lang.CharSequence, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasBinaryProperty">
      <MemberSignature Language="C#" Value="public static bool HasBinaryProperty (int ch, int property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasBinaryProperty(int32 ch, int32 property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.HasBinaryProperty(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member HasBinaryProperty : int * int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.HasBinaryProperty (ch, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hasBinaryProperty", "(II)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hasBinaryProperty", "(II)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
        <Parameter Name="property" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point to test.</param>
        <param name="property">selector constant from android.icu.lang.UProperty,
                   identifies which binary property to check.</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Check a binary Unicode property for a code point.</summary>
        <returns>true or false according to the binary Unicode property value
                    for ch. Also false if property is out of bounds or if the
                    Unicode version does not have data for the property at all, or
                    not for this code point.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Check a binary Unicode property for a code point.</para>
          <para>Unicode, especially in version 3.2, defines many more properties
            than the original set in UnicodeData.txt.</para>
          <para>This API is intended to reflect Unicode properties as defined in
            the Unicode Character Database (UCD) and Unicode Technical Reports
            (UTR).</para>
          <para>For details about the properties see
            <see href="http://www.unicode.org/">http://www.unicode.org/</see>.</para>
          <para>For names of Unicode properties see the UCD file
            PropertyAliases.txt.</para>
          <para>This API does not check the validity of the codepoint.</para>
          <para>Important: If ICU is built with UCD files from Unicode versions
            below 3.2, then properties marked with "new" are not or
            not fully available.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#hasBinaryProperty(int,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.hasBinaryProperty(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasBinaryProperty">
      <MemberSignature Language="C#" Value="public static bool HasBinaryProperty (string? s, int property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasBinaryProperty(string s, int32 property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.HasBinaryProperty(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="static member HasBinaryProperty : string * int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.HasBinaryProperty (s, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="property" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">String to test.</param>
        <param name="property">UProperty selector constant, identifies which binary property to check.
                   Must be BINARY_START&amp;lt;=which&amp;lt;BINARY_LIMIT.</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Returns true if the property is true for the string.</summary>
        <returns>true or false according to the binary Unicode property value for the string.
                    Also false if <c>property</c> is out of bounds or if the Unicode version
                    does not have data for the property at all.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Returns true if the property is true for the string.
            Same as <c>#hasBinaryProperty(int, int)</c>
            if the string contains exactly one code point.</para>
          <para>Most properties apply only to single code points.
            <see href="https://www.unicode.org/reports/tr51/#Emoji_Sets">UTS #51 Unicode Emoji</see>
            defines several properties of strings.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#hasBinaryProperty(java.lang.CharSequence,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.hasBinaryProperty(java.lang.CharSequence, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBaseForm">
      <MemberSignature Language="C#" Value="public static bool IsBaseForm (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBaseForm(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsBaseForm(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsBaseForm : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsBaseForm ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isBaseForm", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isBaseForm", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point to be determined if it is of base form</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Determines whether the specified code point is of base form.</summary>
        <returns>true if the code point is of base form</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Determines whether the specified code point is of base form.
            A code point of base form does not graphically combine with preceding
            characters, and is neither a control nor a format character.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isBaseForm(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isBaseForm(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBMP">
      <MemberSignature Language="C#" Value="public static bool IsBMP (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBMP(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsBMP(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsBMP : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsBMP ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isBMP", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isBMP", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point to be determined if it is not a supplementary
                   character</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Determines if the code point is in the BMP plane.</summary>
        <returns>true if code point is not a supplementary character</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Determines if the code point is in the BMP plane.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isBMP(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isBMP(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsDefined(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsDefined : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsDefined ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isDefined", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isDefined", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point to be determined if it is defined in the most
                   current version of Unicode</param>
        <summary>Determines if a code point has a defined meaning in the up-to-date
            Unicode standard.</summary>
        <returns>true if this code point is defined in unicode</returns>
        <remarks>
          <para>Determines if a code point has a defined meaning in the up-to-date
            Unicode standard.
            E.g. supplementary code points though allocated space are not defined in
            Unicode yet.&lt;br&gt;
            Up-to-date Unicode implementation of java.lang.Character.isDefined()</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isDefined(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isDefined(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsDigit(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsDigit : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsDigit ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isDigit", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isDigit", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point to query</param>
        <summary>Determines if a code point is a Java digit.</summary>
        <returns>true if this code point is a digit</returns>
        <remarks>
          <para>Determines if a code point is a Java digit.
            &lt;br&gt;This method observes the semantics of
            <c>java.lang.Character.isDigit()</c>. It returns true for decimal
            digits only.
            &lt;br&gt;&lt;em&gt;Semantic Change:&lt;/em&gt; In release 1.3.1 and prior, this treated
            numeric letters and other numbers as digits.
            This has been changed to conform to the java semantics.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isDigit(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isDigit(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsHighSurrogate(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsHighSurrogate : char -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsHighSurrogate ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isHighSurrogate", "(C)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isHighSurrogate", "(C)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the char to check</param>
        <summary>Same as <c>Character#isHighSurrogate</c>,</summary>
        <returns>true if ch is a high (lead) surrogate</returns>
        <remarks>
          <para>Same as <c>Character#isHighSurrogate</c>,</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isHighSurrogate(char)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isHighSurrogate(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsHighSurrogate(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsHighSurrogate : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsHighSurrogate codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isHighSurrogate", "(I)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isHighSurrogate", "(I)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the code point to check
                   (In ICU 3.0-69 the type of this parameter was <c>char</c>.)</param>
        <summary>Same as <c>Character#isHighSurrogate</c>,
            except that the ICU version accepts <c>int</c> for code points.</summary>
        <returns>true if codePoint is a high (lead) surrogate</returns>
        <remarks>
          <para>Same as <c>Character#isHighSurrogate</c>,
            except that the ICU version accepts <c>int</c> for code points.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isHighSurrogate(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isHighSurrogate(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdentifierIgnorable">
      <MemberSignature Language="C#" Value="public static bool IsIdentifierIgnorable (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsIdentifierIgnorable(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsIdentifierIgnorable(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsIdentifierIgnorable : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsIdentifierIgnorable ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isIdentifierIgnorable", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isIdentifierIgnorable", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point to be determined if it can be ignored in a Unicode
                   identifier.</param>
        <summary>Determines if the specified code point should be regarded as an
            ignorable character in a Java identifier.</summary>
        <returns>true if the code point is ignorable</returns>
        <remarks>
          <para>Determines if the specified code point should be regarded as an
            ignorable character in a Java identifier.
            A character is Java-identifier-ignorable if it has the general category
            Cf Formatting Control, or it is a non-Java-whitespace ISO control:
            U+0000..U+0008, U+000E..U+001B, U+007F..U+009F.&lt;br&gt;
            Up-to-date Unicode implementation of
            java.lang.Character.isIdentifierIgnorable().&lt;br&gt;
            See <see href="https://www.unicode.org/reports/tr8/">UTR #8</see>.</para>
          <para>Note that Unicode just recommends to ignore Cf (format controls).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isIdentifierIgnorable(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isIdentifierIgnorable(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsISOControl">
      <MemberSignature Language="C#" Value="public static bool IsISOControl (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsISOControl(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsISOControl(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsISOControl : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsISOControl ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isISOControl", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isISOControl", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point to determine if it is an ISO control character</param>
        <summary>Determines if the specified code point is an ISO control character.</summary>
        <returns>true if code point is a ISO control character</returns>
        <remarks>
          <para>Determines if the specified code point is an ISO control character.
            A code point is considered to be an ISO control character if it is in
            the range &amp;#92;u0000 through &amp;#92;u001F or in the range &amp;#92;u007F through
            &amp;#92;u009F.&lt;br&gt;
            Up-to-date Unicode implementation of java.lang.Character.isISOControl()</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isISOControl(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isISOControl(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsJavaIdentifierPart">
      <MemberSignature Language="C#" Value="public static bool IsJavaIdentifierPart (int cp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsJavaIdentifierPart(int32 cp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsJavaIdentifierPart(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsJavaIdentifierPart : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsJavaIdentifierPart cp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isJavaIdentifierPart", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isJavaIdentifierPart", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cp" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cp">the code point</param>
        <summary>Compatibility override of Java method, delegates to
            java.</summary>
        <returns>true if the code point can continue a java identifier.</returns>
        <remarks>
          <para>Compatibility override of Java method, delegates to
            java.lang.Character.isJavaIdentifierPart.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isJavaIdentifierPart(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isJavaIdentifierPart(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsJavaIdentifierStart">
      <MemberSignature Language="C#" Value="public static bool IsJavaIdentifierStart (int cp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsJavaIdentifierStart(int32 cp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsJavaIdentifierStart(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsJavaIdentifierStart : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsJavaIdentifierStart cp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isJavaIdentifierStart", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isJavaIdentifierStart", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cp" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cp">the code point</param>
        <summary>Compatibility override of Java method, delegates to
            java.</summary>
        <returns>true if the code point can start a java identifier.</returns>
        <remarks>
          <para>Compatibility override of Java method, delegates to
            java.lang.Character.isJavaIdentifierStart.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isJavaIdentifierStart(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isJavaIdentifierStart(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLegal">
      <MemberSignature Language="C#" Value="public static bool IsLegal (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLegal(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsLegal(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsLegal : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsLegal ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isLegal", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isLegal", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point to determine if it is a legal code point by itself</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; A code point is illegal if and only if
            &lt;ul&gt;
            &lt;li&gt; Out of bounds, less than 0 or greater than UCharacter.</summary>
        <returns>true if and only if legal.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; A code point is illegal if and only if
            &lt;ul&gt;
            &lt;li&gt; Out of bounds, less than 0 or greater than UCharacter.MAX_VALUE
            &lt;li&gt; A surrogate value, 0xD800 to 0xDFFF
            &lt;li&gt; Not-a-character, having the form 0x xxFFFF or 0x xxFFFE
            &lt;/ul&gt;
            Note: legal does not mean that it is assigned in this version of Unicode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isLegal(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isLegal(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLegal">
      <MemberSignature Language="C#" Value="public static bool IsLegal (string? str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLegal(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsLegal(System.String)" />
      <MemberSignature Language="F#" Value="static member IsLegal : string -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsLegal str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isLegal", "(Ljava/lang/String;)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isLegal", "(Ljava/lang/String;)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">containing code points to examin</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; A string is legal iff all its code points are legal.</summary>
        <returns>true if and only if legal.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; A string is legal iff all its code points are legal.
            A code point is illegal if and only if
            &lt;ul&gt;
            &lt;li&gt; Out of bounds, less than 0 or greater than UCharacter.MAX_VALUE
            &lt;li&gt; A surrogate value, 0xD800 to 0xDFFF
            &lt;li&gt; Not-a-character, having the form 0x xxFFFF or 0x xxFFFE
            &lt;/ul&gt;
            Note: legal does not mean that it is assigned in this version of Unicode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isLegal(java.lang.String)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isLegal(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsLetter(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsLetter : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsLetter ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isLetter", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isLetter", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point to determine if it is a letter</param>
        <summary>Determines if the specified code point is a letter.</summary>
        <returns>true if code point is a letter</returns>
        <remarks>
          <para>Determines if the specified code point is a letter.
            Up-to-date Unicode implementation of java.lang.Character.isLetter()</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isLetter(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isLetter(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsLetterOrDigit(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsLetterOrDigit ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isLetterOrDigit", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isLetterOrDigit", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point to determine if it is a letter or a digit</param>
        <summary>Determines if the specified code point is a letter or digit.</summary>
        <returns>true if code point is a letter or a digit</returns>
        <remarks>
          <para>Determines if the specified code point is a letter or digit.
            &lt;strong&gt;[icu] Note:&lt;/strong&gt; This method, unlike java.lang.Character does not regard the ascii
            characters 'A' - 'Z' and 'a' - 'z' as digits.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isLetterOrDigit(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isLetterOrDigit(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLowerCase">
      <MemberSignature Language="C#" Value="public static bool IsLowerCase (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowerCase(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsLowerCase(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsLowerCase : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsLowerCase ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isLowerCase", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isLowerCase", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point to determine if it is in lowercase</param>
        <summary>Determines if the specified code point is a lowercase character.</summary>
        <returns>true if code point is a lowercase character</returns>
        <remarks>
          <para>Determines if the specified code point is a lowercase character.
            UnicodeData only contains case mappings for code points where they are
            one-to-one mappings; it also omits information about context-sensitive
            case mappings.&lt;br&gt; For more information about Unicode case mapping
            please refer to the
            <see href="https://www.unicode.org/reports/tr21/">Technical report
            #21</see>.&lt;br&gt;
            Up-to-date Unicode implementation of java.lang.Character.isLowerCase()</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isLowerCase(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isLowerCase(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsLowSurrogate(System.Char)" />
      <MemberSignature Language="F#" Value="static member IsLowSurrogate : char -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsLowSurrogate ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isLowSurrogate", "(C)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isLowSurrogate", "(C)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">the char to check</param>
        <summary>Same as <c>Character#isLowSurrogate</c>,</summary>
        <returns>true if ch is a low (trail) surrogate</returns>
        <remarks>
          <para>Same as <c>Character#isLowSurrogate</c>,</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isLowSurrogate(char)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isLowSurrogate(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsLowSurrogate(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsLowSurrogate : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsLowSurrogate codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isLowSurrogate", "(I)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isLowSurrogate", "(I)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">the code point to check
                   (In ICU 3.0-69 the type of this parameter was <c>char</c>.)</param>
        <summary>Same as <c>Character#isLowSurrogate</c>,
            except that the ICU version accepts <c>int</c> for code points.</summary>
        <returns>true if codePoint is a low (trail) surrogate</returns>
        <remarks>
          <para>Same as <c>Character#isLowSurrogate</c>,
            except that the ICU version accepts <c>int</c> for code points.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isLowSurrogate(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isLowSurrogate(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMirrored">
      <MemberSignature Language="C#" Value="public static bool IsMirrored (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMirrored(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsMirrored(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsMirrored : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsMirrored ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isMirrored", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isMirrored", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point whose mirror is to be determined</param>
        <summary>Determines whether the code point has the "mirrored" property.</summary>
        <returns>true if the code point has the "mirrored" property</returns>
        <remarks>
          <para>Determines whether the code point has the "mirrored" property.
            This property is set for characters that are commonly used in
            Right-To-Left contexts and need to be displayed with a "mirrored"
            glyph.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isMirrored(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isMirrored(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrintable">
      <MemberSignature Language="C#" Value="public static bool IsPrintable (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPrintable(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsPrintable(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsPrintable : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsPrintable ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isPrintable", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isPrintable", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point to be determined if it is printable</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Determines whether the specified code point is a printable character
            according to the Unicode standard.</summary>
        <returns>true if the code point is a printable character</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Determines whether the specified code point is a printable character
            according to the Unicode standard.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isPrintable(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isPrintable(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpaceChar">
      <MemberSignature Language="C#" Value="public static bool IsSpaceChar (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSpaceChar(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsSpaceChar(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsSpaceChar : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsSpaceChar ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isSpaceChar", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isSpaceChar", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point to determine if it is a space</param>
        <summary>Determines if the specified code point is a Unicode specified space
            character, i.</summary>
        <returns>true if the specified code point is a space character</returns>
        <remarks>
          <para>Determines if the specified code point is a Unicode specified space
            character, i.e. if code point is in the category Zs, Zl and Zp.
            Up-to-date Unicode implementation of java.lang.Character.isSpaceChar().</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isSpaceChar(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isSpaceChar(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupplementary">
      <MemberSignature Language="C#" Value="public static bool IsSupplementary (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSupplementary(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsSupplementary(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsSupplementary : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsSupplementary ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isSupplementary", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isSupplementary", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point to be determined if it is in the supplementary
                   plane</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Determines if the code point is a supplementary character.</summary>
        <returns>true if code point is a supplementary character</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Determines if the code point is a supplementary character.
            A code point is a supplementary character if and only if it is greater
            than SUPPLEMENTARY_MIN_VALUE</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isSupplementary(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isSupplementary(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupplementaryCodePoint">
      <MemberSignature Language="C#" Value="public static bool IsSupplementaryCodePoint (int cp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSupplementaryCodePoint(int32 cp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsSupplementaryCodePoint(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsSupplementaryCodePoint : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsSupplementaryCodePoint cp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isSupplementaryCodePoint", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isSupplementaryCodePoint", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cp" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cp">the code point to check</param>
        <summary>Same as <c>Character#isSupplementaryCodePoint</c>.</summary>
        <returns>true if cp is a supplementary code point</returns>
        <remarks>
          <para>Same as <c>Character#isSupplementaryCodePoint</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isSupplementaryCodePoint(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isSupplementaryCodePoint(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (char high, char low);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(char high, char low) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsSurrogatePair(System.Char,System.Char)" />
      <MemberSignature Language="F#" Value="static member IsSurrogatePair : char * char -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsSurrogatePair (high, low)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isSurrogatePair", "(CC)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isSurrogatePair", "(CC)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="high" Type="System.Char" />
        <Parameter Name="low" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="high">the high (lead) char</param>
        <param name="low">the low (trail) char</param>
        <summary>Same as <c>Character#isSurrogatePair</c>.</summary>
        <returns>true if high, low form a surrogate pair</returns>
        <remarks>
          <para>Same as <c>Character#isSurrogatePair</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isSurrogatePair(char,%20char)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isSurrogatePair(char, char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (int high, int low);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(int32 high, int32 low) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsSurrogatePair(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsSurrogatePair : int * int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsSurrogatePair (high, low)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isSurrogatePair", "(II)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isSurrogatePair", "(II)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="high" Type="System.Int32" />
        <Parameter Name="low" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="high">the high (lead) unit
                   (In ICU 3.0-69 the type of both parameters was <c>char</c>.)</param>
        <param name="low">the low (trail) unit</param>
        <summary>Same as <c>Character#isSurrogatePair</c>,
            except that the ICU version accepts <c>int</c> for code points.</summary>
        <returns>true if high, low form a surrogate pair</returns>
        <remarks>
          <para>Same as <c>Character#isSurrogatePair</c>,
            except that the ICU version accepts <c>int</c> for code points.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isSurrogatePair(int,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isSurrogatePair(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTitleCase">
      <MemberSignature Language="C#" Value="public static bool IsTitleCase (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTitleCase(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsTitleCase(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsTitleCase : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsTitleCase ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isTitleCase", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isTitleCase", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point to determine if it is in title case</param>
        <summary>Determines if the specified code point is a titlecase character.</summary>
        <returns>true if the specified code point is a titlecase character</returns>
        <remarks>
          <para>Determines if the specified code point is a titlecase character.
            UnicodeData only contains case mappings for code points where they are
            one-to-one mappings; it also omits information about context-sensitive
            case mappings.&lt;br&gt;
            For more information about Unicode case mapping please refer to the
            <see href="https://www.unicode.org/reports/tr21/">
            Technical report #21</see>.&lt;br&gt;
            Up-to-date Unicode implementation of java.lang.Character.isTitleCase().</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isTitleCase(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isTitleCase(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUAlphabetic">
      <MemberSignature Language="C#" Value="public static bool IsUAlphabetic (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUAlphabetic(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsUAlphabetic(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsUAlphabetic : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsUAlphabetic ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isUAlphabetic", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isUAlphabetic", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">codepoint to be tested</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt;</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt;</para>
          <para>Check if a code point has the Alphabetic Unicode property.</para>
          <para>Same as UCharacter.hasBinaryProperty(ch, UProperty.ALPHABETIC).</para>
          <para>Different from UCharacter.isLetter(ch)!</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isUAlphabetic(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isUAlphabetic(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsULowercase">
      <MemberSignature Language="C#" Value="public static bool IsULowercase (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsULowercase(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsULowercase(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsULowercase : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsULowercase ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isULowercase", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isULowercase", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">codepoint to be tested</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt;</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt;</para>
          <para>Check if a code point has the Lowercase Unicode property.</para>
          <para>Same as UCharacter.hasBinaryProperty(ch, UProperty.LOWERCASE).</para>
          <para>This is different from UCharacter.isLowerCase(ch)!</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isULowercase(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isULowercase(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnicodeIdentifierPart">
      <MemberSignature Language="C#" Value="public static bool IsUnicodeIdentifierPart (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUnicodeIdentifierPart(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsUnicodeIdentifierPart(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsUnicodeIdentifierPart : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsUnicodeIdentifierPart ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isUnicodeIdentifierPart", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isUnicodeIdentifierPart", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">the code point to be tested</param>
        <summary>Determines if the specified character is permissible as a
            non-initial character of an identifier
            according to UAX #31 Unicode Identifier and Pattern Syntax.</summary>
        <returns>true if the code point may occur as a non-initial character of an identifier</returns>
        <remarks>
          <para>Determines if the specified character is permissible as a
            non-initial character of an identifier
            according to UAX #31 Unicode Identifier and Pattern Syntax.</para>
          <para>Same as Unicode ID_Continue (<c>UProperty#ID_CONTINUE</c>).</para>
          <para>Note that this differs from <c>java.lang.Character#isUnicodeIdentifierPart(char)</c>
            which implements a different identifier profile.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isUnicodeIdentifierPart(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isUnicodeIdentifierPart(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnicodeIdentifierStart">
      <MemberSignature Language="C#" Value="public static bool IsUnicodeIdentifierStart (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUnicodeIdentifierStart(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsUnicodeIdentifierStart(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsUnicodeIdentifierStart : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsUnicodeIdentifierStart ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isUnicodeIdentifierStart", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isUnicodeIdentifierStart", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">the code point to be tested</param>
        <summary>Determines if the specified character is permissible as the first character in an identifier
            according to UAX #31 Unicode Identifier and Pattern Syntax.</summary>
        <returns>true if the code point may start an identifier</returns>
        <remarks>
          <para>Determines if the specified character is permissible as the first character in an identifier
            according to UAX #31 Unicode Identifier and Pattern Syntax.</para>
          <para>Same as Unicode ID_Start (<c>UProperty#ID_START</c>).</para>
          <para>Note that this differs from <c>java.lang.Character#isUnicodeIdentifierStart(char)</c>
            which implements a different identifier profile.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isUnicodeIdentifierStart(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isUnicodeIdentifierStart(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUpperCase">
      <MemberSignature Language="C#" Value="public static bool IsUpperCase (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpperCase(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsUpperCase(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsUpperCase : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsUpperCase ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isUpperCase", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isUpperCase", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point to determine if it is in uppercase</param>
        <summary>Determines if the specified code point is an uppercase character.</summary>
        <returns>true if the code point is an uppercase character</returns>
        <remarks>
          <para>Determines if the specified code point is an uppercase character.
            UnicodeData only contains case mappings for code point where they are
            one-to-one mappings; it also omits information about context-sensitive
            case mappings.&lt;br&gt;
            For language specific case conversion behavior, use
            toUpperCase(locale, str). &lt;br&gt;
            For example, the case conversion for dot-less i and dotted I in Turkish,
            or for final sigma in Greek.
            For more information about Unicode case mapping please refer to the
            <see href="https://www.unicode.org/reports/tr21/">
            Technical report #21</see>.&lt;br&gt;
            Up-to-date Unicode implementation of java.lang.Character.isUpperCase().</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isUpperCase(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isUpperCase(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUUppercase">
      <MemberSignature Language="C#" Value="public static bool IsUUppercase (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUUppercase(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsUUppercase(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsUUppercase : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsUUppercase ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isUUppercase", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isUUppercase", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">codepoint to be tested</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt;</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt;</para>
          <para>Check if a code point has the Uppercase Unicode property.</para>
          <para>Same as UCharacter.hasBinaryProperty(ch, UProperty.UPPERCASE).</para>
          <para>This is different from UCharacter.isUpperCase(ch)!</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isUUppercase(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isUUppercase(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsUWhiteSpace (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUWhiteSpace(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsUWhiteSpace(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsUWhiteSpace : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsUWhiteSpace ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isUWhiteSpace", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isUWhiteSpace", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">codepoint to be tested</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt;</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt;</para>
          <para>Check if a code point has the White_Space Unicode property.</para>
          <para>Same as UCharacter.hasBinaryProperty(ch, UProperty.WHITE_SPACE).</para>
          <para>This is different from both UCharacter.isSpace(ch) and
            UCharacter.isWhitespace(ch)!</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isUWhiteSpace(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isUWhiteSpace(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidCodePoint">
      <MemberSignature Language="C#" Value="public static bool IsValidCodePoint (int cp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidCodePoint(int32 cp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsValidCodePoint(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsValidCodePoint : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsValidCodePoint cp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isValidCodePoint", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isValidCodePoint", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cp" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cp">the code point to check</param>
        <summary>Equivalent to <c>Character#isValidCodePoint</c>.</summary>
        <returns>true if cp is a valid code point</returns>
        <remarks>
          <para>Equivalent to <c>Character#isValidCodePoint</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isValidCodePoint(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isValidCodePoint(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWhitespace">
      <MemberSignature Language="C#" Value="public static bool IsWhitespace (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhitespace(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.IsWhitespace(System.Int32)" />
      <MemberSignature Language="F#" Value="static member IsWhitespace : int -&gt; bool" Usage="Android.Icu.Lang.UCharacter.IsWhitespace ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isWhitespace", "(I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isWhitespace", "(I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point to determine if it is a white space</param>
        <summary>Determines if the specified code point is a white space character.</summary>
        <returns>true if the specified code point is a white space character</returns>
        <remarks>
          <para>Determines if the specified code point is a white space character.
            A code point is considered to be an whitespace character if and only
            if it satisfies one of the following criteria:
            &lt;ul&gt;
            &lt;li&gt; It is a Unicode Separator character (categories "Z" = "Zs" or "Zl" or "Zp"), but is not
                 also a non-breaking space (&amp;#92;u00A0 or &amp;#92;u2007 or &amp;#92;u202F).
            &lt;li&gt; It is &amp;#92;u0009, HORIZONTAL TABULATION.
            &lt;li&gt; It is &amp;#92;u000A, LINE FEED.
            &lt;li&gt; It is &amp;#92;u000B, VERTICAL TABULATION.
            &lt;li&gt; It is &amp;#92;u000C, FORM FEED.
            &lt;li&gt; It is &amp;#92;u000D, CARRIAGE RETURN.
            &lt;li&gt; It is &amp;#92;u001C, FILE SEPARATOR.
            &lt;li&gt; It is &amp;#92;u001D, GROUP SEPARATOR.
            &lt;li&gt; It is &amp;#92;u001E, RECORD SEPARATOR.
            &lt;li&gt; It is &amp;#92;u001F, UNIT SEPARATOR.
            &lt;/ul&gt;
            
            This API tries to sync with the semantics of Java's
            java.lang.Character.isWhitespace(), but it may not return
            the exact same results because of the Unicode version
            difference.</para>
          <para>Note: Unicode 4.0.1 changed U+200B ZERO WIDTH SPACE from a Space Separator (Zs)
            to a Format Control (Cf). Since then, isWhitespace(0x200b) returns false.
            See http://www.unicode.org/versions/Unicode4.0.1/</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#isWhitespace(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.isWhitespace(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Lang.UCharacter.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Icu.Lang.UCharacter.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCodePoint">
      <MemberSignature Language="C#" Value="public const int MaxCodePoint = 1114111;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxCodePoint = (1114111)" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Lang.UCharacter.MaxCodePoint" />
      <MemberSignature Language="F#" Value="val mutable MaxCodePoint : int" Usage="Android.Icu.Lang.UCharacter.MaxCodePoint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MAX_CODE_POINT", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MAX_CODE_POINT", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1114111</MemberValue>
      <Docs>
        <summary>Constant U+10FFFF, same as <c>Character#MAX_CODE_POINT</c>.</summary>
        <remarks>
          <para>Constant U+10FFFF, same as <c>Character#MAX_CODE_POINT</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#MAX_CODE_POINT" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.MAX_CODE_POINT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxHighSurrogate">
      <MemberSignature Language="C#" Value="public const char MaxHighSurrogate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MaxHighSurrogate" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Lang.UCharacter.MaxHighSurrogate" />
      <MemberSignature Language="F#" Value="val mutable MaxHighSurrogate : char" Usage="Android.Icu.Lang.UCharacter.MaxHighSurrogate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MAX_HIGH_SURROGATE", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MAX_HIGH_SURROGATE", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Constant U+DBFF, same as <c>Character#MAX_HIGH_SURROGATE</c>.</summary>
        <remarks>
          <para>Constant U+DBFF, same as <c>Character#MAX_HIGH_SURROGATE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#MAX_HIGH_SURROGATE" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.MAX_HIGH_SURROGATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLowSurrogate">
      <MemberSignature Language="C#" Value="public const char MaxLowSurrogate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MaxLowSurrogate" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Lang.UCharacter.MaxLowSurrogate" />
      <MemberSignature Language="F#" Value="val mutable MaxLowSurrogate : char" Usage="Android.Icu.Lang.UCharacter.MaxLowSurrogate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MAX_LOW_SURROGATE", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MAX_LOW_SURROGATE", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Constant U+DFFF, same as <c>Character#MAX_LOW_SURROGATE</c>.</summary>
        <remarks>
          <para>Constant U+DFFF, same as <c>Character#MAX_LOW_SURROGATE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#MAX_LOW_SURROGATE" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.MAX_LOW_SURROGATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRadix">
      <MemberSignature Language="C#" Value="public const int MaxRadix = 36;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxRadix = (36)" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Lang.UCharacter.MaxRadix" />
      <MemberSignature Language="F#" Value="val mutable MaxRadix : int" Usage="Android.Icu.Lang.UCharacter.MaxRadix" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MAX_RADIX", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MAX_RADIX", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>36</MemberValue>
      <Docs>
        <summary>Compatibility constant for Java Character's MAX_RADIX.</summary>
        <remarks>
          <para>Compatibility constant for Java Character's MAX_RADIX.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#MAX_RADIX" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.MAX_RADIX</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxSurrogate">
      <MemberSignature Language="C#" Value="public const char MaxSurrogate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MaxSurrogate" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Lang.UCharacter.MaxSurrogate" />
      <MemberSignature Language="F#" Value="val mutable MaxSurrogate : char" Usage="Android.Icu.Lang.UCharacter.MaxSurrogate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MAX_SURROGATE", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MAX_SURROGATE", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Constant U+DFFF, same as <c>Character#MAX_SURROGATE</c>.</summary>
        <remarks>
          <para>Constant U+DFFF, same as <c>Character#MAX_SURROGATE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#MAX_SURROGATE" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.MAX_SURROGATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const int MaxValue = 1114111;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxValue = (1114111)" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Lang.UCharacter.MaxValue" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : int" Usage="Android.Icu.Lang.UCharacter.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MAX_VALUE", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MAX_VALUE", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1114111</MemberValue>
      <Docs>
        <summary>The highest Unicode code point value (scalar value), constant U+10FFFF (uses 21 bits).</summary>
        <remarks>
          <para>The highest Unicode code point value (scalar value), constant U+10FFFF (uses 21 bits).
            Same as <c>Character#MAX_CODE_POINT</c>.</para>
          <para>Up-to-date Unicode implementation of <c>Character#MAX_VALUE</c>
            which is still a char with the value U+FFFF.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#MAX_VALUE" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.MAX_VALUE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinCodePoint">
      <MemberSignature Language="C#" Value="public const int MinCodePoint = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinCodePoint = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Lang.UCharacter.MinCodePoint" />
      <MemberSignature Language="F#" Value="val mutable MinCodePoint : int" Usage="Android.Icu.Lang.UCharacter.MinCodePoint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MIN_CODE_POINT", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MIN_CODE_POINT", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Constant U+0000, same as <c>Character#MIN_CODE_POINT</c>.</summary>
        <remarks>
          <para>Constant U+0000, same as <c>Character#MIN_CODE_POINT</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#MIN_CODE_POINT" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.MIN_CODE_POINT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinHighSurrogate">
      <MemberSignature Language="C#" Value="public const char MinHighSurrogate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MinHighSurrogate" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Lang.UCharacter.MinHighSurrogate" />
      <MemberSignature Language="F#" Value="val mutable MinHighSurrogate : char" Usage="Android.Icu.Lang.UCharacter.MinHighSurrogate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MIN_HIGH_SURROGATE", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MIN_HIGH_SURROGATE", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Constant U+D800, same as <c>Character#MIN_HIGH_SURROGATE</c>.</summary>
        <remarks>
          <para>Constant U+D800, same as <c>Character#MIN_HIGH_SURROGATE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#MIN_HIGH_SURROGATE" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.MIN_HIGH_SURROGATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinLowSurrogate">
      <MemberSignature Language="C#" Value="public const char MinLowSurrogate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MinLowSurrogate" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Lang.UCharacter.MinLowSurrogate" />
      <MemberSignature Language="F#" Value="val mutable MinLowSurrogate : char" Usage="Android.Icu.Lang.UCharacter.MinLowSurrogate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MIN_LOW_SURROGATE", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MIN_LOW_SURROGATE", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Constant U+DC00, same as <c>Character#MIN_LOW_SURROGATE</c>.</summary>
        <remarks>
          <para>Constant U+DC00, same as <c>Character#MIN_LOW_SURROGATE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#MIN_LOW_SURROGATE" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.MIN_LOW_SURROGATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRadix">
      <MemberSignature Language="C#" Value="public const int MinRadix = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinRadix = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Lang.UCharacter.MinRadix" />
      <MemberSignature Language="F#" Value="val mutable MinRadix : int" Usage="Android.Icu.Lang.UCharacter.MinRadix" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MIN_RADIX", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MIN_RADIX", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Compatibility constant for Java Character's MIN_RADIX.</summary>
        <remarks>
          <para>Compatibility constant for Java Character's MIN_RADIX.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#MIN_RADIX" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.MIN_RADIX</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupplementaryCodePoint">
      <MemberSignature Language="C#" Value="public const int MinSupplementaryCodePoint = 65536;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinSupplementaryCodePoint = (65536)" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Lang.UCharacter.MinSupplementaryCodePoint" />
      <MemberSignature Language="F#" Value="val mutable MinSupplementaryCodePoint : int" Usage="Android.Icu.Lang.UCharacter.MinSupplementaryCodePoint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MIN_SUPPLEMENTARY_CODE_POINT", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MIN_SUPPLEMENTARY_CODE_POINT", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary>Constant U+10000, same as <c>Character#MIN_SUPPLEMENTARY_CODE_POINT</c>.</summary>
        <remarks>
          <para>Constant U+10000, same as <c>Character#MIN_SUPPLEMENTARY_CODE_POINT</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#MIN_SUPPLEMENTARY_CODE_POINT" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.MIN_SUPPLEMENTARY_CODE_POINT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSurrogate">
      <MemberSignature Language="C#" Value="public const char MinSurrogate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MinSurrogate" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Lang.UCharacter.MinSurrogate" />
      <MemberSignature Language="F#" Value="val mutable MinSurrogate : char" Usage="Android.Icu.Lang.UCharacter.MinSurrogate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MIN_SURROGATE", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MIN_SURROGATE", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Constant U+D800, same as <c>Character#MIN_SURROGATE</c>.</summary>
        <remarks>
          <para>Constant U+D800, same as <c>Character#MIN_SURROGATE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#MIN_SURROGATE" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.MIN_SURROGATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const int MinValue = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinValue = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Lang.UCharacter.MinValue" />
      <MemberSignature Language="F#" Value="val mutable MinValue : int" Usage="Android.Icu.Lang.UCharacter.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MIN_VALUE", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MIN_VALUE", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>The lowest Unicode code point value, constant 0.</summary>
        <remarks>
          <para>The lowest Unicode code point value, constant 0.
            Same as <c>Character#MIN_CODE_POINT</c>, same integer value as <c>Character#MIN_VALUE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#MIN_VALUE" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.MIN_VALUE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameIterator">
      <MemberSignature Language="C#" Value="public static Android.Icu.Util.IValueIterator? NameIterator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Icu.Util.IValueIterator NameIterator" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Lang.UCharacter.NameIterator" />
      <MemberSignature Language="F#" Value="static member NameIterator : Android.Icu.Util.IValueIterator" Usage="Android.Icu.Lang.UCharacter.NameIterator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNameIterator", "()Landroid/icu/util/ValueIterator;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNameIterator", "()Landroid/icu/util/ValueIterator;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Util.IValueIterator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt;</summary>
        <value>an iterator</value>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt;</para>
          <para>Returns an iterator for character names, iterating over codepoints.</para>
          <para>This API only gets the iterator for the modern, most up-to-date
            Unicode names. For older 1.0 Unicode names use get1_0NameIterator() or
            for extended names use getExtendedNameIterator().</para>
          <para>Example of use:&lt;br&gt;</para>
          <code lang="text/java">ValueIterator iterator = UCharacter.getNameIterator();
            ValueIterator.Element element = new ValueIterator.Element();
            while (iterator.next(element)) {
                System.out.println("Codepoint \\u" +
                                   Integer.toHexString(element.codepoint) +
                                   " has the name " + (String)element.value);
            }
            </code>
          <para>The maximal range which the name iterator iterates is from
            UCharacter.MIN_VALUE to UCharacter.MAX_VALUE.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getNameIterator()" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getNameIterator()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoNumericValue">
      <MemberSignature Language="C#" Value="public const double NoNumericValue = -123456789;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 NoNumericValue = (-123456789)" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Lang.UCharacter.NoNumericValue" />
      <MemberSignature Language="F#" Value="val mutable NoNumericValue : double" Usage="Android.Icu.Lang.UCharacter.NoNumericValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("NO_NUMERIC_VALUE", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("NO_NUMERIC_VALUE", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>-123456789</MemberValue>
      <Docs>
        <summary>Special value that is returned by getUnicodeNumericValue(int) when no
            numeric value is defined for a code point.</summary>
        <remarks>
          <para>Special value that is returned by getUnicodeNumericValue(int) when no
            numeric value is defined for a code point.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#NO_NUMERIC_VALUE" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.NO_NUMERIC_VALUE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetByCodePoints">
      <MemberSignature Language="C#" Value="public static int OffsetByCodePoints (Java.Lang.ICharSequence? text, int index, int codePointOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 OffsetByCodePoints(class Java.Lang.ICharSequence text, int32 index, int32 codePointOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.OffsetByCodePoints(Java.Lang.ICharSequence,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member OffsetByCodePoints : Java.Lang.ICharSequence * int * int -&gt; int" Usage="Android.Icu.Lang.UCharacter.OffsetByCodePoints (text, index, codePointOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("offsetByCodePoints", "(Ljava/lang/CharSequence;II)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("offsetByCodePoints", "(Ljava/lang/CharSequence;II)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="codePointOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">the characters to check</param>
        <param name="index">the index to adjust</param>
        <param name="codePointOffset">the number of code points by which to offset the index</param>
        <summary>Equivalent to the <c>Character#offsetByCodePoints(CharSequence, int, int)</c>
            method, for convenience.</summary>
        <returns>the adjusted index</returns>
        <remarks>
          <para>Equivalent to the <c>Character#offsetByCodePoints(CharSequence, int, int)</c>
            method, for convenience.  Adjusts the char index by a code point offset.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#offsetByCodePoints(java.lang.CharSequence,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.offsetByCodePoints(java.lang.CharSequence, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetByCodePoints">
      <MemberSignature Language="C#" Value="public static int OffsetByCodePoints (string? text, int index, int codePointOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 OffsetByCodePoints(string text, int32 index, int32 codePointOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.OffsetByCodePoints(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member OffsetByCodePoints : string * int * int -&gt; int" Usage="Android.Icu.Lang.UCharacter.OffsetByCodePoints (text, index, codePointOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="codePointOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">the characters to check</param>
        <param name="index">the index to adjust</param>
        <param name="codePointOffset">the number of code points by which to offset the index</param>
        <summary>Equivalent to the <c>Character#offsetByCodePoints(CharSequence, int, int)</c>
            method, for convenience.</summary>
        <returns>the adjusted index</returns>
        <remarks>
          <para>Equivalent to the <c>Character#offsetByCodePoints(CharSequence, int, int)</c>
            method, for convenience.  Adjusts the char index by a code point offset.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#offsetByCodePoints(java.lang.CharSequence,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.offsetByCodePoints(java.lang.CharSequence, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetByCodePoints">
      <MemberSignature Language="C#" Value="public static int OffsetByCodePoints (char[]? text, int start, int count, int index, int codePointOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 OffsetByCodePoints(char[] text, int32 start, int32 count, int32 index, int32 codePointOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.OffsetByCodePoints(System.Char[],System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member OffsetByCodePoints : char[] * int * int * int * int -&gt; int" Usage="Android.Icu.Lang.UCharacter.OffsetByCodePoints (text, start, count, index, codePointOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("offsetByCodePoints", "([CIIII)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("offsetByCodePoints", "([CIIII)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="codePointOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">the characters to check</param>
        <param name="start">the start of the range to check</param>
        <param name="count">the length of the range to check</param>
        <param name="index">the index to adjust</param>
        <param name="codePointOffset">the number of code points by which to offset the index</param>
        <summary>Equivalent to the
            <c>Character#offsetByCodePoints(char[], int, int, int, int)</c>
            method, for convenience.</summary>
        <returns>the adjusted index</returns>
        <remarks>
          <para>Equivalent to the
            <c>Character#offsetByCodePoints(char[], int, int, int, int)</c>
            method, for convenience.  Adjusts the char index by a code point offset.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#offsetByCodePoints(char[],%20int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.offsetByCodePoints(char[], int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplacementChar">
      <MemberSignature Language="C#" Value="public const int ReplacementChar = 65533;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ReplacementChar = (65533)" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Lang.UCharacter.ReplacementChar" />
      <MemberSignature Language="F#" Value="val mutable ReplacementChar : int" Usage="Android.Icu.Lang.UCharacter.ReplacementChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("REPLACEMENT_CHAR", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("REPLACEMENT_CHAR", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>65533</MemberValue>
      <Docs>
        <summary>Unicode value used when translating into Unicode encoding form and there
            is no existing character.</summary>
        <remarks>
          <para>Unicode value used when translating into Unicode encoding form and there
            is no existing character.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#REPLACEMENT_CHAR" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.REPLACEMENT_CHAR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupplementaryMinValue">
      <MemberSignature Language="C#" Value="public const int SupplementaryMinValue = 65536;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 SupplementaryMinValue = (65536)" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Lang.UCharacter.SupplementaryMinValue" />
      <MemberSignature Language="F#" Value="val mutable SupplementaryMinValue : int" Usage="Android.Icu.Lang.UCharacter.SupplementaryMinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SUPPLEMENTARY_MIN_VALUE", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SUPPLEMENTARY_MIN_VALUE", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary>The minimum value for Supplementary code points, constant U+10000.</summary>
        <remarks>
          <para>The minimum value for Supplementary code points, constant U+10000.
            Same as <c>Character#MIN_SUPPLEMENTARY_CODE_POINT</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#SUPPLEMENTARY_MIN_VALUE" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.SUPPLEMENTARY_MIN_VALUE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Lang.UCharacter.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Icu.Lang.UCharacter.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Lang.UCharacter.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Icu.Lang.UCharacter.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitlecaseNoBreakAdjustment">
      <MemberSignature Language="C#" Value="public const Android.Icu.Lang.TitlecaseOptions TitlecaseNoBreakAdjustment = 512;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Icu.Lang.TitlecaseOptions TitlecaseNoBreakAdjustment = (512)" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Lang.UCharacter.TitlecaseNoBreakAdjustment" />
      <MemberSignature Language="F#" Value="val mutable TitlecaseNoBreakAdjustment : Android.Icu.Lang.TitlecaseOptions" Usage="Android.Icu.Lang.UCharacter.TitlecaseNoBreakAdjustment" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TITLECASE_NO_BREAK_ADJUSTMENT", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TITLECASE_NO_BREAK_ADJUSTMENT", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Icu.Lang.TitlecaseOptions enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Icu.Lang.TitlecaseOptions enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Lang.TitlecaseOptions</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary>Do not adjust the titlecasing indexes from BreakIterator::next() indexes;
            titlecase exactly the characters at breaks from the iterator.</summary>
        <remarks>
          <para>Do not adjust the titlecasing indexes from BreakIterator::next() indexes;
            titlecase exactly the characters at breaks from the iterator.
            Option bit for titlecasing APIs that take an options bit set.</para>
          <para>By default, titlecasing will take each break iterator index,
            adjust it by looking for the next cased character, and titlecase that one.
            Other characters are lowercased.</para>
          <para>This follows Unicode 4 &amp;amp; 5 section 3.13 Default Case Operations:</para>
          <para>R3  toTitlecase(X): Find the word boundaries based on Unicode Standard Annex
            #29, "Text Boundaries." Between each pair of word boundaries, find the first
            cased character F. If F exists, map F to default_title(F); then map each
            subsequent character C to default_lower(C).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#TITLECASE_NO_BREAK_ADJUSTMENT" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.TITLECASE_NO_BREAK_ADJUSTMENT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitlecaseNoLowercase">
      <MemberSignature Language="C#" Value="public const Android.Icu.Lang.TitlecaseOptions TitlecaseNoLowercase = 256;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Icu.Lang.TitlecaseOptions TitlecaseNoLowercase = (256)" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Lang.UCharacter.TitlecaseNoLowercase" />
      <MemberSignature Language="F#" Value="val mutable TitlecaseNoLowercase : Android.Icu.Lang.TitlecaseOptions" Usage="Android.Icu.Lang.UCharacter.TitlecaseNoLowercase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TITLECASE_NO_LOWERCASE", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TITLECASE_NO_LOWERCASE", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Icu.Lang.TitlecaseOptions enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Icu.Lang.TitlecaseOptions enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Lang.TitlecaseOptions</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>Do not lowercase non-initial parts of words when titlecasing.</summary>
        <remarks>
          <para>Do not lowercase non-initial parts of words when titlecasing.
            Option bit for titlecasing APIs that take an options bit set.</para>
          <para>By default, titlecasing will titlecase the first cased character
            of a word and lowercase all other characters.
            With this option, the other characters will not be modified.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#TITLECASE_NO_LOWERCASE" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.TITLECASE_NO_LOWERCASE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToChars">
      <MemberSignature Language="C#" Value="public static char[]? ToChars (int cp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char[] ToChars(int32 cp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.ToChars(System.Int32)" />
      <MemberSignature Language="F#" Value="static member ToChars : int -&gt; char[]" Usage="Android.Icu.Lang.UCharacter.ToChars cp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toChars", "(I)[C", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toChars", "(I)[C", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cp" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cp">the code point to convert</param>
        <summary>Same as <c>Character#toChars(int)</c>.</summary>
        <returns>an array containing the char(s) representing the code point</returns>
        <remarks>
          <para>Same as <c>Character#toChars(int)</c>.
            Returns a char array representing the code point.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#toChars(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.toChars(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToChars">
      <MemberSignature Language="C#" Value="public static int ToChars (int cp, char[]? dst, int dstIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToChars(int32 cp, char[] dst, int32 dstIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.ToChars(System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="F#" Value="static member ToChars : int * char[] * int -&gt; int" Usage="Android.Icu.Lang.UCharacter.ToChars (cp, dst, dstIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toChars", "(I[CI)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toChars", "(I[CI)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cp" Type="System.Int32" />
        <Parameter Name="dst" Type="System.Char[]" />
        <Parameter Name="dstIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cp">the code point to convert</param>
        <param name="dst">the destination array into which to put the char(s) representing the code point</param>
        <param name="dstIndex">the index at which to put the first (or only) char</param>
        <summary>Same as <c>Character#toChars(int, char[], int)</c>.</summary>
        <returns>the count of the number of chars written (1 or 2)</returns>
        <remarks>
          <para>Same as <c>Character#toChars(int, char[], int)</c>.
            Writes the chars representing the
            code point into the destination at the given index.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#toChars(int,%20char[],%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.toChars(int, char[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToCodePoint">
      <MemberSignature Language="C#" Value="public static int ToCodePoint (char high, char low);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToCodePoint(char high, char low) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.ToCodePoint(System.Char,System.Char)" />
      <MemberSignature Language="F#" Value="static member ToCodePoint : char * char -&gt; int" Usage="Android.Icu.Lang.UCharacter.ToCodePoint (high, low)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toCodePoint", "(CC)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toCodePoint", "(CC)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="high" Type="System.Char" />
        <Parameter Name="low" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="high">the high (lead) surrogate</param>
        <param name="low">the low (trail) surrogate</param>
        <summary>Same as <c>Character#toCodePoint</c>.</summary>
        <returns>the code point formed by the surrogate pair</returns>
        <remarks>
          <para>Same as <c>Character#toCodePoint</c>.
            Returns the code point represented by the two surrogate code units.
            This does not check the surrogate pair for validity.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#toCodePoint(char,%20char)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.toCodePoint(char, char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToCodePoint">
      <MemberSignature Language="C#" Value="public static int ToCodePoint (int high, int low);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToCodePoint(int32 high, int32 low) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.ToCodePoint(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member ToCodePoint : int * int -&gt; int" Usage="Android.Icu.Lang.UCharacter.ToCodePoint (high, low)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toCodePoint", "(II)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toCodePoint", "(II)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="high" Type="System.Int32" />
        <Parameter Name="low" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="high">the high (lead) surrogate
                   (In ICU 3.0-69 the type of both parameters was <c>char</c>.)</param>
        <param name="low">the low (trail) surrogate</param>
        <summary>Same as <c>Character#toCodePoint</c>,
            except that the ICU version accepts <c>int</c> for code points.</summary>
        <returns>the code point formed by the surrogate pair</returns>
        <remarks>
          <para>Same as <c>Character#toCodePoint</c>,
            except that the ICU version accepts <c>int</c> for code points.
            Returns the code point represented by the two surrogate code units.
            This does not check the surrogate pair for validity.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#toCodePoint(int,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.toCodePoint(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToLowerCase">
      <MemberSignature Language="C#" Value="public static int ToLowerCase (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToLowerCase(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.ToLowerCase(System.Int32)" />
      <MemberSignature Language="F#" Value="static member ToLowerCase : int -&gt; int" Usage="Android.Icu.Lang.UCharacter.ToLowerCase ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toLowerCase", "(I)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toLowerCase", "(I)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point whose lowercase equivalent is to be retrieved</param>
        <summary>The given code point is mapped to its lowercase equivalent; if the code
            point has no lowercase equivalent, the code point itself is returned.</summary>
        <returns>the lowercase equivalent code point</returns>
        <remarks>
          <para>The given code point is mapped to its lowercase equivalent; if the code
            point has no lowercase equivalent, the code point itself is returned.
            Up-to-date Unicode implementation of java.lang.Character.toLowerCase()</para>
          <para>This function only returns the simple, single-code point case mapping.
            Full case mappings should be used whenever possible because they produce
            better results by working on whole strings.
            They take into account the string context and the language and can map
            to a result string with a different length as appropriate.
            Full case mappings are applied by the case mapping functions
            that take String parameters rather than code points (int).
            See also the User Guide chapter on C/POSIX migration:
            https://unicode-org.github.io/icu/userguide/icu/posix#case-mappings</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#toLowerCase(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.toLowerCase(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToLowerCase">
      <MemberSignature Language="C#" Value="public static string? ToLowerCase (string? str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToLowerCase(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.ToLowerCase(System.String)" />
      <MemberSignature Language="F#" Value="static member ToLowerCase : string -&gt; string" Usage="Android.Icu.Lang.UCharacter.ToLowerCase str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toLowerCase", "(Ljava/lang/String;)Ljava/lang/String;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toLowerCase", "(Ljava/lang/String;)Ljava/lang/String;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">source string to be performed on</param>
        <summary>Returns the lowercase version of the argument string.</summary>
        <returns>lowercase version of the argument string</returns>
        <remarks>
          <para>Returns the lowercase version of the argument string.
            Casing is dependent on the default locale and context-sensitive</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#toLowerCase(java.lang.String)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.toLowerCase(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToLowerCase">
      <MemberSignature Language="C#" Value="public static string? ToLowerCase (Android.Icu.Util.ULocale? locale, string? str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToLowerCase(class Android.Icu.Util.ULocale locale, string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.ToLowerCase(Android.Icu.Util.ULocale,System.String)" />
      <MemberSignature Language="F#" Value="static member ToLowerCase : Android.Icu.Util.ULocale * string -&gt; string" Usage="Android.Icu.Lang.UCharacter.ToLowerCase (locale, str)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toLowerCase", "(Landroid/icu/util/ULocale;Ljava/lang/String;)Ljava/lang/String;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toLowerCase", "(Landroid/icu/util/ULocale;Ljava/lang/String;)Ljava/lang/String;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locale" Type="Android.Icu.Util.ULocale" />
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="locale">which string is to be converted in</param>
        <param name="str">source string to be performed on</param>
        <summary>Returns the lowercase version of the argument string.</summary>
        <returns>lowercase version of the argument string</returns>
        <remarks>
          <para>Returns the lowercase version of the argument string.
            Casing is dependent on the argument locale and context-sensitive</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#toLowerCase(android.icu.util.ULocale,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.toLowerCase(android.icu.util.ULocale, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToLowerCase">
      <MemberSignature Language="C#" Value="public static string? ToLowerCase (Java.Util.Locale? locale, string? str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToLowerCase(class Java.Util.Locale locale, string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.ToLowerCase(Java.Util.Locale,System.String)" />
      <MemberSignature Language="F#" Value="static member ToLowerCase : Java.Util.Locale * string -&gt; string" Usage="Android.Icu.Lang.UCharacter.ToLowerCase (locale, str)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toLowerCase", "(Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toLowerCase", "(Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locale" Type="Java.Util.Locale" />
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="locale">which string is to be converted in</param>
        <param name="str">source string to be performed on</param>
        <summary>Returns the lowercase version of the argument string.</summary>
        <returns>lowercase version of the argument string</returns>
        <remarks>
          <para>Returns the lowercase version of the argument string.
            Casing is dependent on the argument locale and context-sensitive</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#toLowerCase(java.util.Locale,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.toLowerCase(java.util.Locale, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string? ToString (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.ToString(System.Int32)" />
      <MemberSignature Language="F#" Value="static member ToString : int -&gt; string" Usage="Android.Icu.Lang.UCharacter.ToString ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toString", "(I)Ljava/lang/String;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toString", "(I)Ljava/lang/String;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point</param>
        <summary>Converts argument code point and returns a String object representing
            the code point's value in UTF-16 format.</summary>
        <returns>string representation of the code point, null if code point is not
                    defined in unicode</returns>
        <remarks>
          <para>Converts argument code point and returns a String object representing
            the code point's value in UTF-16 format.
            The result is a string whose length is 1 for BMP code points, 2 for supplementary ones.</para>
          <para>Up-to-date Unicode implementation of java.lang.Character.toString().</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#toString(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.toString(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTitleCase">
      <MemberSignature Language="C#" Value="public static int ToTitleCase (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToTitleCase(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.ToTitleCase(System.Int32)" />
      <MemberSignature Language="F#" Value="static member ToTitleCase : int -&gt; int" Usage="Android.Icu.Lang.UCharacter.ToTitleCase ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toTitleCase", "(I)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toTitleCase", "(I)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point  whose title case is to be retrieved</param>
        <summary>Converts the code point argument to titlecase.</summary>
        <returns>titlecase code point</returns>
        <remarks>
          <para>Converts the code point argument to titlecase.
            If no titlecase is available, the uppercase is returned. If no uppercase
            is available, the code point itself is returned.
            Up-to-date Unicode implementation of java.lang.Character.toTitleCase()</para>
          <para>This function only returns the simple, single-code point case mapping.
            Full case mappings should be used whenever possible because they produce
            better results by working on whole strings.
            They take into account the string context and the language and can map
            to a result string with a different length as appropriate.
            Full case mappings are applied by the case mapping functions
            that take String parameters rather than code points (int).
            See also the User Guide chapter on C/POSIX migration:
            https://unicode-org.github.io/icu/userguide/icu/posix#case-mappings</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#toTitleCase(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.toTitleCase(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTitleCase">
      <MemberSignature Language="C#" Value="public static string? ToTitleCase (string? str, Android.Icu.Text.BreakIterator? breakiter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToTitleCase(string str, class Android.Icu.Text.BreakIterator breakiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.ToTitleCase(System.String,Android.Icu.Text.BreakIterator)" />
      <MemberSignature Language="F#" Value="static member ToTitleCase : string * Android.Icu.Text.BreakIterator -&gt; string" Usage="Android.Icu.Lang.UCharacter.ToTitleCase (str, breakiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toTitleCase", "(Ljava/lang/String;Landroid/icu/text/BreakIterator;)Ljava/lang/String;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toTitleCase", "(Ljava/lang/String;Landroid/icu/text/BreakIterator;)Ljava/lang/String;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="breakiter" Type="Android.Icu.Text.BreakIterator" />
      </Parameters>
      <Docs>
        <param name="str">source string to be performed on</param>
        <param name="breakiter">break iterator to determine the positions in which
                   the character should be title cased.</param>
        <summary>Returns the titlecase version of the argument string.</summary>
        <returns>titlecase version of the argument string</returns>
        <remarks>
          <para>Returns the titlecase version of the argument string.</para>
          <para>Position for titlecasing is determined by the argument break
            iterator, hence the user can customize his break iterator for
            a specialized titlecasing. In this case only the forward iteration
            needs to be implemented.
            If the break iterator passed in is null, the default Unicode algorithm
            will be used to determine the titlecase positions.</para>
          <para>Only positions returned by the break iterator will be title cased,
            character in between the positions will all be in lower case.</para>
          <para>Casing is dependent on the default locale and context-sensitive</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#toTitleCase(java.lang.String,%20android.icu.text.BreakIterator)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.toTitleCase(java.lang.String, android.icu.text.BreakIterator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTitleCase">
      <MemberSignature Language="C#" Value="public static string? ToTitleCase (Android.Icu.Util.ULocale? locale, string? str, Android.Icu.Text.BreakIterator? titleIter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToTitleCase(class Android.Icu.Util.ULocale locale, string str, class Android.Icu.Text.BreakIterator titleIter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.ToTitleCase(Android.Icu.Util.ULocale,System.String,Android.Icu.Text.BreakIterator)" />
      <MemberSignature Language="F#" Value="static member ToTitleCase : Android.Icu.Util.ULocale * string * Android.Icu.Text.BreakIterator -&gt; string" Usage="Android.Icu.Lang.UCharacter.ToTitleCase (locale, str, titleIter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toTitleCase", "(Landroid/icu/util/ULocale;Ljava/lang/String;Landroid/icu/text/BreakIterator;)Ljava/lang/String;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toTitleCase", "(Landroid/icu/util/ULocale;Ljava/lang/String;Landroid/icu/text/BreakIterator;)Ljava/lang/String;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locale" Type="Android.Icu.Util.ULocale" />
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="titleIter" Type="Android.Icu.Text.BreakIterator" />
      </Parameters>
      <Docs>
        <param name="locale">which string is to be converted in</param>
        <param name="str">source string to be performed on</param>
        <param name="titleIter">break iterator to determine the positions in which
                   the character should be title cased.</param>
        <summary>Returns the titlecase version of the argument string.</summary>
        <returns>titlecase version of the argument string</returns>
        <remarks>
          <para>Returns the titlecase version of the argument string.</para>
          <para>Position for titlecasing is determined by the argument break
            iterator, hence the user can customize his break iterator for
            a specialized titlecasing. In this case only the forward iteration
            needs to be implemented.
            If the break iterator passed in is null, the default Unicode algorithm
            will be used to determine the titlecase positions.</para>
          <para>Only positions returned by the break iterator will be title cased,
            character in between the positions will all be in lower case.</para>
          <para>Casing is dependent on the argument locale and context-sensitive</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#toTitleCase(android.icu.util.ULocale,%20java.lang.String,%20android.icu.text.BreakIterator)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.toTitleCase(android.icu.util.ULocale, java.lang.String, android.icu.text.BreakIterator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTitleCase">
      <MemberSignature Language="C#" Value="public static string? ToTitleCase (Java.Util.Locale? locale, string? str, Android.Icu.Text.BreakIterator? breakiter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToTitleCase(class Java.Util.Locale locale, string str, class Android.Icu.Text.BreakIterator breakiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.ToTitleCase(Java.Util.Locale,System.String,Android.Icu.Text.BreakIterator)" />
      <MemberSignature Language="F#" Value="static member ToTitleCase : Java.Util.Locale * string * Android.Icu.Text.BreakIterator -&gt; string" Usage="Android.Icu.Lang.UCharacter.ToTitleCase (locale, str, breakiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toTitleCase", "(Ljava/util/Locale;Ljava/lang/String;Landroid/icu/text/BreakIterator;)Ljava/lang/String;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toTitleCase", "(Ljava/util/Locale;Ljava/lang/String;Landroid/icu/text/BreakIterator;)Ljava/lang/String;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locale" Type="Java.Util.Locale" />
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="breakiter" Type="Android.Icu.Text.BreakIterator" />
      </Parameters>
      <Docs>
        <param name="locale">which string is to be converted in</param>
        <param name="str">source string to be performed on</param>
        <param name="breakiter">break iterator to determine the positions in which
                   the character should be title cased.</param>
        <summary>Returns the titlecase version of the argument string.</summary>
        <returns>titlecase version of the argument string</returns>
        <remarks>
          <para>Returns the titlecase version of the argument string.</para>
          <para>Position for titlecasing is determined by the argument break
            iterator, hence the user can customize his break iterator for
            a specialized titlecasing. In this case only the forward iteration
            needs to be implemented.
            If the break iterator passed in is null, the default Unicode algorithm
            will be used to determine the titlecase positions.</para>
          <para>Only positions returned by the break iterator will be title cased,
            character in between the positions will all be in lower case.</para>
          <para>Casing is dependent on the argument locale and context-sensitive</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#toTitleCase(java.util.Locale,%20java.lang.String,%20android.icu.text.BreakIterator)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.toTitleCase(java.util.Locale, java.lang.String, android.icu.text.BreakIterator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTitleCase">
      <MemberSignature Language="C#" Value="public static string? ToTitleCase (Android.Icu.Util.ULocale? locale, string? str, Android.Icu.Text.BreakIterator? titleIter, Android.Icu.Lang.TitlecaseOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToTitleCase(class Android.Icu.Util.ULocale locale, string str, class Android.Icu.Text.BreakIterator titleIter, valuetype Android.Icu.Lang.TitlecaseOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.ToTitleCase(Android.Icu.Util.ULocale,System.String,Android.Icu.Text.BreakIterator,Android.Icu.Lang.TitlecaseOptions)" />
      <MemberSignature Language="F#" Value="static member ToTitleCase : Android.Icu.Util.ULocale * string * Android.Icu.Text.BreakIterator * Android.Icu.Lang.TitlecaseOptions -&gt; string" Usage="Android.Icu.Lang.UCharacter.ToTitleCase (locale, str, titleIter, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toTitleCase", "(Landroid/icu/util/ULocale;Ljava/lang/String;Landroid/icu/text/BreakIterator;I)Ljava/lang/String;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toTitleCase", "(Landroid/icu/util/ULocale;Ljava/lang/String;Landroid/icu/text/BreakIterator;I)Ljava/lang/String;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locale" Type="Android.Icu.Util.ULocale" />
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="titleIter" Type="Android.Icu.Text.BreakIterator" />
        <Parameter Name="options" Type="Android.Icu.Lang.TitlecaseOptions">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="locale">which string is to be converted in</param>
        <param name="str">source string to be performed on</param>
        <param name="titleIter">break iterator to determine the positions in which
                   the character should be title cased.</param>
        <param name="options">bit set to modify the titlecasing operation</param>
        <summary>Returns the titlecase version of the argument string.</summary>
        <returns>titlecase version of the argument string</returns>
        <remarks>
          <para>Returns the titlecase version of the argument string.</para>
          <para>Position for titlecasing is determined by the argument break
            iterator, hence the user can customize his break iterator for
            a specialized titlecasing. In this case only the forward iteration
            needs to be implemented.
            If the break iterator passed in is null, the default Unicode algorithm
            will be used to determine the titlecase positions.</para>
          <para>Only positions returned by the break iterator will be title cased,
            character in between the positions will all be in lower case.</para>
          <para>Casing is dependent on the argument locale and context-sensitive</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#toTitleCase(android.icu.util.ULocale,%20java.lang.String,%20android.icu.text.BreakIterator,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.toTitleCase(android.icu.util.ULocale, java.lang.String, android.icu.text.BreakIterator, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTitleCase">
      <MemberSignature Language="C#" Value="public static string? ToTitleCase (Java.Util.Locale? locale, string? str, Android.Icu.Text.BreakIterator? titleIter, Android.Icu.Lang.TitlecaseOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToTitleCase(class Java.Util.Locale locale, string str, class Android.Icu.Text.BreakIterator titleIter, valuetype Android.Icu.Lang.TitlecaseOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.ToTitleCase(Java.Util.Locale,System.String,Android.Icu.Text.BreakIterator,Android.Icu.Lang.TitlecaseOptions)" />
      <MemberSignature Language="F#" Value="static member ToTitleCase : Java.Util.Locale * string * Android.Icu.Text.BreakIterator * Android.Icu.Lang.TitlecaseOptions -&gt; string" Usage="Android.Icu.Lang.UCharacter.ToTitleCase (locale, str, titleIter, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toTitleCase", "(Ljava/util/Locale;Ljava/lang/String;Landroid/icu/text/BreakIterator;I)Ljava/lang/String;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toTitleCase", "(Ljava/util/Locale;Ljava/lang/String;Landroid/icu/text/BreakIterator;I)Ljava/lang/String;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locale" Type="Java.Util.Locale" />
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="titleIter" Type="Android.Icu.Text.BreakIterator" />
        <Parameter Name="options" Type="Android.Icu.Lang.TitlecaseOptions">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="locale">which string is to be converted in</param>
        <param name="str">source string to be performed on</param>
        <param name="titleIter">break iterator to determine the positions in which
                   the character should be title cased.</param>
        <param name="options">bit set to modify the titlecasing operation</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt;</summary>
        <returns>titlecase version of the argument string</returns>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt;</para>
          <para>Returns the titlecase version of the argument string.</para>
          <para>Position for titlecasing is determined by the argument break
            iterator, hence the user can customize his break iterator for
            a specialized titlecasing. In this case only the forward iteration
            needs to be implemented.
            If the break iterator passed in is null, the default Unicode algorithm
            will be used to determine the titlecase positions.</para>
          <para>Only positions returned by the break iterator will be title cased,
            character in between the positions will all be in lower case.</para>
          <para>Casing is dependent on the argument locale and context-sensitive</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#toTitleCase(java.util.Locale,%20java.lang.String,%20android.icu.text.BreakIterator,%20int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.toTitleCase(java.util.Locale, java.lang.String, android.icu.text.BreakIterator, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUpperCase">
      <MemberSignature Language="C#" Value="public static int ToUpperCase (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToUpperCase(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.ToUpperCase(System.Int32)" />
      <MemberSignature Language="F#" Value="static member ToUpperCase : int -&gt; int" Usage="Android.Icu.Lang.UCharacter.ToUpperCase ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toUpperCase", "(I)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toUpperCase", "(I)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">code point whose uppercase is to be retrieved</param>
        <summary>Converts the character argument to uppercase.</summary>
        <returns>uppercase code point</returns>
        <remarks>
          <para>Converts the character argument to uppercase.
            If no uppercase is available, the character itself is returned.
            Up-to-date Unicode implementation of java.lang.Character.toUpperCase()</para>
          <para>This function only returns the simple, single-code point case mapping.
            Full case mappings should be used whenever possible because they produce
            better results by working on whole strings.
            They take into account the string context and the language and can map
            to a result string with a different length as appropriate.
            Full case mappings are applied by the case mapping functions
            that take String parameters rather than code points (int).
            See also the User Guide chapter on C/POSIX migration:
            https://unicode-org.github.io/icu/userguide/icu/posix#case-mappings</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#toUpperCase(int)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.toUpperCase(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUpperCase">
      <MemberSignature Language="C#" Value="public static string? ToUpperCase (string? str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToUpperCase(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.ToUpperCase(System.String)" />
      <MemberSignature Language="F#" Value="static member ToUpperCase : string -&gt; string" Usage="Android.Icu.Lang.UCharacter.ToUpperCase str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toUpperCase", "(Ljava/lang/String;)Ljava/lang/String;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toUpperCase", "(Ljava/lang/String;)Ljava/lang/String;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">source string to be performed on</param>
        <summary>Returns the uppercase version of the argument string.</summary>
        <returns>uppercase version of the argument string</returns>
        <remarks>
          <para>Returns the uppercase version of the argument string.
            Casing is dependent on the default locale and context-sensitive.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#toUpperCase(java.lang.String)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.toUpperCase(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUpperCase">
      <MemberSignature Language="C#" Value="public static string? ToUpperCase (Android.Icu.Util.ULocale? locale, string? str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToUpperCase(class Android.Icu.Util.ULocale locale, string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.ToUpperCase(Android.Icu.Util.ULocale,System.String)" />
      <MemberSignature Language="F#" Value="static member ToUpperCase : Android.Icu.Util.ULocale * string -&gt; string" Usage="Android.Icu.Lang.UCharacter.ToUpperCase (locale, str)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toUpperCase", "(Landroid/icu/util/ULocale;Ljava/lang/String;)Ljava/lang/String;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toUpperCase", "(Landroid/icu/util/ULocale;Ljava/lang/String;)Ljava/lang/String;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locale" Type="Android.Icu.Util.ULocale" />
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="locale">which string is to be converted in</param>
        <param name="str">source string to be performed on</param>
        <summary>Returns the uppercase version of the argument string.</summary>
        <returns>uppercase version of the argument string</returns>
        <remarks>
          <para>Returns the uppercase version of the argument string.
            Casing is dependent on the argument locale and context-sensitive.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#toUpperCase(android.icu.util.ULocale,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.toUpperCase(android.icu.util.ULocale, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUpperCase">
      <MemberSignature Language="C#" Value="public static string? ToUpperCase (Java.Util.Locale? locale, string? str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToUpperCase(class Java.Util.Locale locale, string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Lang.UCharacter.ToUpperCase(Java.Util.Locale,System.String)" />
      <MemberSignature Language="F#" Value="static member ToUpperCase : Java.Util.Locale * string -&gt; string" Usage="Android.Icu.Lang.UCharacter.ToUpperCase (locale, str)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toUpperCase", "(Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toUpperCase", "(Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locale" Type="Java.Util.Locale" />
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="locale">which string is to be converted in</param>
        <param name="str">source string to be performed on</param>
        <summary>Returns the uppercase version of the argument string.</summary>
        <returns>uppercase version of the argument string</returns>
        <remarks>
          <para>Returns the uppercase version of the argument string.
            Casing is dependent on the argument locale and context-sensitive.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#toUpperCase(java.util.Locale,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.toUpperCase(java.util.Locale, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeIterator">
      <MemberSignature Language="C#" Value="public static Android.Icu.Util.IRangeValueIterator? TypeIterator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Icu.Util.IRangeValueIterator TypeIterator" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Lang.UCharacter.TypeIterator" />
      <MemberSignature Language="F#" Value="static member TypeIterator : Android.Icu.Util.IRangeValueIterator" Usage="Android.Icu.Lang.UCharacter.TypeIterator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTypeIterator", "()Landroid/icu/util/RangeValueIterator;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTypeIterator", "()Landroid/icu/util/RangeValueIterator;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Util.IRangeValueIterator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt;</summary>
        <value>an iterator</value>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt;</para>
          <para>Returns an iterator for character types, iterating over codepoints.</para>
          <para>Example of use:&lt;br&gt;</para>
          <code lang="text/java">RangeValueIterator iterator = UCharacter.getTypeIterator();
            RangeValueIterator.Element element = new RangeValueIterator.Element();
            while (iterator.next(element)) {
                System.out.println("Codepoint \\u" +
                                   Integer.toHexString(element.start) +
                                   " to codepoint \\u" +
                                   Integer.toHexString(element.limit - 1) +
                                   " has the character type " +
                                   element.value);
            }
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getTypeIterator()" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getTypeIterator()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnicodeVersion">
      <MemberSignature Language="C#" Value="public static Android.Icu.Util.VersionInfo? UnicodeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Icu.Util.VersionInfo UnicodeVersion" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Lang.UCharacter.UnicodeVersion" />
      <MemberSignature Language="F#" Value="static member UnicodeVersion : Android.Icu.Util.VersionInfo" Usage="Android.Icu.Lang.UCharacter.UnicodeVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getUnicodeVersion", "()Landroid/icu/util/VersionInfo;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getUnicodeVersion", "()Landroid/icu/util/VersionInfo;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Util.VersionInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the version of Unicode data used.</summary>
        <value>the unicode version number used</value>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Returns the version of Unicode data used.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/lang/UCharacter#getUnicodeVersion()" title="Reference documentation">Java documentation for <code>android.icu.lang.UCharacter.getUnicodeVersion()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
