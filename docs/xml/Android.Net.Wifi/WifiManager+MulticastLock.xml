<Type Name="WifiManager+MulticastLock" FullName="Android.Net.Wifi.WifiManager+MulticastLock">
  <TypeSignature Language="C#" Value="public class WifiManager.MulticastLock : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit WifiManager/MulticastLock extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Net.Wifi.WifiManager.MulticastLock" />
  <TypeSignature Language="F#" Value="type WifiManager.MulticastLock = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/net/wifi/WifiManager$MulticastLock", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/net/wifi/WifiManager$MulticastLock", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Allows an application to receive Wifi Multicast packets.</summary>
    <remarks>
      <para>Allows an application to receive Wifi Multicast packets.
            Normally the Wifi stack filters out packets not explicitly
            addressed to this device.  Acquring a MulticastLock will
            cause the stack to receive packets addressed to multicast
            addresses.  Processing these extra packets can cause a noticeable
            battery drain and should be disabled when not needed.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/net/wifi/WifiManager.MulticastLock" title="Reference documentation">Java documentation for <code>android.net.wifi.WifiManager.MulticastLock</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 4" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MulticastLock (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.WifiManager.MulticastLock.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Net.Wifi.WifiManager.MulticastLock : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Net.Wifi.WifiManager.MulticastLock" Usage="new Android.Net.Wifi.WifiManager.MulticastLock (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acquire">
      <MemberSignature Language="C#" Value="public virtual void Acquire ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Acquire() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.WifiManager.MulticastLock.Acquire" />
      <MemberSignature Language="F#" Value="abstract member Acquire : unit -&gt; unit&#xA;override this.Acquire : unit -&gt; unit" Usage="multicastLock.Acquire " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("acquire", "()V", "GetAcquireHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("acquire", "()V", "GetAcquireHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Locks Wifi Multicast on until <c>#release</c> is called.</summary>
        <remarks>
          <para>Locks Wifi Multicast on until <c>#release</c> is called.
            
            If this MulticastLock is reference-counted each call to
            <c>acquire</c> will increment the reference count, and the
            wifi interface will receive multicast packets as long as the
            reference count is above zero.
            
            If this MulticastLock is not reference-counted, the first call to
            <c>acquire</c> will turn on the multicast packets, but subsequent
            calls will be ignored.  Only one call to <c>#release</c> will
            be required, regardless of the number of times that <c>acquire</c>
            is called.
            
            Note that other applications may also lock Wifi Multicast on.
            Only they can relinquish their lock.
            
            Also note that applications cannot leave Multicast locked on.
            When an app exits or crashes, any Multicast locks will be released.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/WifiManager.MulticastLock#acquire()" title="Reference documentation">Java documentation for <code>android.net.wifi.WifiManager.MulticastLock.acquire()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="IsHeld">
      <MemberSignature Language="C#" Value="public virtual bool IsHeld { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHeld" />
      <MemberSignature Language="DocId" Value="P:Android.Net.Wifi.WifiManager.MulticastLock.IsHeld" />
      <MemberSignature Language="F#" Value="member this.IsHeld : bool" Usage="Android.Net.Wifi.WifiManager.MulticastLock.IsHeld" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isHeld", "()Z", "GetIsHeldHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isHeld", "()Z", "GetIsHeldHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks whether this MulticastLock is currently held.</summary>
        <value>true if this MulticastLock is held, false otherwise</value>
        <remarks>
          <para>Checks whether this MulticastLock is currently held.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/WifiManager.MulticastLock#isHeld()" title="Reference documentation">Java documentation for <code>android.net.wifi.WifiManager.MulticastLock.isHeld()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Net.Wifi.WifiManager.MulticastLock.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Net.Wifi.WifiManager.MulticastLock.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public virtual void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Release() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.WifiManager.MulticastLock.Release" />
      <MemberSignature Language="F#" Value="abstract member Release : unit -&gt; unit&#xA;override this.Release : unit -&gt; unit" Usage="multicastLock.Release " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("release", "()V", "GetReleaseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("release", "()V", "GetReleaseHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Unlocks Wifi Multicast, restoring the filter of packets
            not addressed specifically to this device and saving power.</summary>
        <remarks>
          <para>Unlocks Wifi Multicast, restoring the filter of packets
            not addressed specifically to this device and saving power.
            
            If this MulticastLock is reference-counted, each call to
            <c>release</c> will decrement the reference count, and the
            multicast packets will only stop being received when the reference
            count reaches zero.  If the reference count goes below zero (that
            is, if <c>release</c> is called a greater number of times than
            <c>#acquire</c>), an exception is thrown.
            
            If this MulticastLock is not reference-counted, the first call to
            <c>release</c> (after the radio was multicast locked using
            <c>#acquire</c>) will unlock the multicast, and subsequent calls
            will be ignored.
            
            Note that if any other Wifi Multicast Locks are still outstanding
            this <c>release</c> call will not have an immediate effect.  Only
            when all applications have released all their Multicast Locks will
            the Multicast filter be turned back on.
            
            Also note that when an app exits or crashes all of its Multicast
            Locks will be automatically released.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/WifiManager.MulticastLock#release()" title="Reference documentation">Java documentation for <code>android.net.wifi.WifiManager.MulticastLock.release()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="SetReferenceCounted">
      <MemberSignature Language="C#" Value="public virtual void SetReferenceCounted (bool refCounted);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetReferenceCounted(bool refCounted) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.WifiManager.MulticastLock.SetReferenceCounted(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetReferenceCounted : bool -&gt; unit&#xA;override this.SetReferenceCounted : bool -&gt; unit" Usage="multicastLock.SetReferenceCounted refCounted" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setReferenceCounted", "(Z)V", "GetSetReferenceCounted_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setReferenceCounted", "(Z)V", "GetSetReferenceCounted_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="refCounted" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="refCounted">true if this MulticastLock should keep a reference
            count</param>
        <summary>Controls whether this is a reference-counted or non-reference-
            counted MulticastLock.</summary>
        <remarks>
          <para>Controls whether this is a reference-counted or non-reference-
            counted MulticastLock.
            
            Reference-counted MulticastLocks keep track of the number of calls
            to <c>#acquire</c> and <c>#release</c>, and only stop the
            reception of multicast packets when every call to <c>#acquire</c>
            has been balanced with a call to <c>#release</c>.  Non-reference-
            counted MulticastLocks allow the reception of multicast packets
            whenever <c>#acquire</c> is called and stop accepting multicast
            packets whenever <c>#release</c> is called.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/WifiManager.MulticastLock#setReferenceCounted(boolean)" title="Reference documentation">Java documentation for <code>android.net.wifi.WifiManager.MulticastLock.setReferenceCounted(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Net.Wifi.WifiManager.MulticastLock.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Net.Wifi.WifiManager.MulticastLock.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Net.Wifi.WifiManager.MulticastLock.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Net.Wifi.WifiManager.MulticastLock.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
