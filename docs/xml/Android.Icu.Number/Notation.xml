<Type Name="Notation" FullName="Android.Icu.Number.Notation">
  <TypeSignature Language="C#" Value="public class Notation : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Notation extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Icu.Number.Notation" />
  <TypeSignature Language="F#" Value="type Notation = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/icu/number/Notation", ApiSince=30, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/icu/number/Notation", ApiSince=30, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A class that defines the notation style to be used when formatting numbers in NumberFormatter.</summary>
    <remarks>
      <para>A class that defines the notation style to be used when formatting numbers in NumberFormatter.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/icu/number/Notation" title="Reference documentation">Java documentation for <code>android.icu.number.Notation</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Notation (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Number.Notation.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Icu.Number.Notation : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Icu.Number.Notation" Usage="new Android.Icu.Number.Notation (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompactLong">
      <MemberSignature Language="C#" Value="public static Android.Icu.Number.CompactNotation? CompactLong ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Icu.Number.CompactNotation CompactLong() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Number.Notation.CompactLong" />
      <MemberSignature Language="F#" Value="static member CompactLong : unit -&gt; Android.Icu.Number.CompactNotation" Usage="Android.Icu.Number.Notation.CompactLong " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compactLong", "()Landroid/icu/number/CompactNotation;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compactLong", "()Landroid/icu/number/CompactNotation;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Number.CompactNotation</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Print the number using long-form compact notation.</summary>
        <returns>A CompactNotation for passing to the NumberFormatter notation() setter.</returns>
        <remarks>
          <para>Print the number using long-form compact notation. For more information on compact notation, see
            <c>#compactShort</c>.</para>
          <para>In long form, the powers of ten are spelled out fully. Example outputs in &lt;em&gt;en-US&lt;/em&gt; when
            printing 8.765E7 through 8.765E0:</para>
          <code lang="text/java">88 million
            8.8 million
            876 thousand
            88 thousand
            8.8 thousand
            876
            88
            8.8
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/number/Notation#compactLong()" title="Reference documentation">Java documentation for <code>android.icu.number.Notation.compactLong()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompactShort">
      <MemberSignature Language="C#" Value="public static Android.Icu.Number.CompactNotation? CompactShort ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Icu.Number.CompactNotation CompactShort() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Number.Notation.CompactShort" />
      <MemberSignature Language="F#" Value="static member CompactShort : unit -&gt; Android.Icu.Number.CompactNotation" Usage="Android.Icu.Number.Notation.CompactShort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compactShort", "()Landroid/icu/number/CompactNotation;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compactShort", "()Landroid/icu/number/CompactNotation;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Number.CompactNotation</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Print the number using short-form compact notation.</summary>
        <returns>A CompactNotation for passing to the NumberFormatter notation() setter.</returns>
        <remarks>
          <para>Print the number using short-form compact notation.</para>
          <para>&lt;em&gt;Compact notation&lt;/em&gt;, defined in Unicode Technical Standard #35 Part 3 Section 2.4.1, prints
            numbers with localized prefixes or suffixes corresponding to different powers of ten. Compact
            notation is similar to engineering notation in how it scales numbers.</para>
          <para>Compact notation is ideal for displaying large numbers (over ~1000) to humans while at the same
            time minimizing screen real estate.</para>
          <para>In short form, the powers of ten are abbreviated. In &lt;em&gt;en-US&lt;/em&gt;, the abbreviations are "K" for
            thousands, "M" for millions, "B" for billions, and "T" for trillions. Example outputs in
            &lt;em&gt;en-US&lt;/em&gt; when printing 8.765E7 through 8.765E0:</para>
          <code lang="text/java">88M
            8.8M
            876K
            88K
            8.8K
            876
            88
            8.8
            </code>
          <para>When compact notation is specified without an explicit rounding strategy, numbers are rounded off
            to the closest integer after scaling the number by the corresponding power of 10, but with a digit
            shown after the decimal separator if there is only one digit before the decimal separator. The
            default compact notation rounding strategy is equivalent to:</para>
          <code lang="text/java">Rounder.integer().withMinDigits(2)
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/number/Notation#compactShort()" title="Reference documentation">Java documentation for <code>android.icu.number.Notation.compactShort()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Engineering">
      <MemberSignature Language="C#" Value="public static Android.Icu.Number.ScientificNotation? Engineering ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Icu.Number.ScientificNotation Engineering() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Number.Notation.Engineering" />
      <MemberSignature Language="F#" Value="static member Engineering : unit -&gt; Android.Icu.Number.ScientificNotation" Usage="Android.Icu.Number.Notation.Engineering " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("engineering", "()Landroid/icu/number/ScientificNotation;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("engineering", "()Landroid/icu/number/ScientificNotation;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Number.ScientificNotation</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Print the number using engineering notation, a variant of scientific notation in which the
            exponent must be divisible by 3.</summary>
        <returns>A ScientificNotation for chaining or passing to the NumberFormatter notation() setter.</returns>
        <remarks>
          <para>Print the number using engineering notation, a variant of scientific notation in which the
            exponent must be divisible by 3.</para>
          <para>Example outputs in &lt;em&gt;en-US&lt;/em&gt; when printing 8.765E4 through 8.765E-3:</para>
          <code lang="text/java">87.65E3
            8.765E3
            876.5E0
            87.65E0
            8.765E0
            876.5E-3
            87.65E-3
            8.765E-3
            0E0
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/number/Notation#engineering()" title="Reference documentation">Java documentation for <code>android.icu.number.Notation.engineering()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Number.Notation.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Icu.Number.Notation.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scientific">
      <MemberSignature Language="C#" Value="public static Android.Icu.Number.ScientificNotation? Scientific ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Icu.Number.ScientificNotation Scientific() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Number.Notation.Scientific" />
      <MemberSignature Language="F#" Value="static member Scientific : unit -&gt; Android.Icu.Number.ScientificNotation" Usage="Android.Icu.Number.Notation.Scientific " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("scientific", "()Landroid/icu/number/ScientificNotation;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("scientific", "()Landroid/icu/number/ScientificNotation;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Number.ScientificNotation</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Print the number using scientific notation (also known as scientific form, standard index form, or
            standard form in the UK).</summary>
        <returns>A ScientificNotation for chaining or passing to the NumberFormatter notation() setter.</returns>
        <remarks>
          <para>Print the number using scientific notation (also known as scientific form, standard index form, or
            standard form in the UK). The format for scientific notation varies by locale; for example, many
            Western locales display the number in the form "#E0", where the number is displayed with one digit
            before the decimal separator, zero or more digits after the decimal separator, and the
            corresponding power of 10 displayed after the "E".</para>
          <para>Example outputs in &lt;em&gt;en-US&lt;/em&gt; when printing 8.765E4 through 8.765E-3:</para>
          <code lang="text/java">8.765E4
            8.765E3
            8.765E2
            8.765E1
            8.765E0
            8.765E-1
            8.765E-2
            8.765E-3
            0E0
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/number/Notation#scientific()" title="Reference documentation">Java documentation for <code>android.icu.number.Notation.scientific()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Simple">
      <MemberSignature Language="C#" Value="public static Android.Icu.Number.SimpleNotation? Simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Icu.Number.SimpleNotation Simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Number.Notation.Simple" />
      <MemberSignature Language="F#" Value="static member Simple : unit -&gt; Android.Icu.Number.SimpleNotation" Usage="Android.Icu.Number.Notation.Simple " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("simple", "()Landroid/icu/number/SimpleNotation;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("simple", "()Landroid/icu/number/SimpleNotation;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Number.SimpleNotation</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Print the number using simple notation without any scaling by powers of ten.</summary>
        <returns>A SimpleNotation for passing to the NumberFormatter notation() setter.</returns>
        <remarks>
          <para>Print the number using simple notation without any scaling by powers of ten. This is the default
            behavior.</para>
          <para>Since this is the default behavior, this method needs to be called only when it is necessary to
            override a previous setting.</para>
          <para>Example outputs in &lt;em&gt;en-US&lt;/em&gt; when printing 8.765E7 through 8.765E0:</para>
          <code lang="text/java">87,650,000
            8,765,000
            876,500
            87,650
            8,765
            876.5
            87.65
            8.765
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/number/Notation#simple()" title="Reference documentation">Java documentation for <code>android.icu.number.Notation.simple()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Number.Notation.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Icu.Number.Notation.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Number.Notation.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Icu.Number.Notation.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
