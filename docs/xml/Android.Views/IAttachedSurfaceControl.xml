<Type Name="IAttachedSurfaceControl" FullName="Android.Views.IAttachedSurfaceControl">
  <TypeSignature Language="C#" Value="public interface IAttachedSurfaceControl : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IAttachedSurfaceControl implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Views.IAttachedSurfaceControl" />
  <TypeSignature Language="F#" Value="type IAttachedSurfaceControl = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/view/AttachedSurfaceControl", "", "Android.Views.IAttachedSurfaceControlInvoker", ApiSince=31)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/view/AttachedSurfaceControl", "", "Android.Views.IAttachedSurfaceControlInvoker", ApiSince=31)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides an interface to the root-Surface of a View Hierarchy or Window.</summary>
    <remarks>
      <para>Provides an interface to the root-Surface of a View Hierarchy or Window. This
            is used in combination with the <c>android.view.SurfaceControl</c> API to enable
            attaching app created SurfaceControl to the SurfaceControl hierarchy used
            by the app, and enable SurfaceTransactions to be performed in sync with the
            View hierarchy drawing.
            
            This object is obtained from <c>android.view.View#getRootSurfaceControl</c> and
            <c>android.view.Window#getRootSurfaceControl</c>. It must be used from the UI thread of
            the object it was obtained from.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/view/AttachedSurfaceControl" title="Reference documentation">Java documentation for <code>android.view.AttachedSurfaceControl</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddOnBufferTransformHintChangedListener">
      <MemberSignature Language="C#" Value="public virtual void AddOnBufferTransformHintChangedListener (Android.Views.IAttachedSurfaceControl.IOnBufferTransformHintChangedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOnBufferTransformHintChangedListener(class Android.Views.IAttachedSurfaceControl/IOnBufferTransformHintChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.IAttachedSurfaceControl.AddOnBufferTransformHintChangedListener(Android.Views.IAttachedSurfaceControl.IOnBufferTransformHintChangedListener)" />
      <MemberSignature Language="F#" Value="abstract member AddOnBufferTransformHintChangedListener : Android.Views.IAttachedSurfaceControl.IOnBufferTransformHintChangedListener -&gt; unit&#xA;override this.AddOnBufferTransformHintChangedListener : Android.Views.IAttachedSurfaceControl.IOnBufferTransformHintChangedListener -&gt; unit" Usage="iAttachedSurfaceControl.AddOnBufferTransformHintChangedListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addOnBufferTransformHintChangedListener", "(Landroid/view/AttachedSurfaceControl$OnBufferTransformHintChangedListener;)V", "GetAddOnBufferTransformHintChangedListener_Landroid_view_AttachedSurfaceControl_OnBufferTransformHintChangedListener_Handler:Android.Views.IAttachedSurfaceControl, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=32)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addOnBufferTransformHintChangedListener", "(Landroid/view/AttachedSurfaceControl$OnBufferTransformHintChangedListener;)V", "GetAddOnBufferTransformHintChangedListener_Landroid_view_AttachedSurfaceControl_OnBufferTransformHintChangedListener_Handler:Android.Views.IAttachedSurfaceControl, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=32)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android32.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android32.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Views.IAttachedSurfaceControl+IOnBufferTransformHintChangedListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyTransactionOnDraw">
      <MemberSignature Language="C#" Value="public bool ApplyTransactionOnDraw (Android.Views.SurfaceControl.Transaction t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ApplyTransactionOnDraw(class Android.Views.SurfaceControl/Transaction t) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.IAttachedSurfaceControl.ApplyTransactionOnDraw(Android.Views.SurfaceControl.Transaction)" />
      <MemberSignature Language="F#" Value="abstract member ApplyTransactionOnDraw : Android.Views.SurfaceControl.Transaction -&gt; bool" Usage="iAttachedSurfaceControl.ApplyTransactionOnDraw t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("applyTransactionOnDraw", "(Landroid/view/SurfaceControl$Transaction;)Z", "GetApplyTransactionOnDraw_Landroid_view_SurfaceControl_Transaction_Handler:Android.Views.IAttachedSurfaceControlInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("applyTransactionOnDraw", "(Landroid/view/SurfaceControl$Transaction;)Z", "GetApplyTransactionOnDraw_Landroid_view_SurfaceControl_Transaction_Handler:Android.Views.IAttachedSurfaceControlInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="Android.Views.SurfaceControl+Transaction" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>Consume the passed in transaction, and request the View hierarchy to apply it atomically
            with the next draw.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/AttachedSurfaceControl#applyTransactionOnDraw(android.view.Transaction)" title="Reference documentation">Java documentation for <code>android.view.AttachedSurfaceControl.applyTransactionOnDraw(android.view.Transaction)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferTransformHint">
      <MemberSignature Language="C#" Value="public virtual int BufferTransformHint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BufferTransformHint" />
      <MemberSignature Language="DocId" Value="P:Android.Views.IAttachedSurfaceControl.BufferTransformHint" />
      <MemberSignature Language="F#" Value="member this.BufferTransformHint : int" Usage="Android.Views.IAttachedSurfaceControl.BufferTransformHint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android32.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android32.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBufferTransformHint", "()I", "GetGetBufferTransformHintHandler:Android.Views.IAttachedSurfaceControl, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=32)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBufferTransformHint", "()I", "GetGetBufferTransformHintHandler:Android.Views.IAttachedSurfaceControl, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=32)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The transform hint can be used by a buffer producer to pre-rotate the rendering such that the
            final transformation in the system composer is identity.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The transform hint can be used by a buffer producer to pre-rotate the rendering such that the
            final transformation in the system composer is identity. This can be very useful when used in
            conjunction with the h/w composer HAL in situations where it cannot handle rotations or
            handle them with an additional power cost.
            
            The transform hint should be used with ASurfaceControl APIs when submitting buffers.
            Example usage:
            
            1. After a configuration change, before dequeuing a buffer, the buffer producer queries the
               function for the transform hint.
            
            2. The desired buffer width and height is rotated by the transform hint.
            
            3. The producer dequeues a buffer of the new pre-rotated size.
            
            4. The producer renders to the buffer such that the image is already transformed, that is
               applying the transform hint to the rendering.
            
            5. The producer applies the inverse transform hint to the buffer it just rendered.
            
            6. The producer queues the pre-transformed buffer with the buffer transform.
            
            7. The composer combines the buffer transform with the display transform.  If the buffer
               transform happens to cancel out the display transform then no rotation is needed and there
               will be no performance penalties.
            
            Note, when using ANativeWindow APIs in conjunction with a NativeActivity Surface or
            SurfaceView Surface, the buffer producer will already have access to the transform hint and
            no additional work is needed.
            
            If the root surface is not available, the API will return <c>BUFFER_TRANSFORM_IDENTITY</c>.
            The caller should register a listener to listen for any changes.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/AttachedSurfaceControl#getBufferTransformHint()" title="Reference documentation">Java documentation for <code>android.view.AttachedSurfaceControl.getBufferTransformHint()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildReparentTransaction">
      <MemberSignature Language="C#" Value="public Android.Views.SurfaceControl.Transaction? BuildReparentTransaction (Android.Views.SurfaceControl child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.SurfaceControl/Transaction BuildReparentTransaction(class Android.Views.SurfaceControl child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.IAttachedSurfaceControl.BuildReparentTransaction(Android.Views.SurfaceControl)" />
      <MemberSignature Language="F#" Value="abstract member BuildReparentTransaction : Android.Views.SurfaceControl -&gt; Android.Views.SurfaceControl.Transaction" Usage="iAttachedSurfaceControl.BuildReparentTransaction child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("buildReparentTransaction", "(Landroid/view/SurfaceControl;)Landroid/view/SurfaceControl$Transaction;", "GetBuildReparentTransaction_Landroid_view_SurfaceControl_Handler:Android.Views.IAttachedSurfaceControlInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("buildReparentTransaction", "(Landroid/view/SurfaceControl;)Landroid/view/SurfaceControl$Transaction;", "GetBuildReparentTransaction_Landroid_view_SurfaceControl_Handler:Android.Views.IAttachedSurfaceControlInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SurfaceControl+Transaction</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-android-34.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Android.Views.SurfaceControl" />
      </Parameters>
      <Docs>
        <param name="child">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputTransferToken">
      <MemberSignature Language="C#" Value="public virtual Android.Window.InputTransferToken InputTransferToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Window.InputTransferToken InputTransferToken" />
      <MemberSignature Language="DocId" Value="P:Android.Views.IAttachedSurfaceControl.InputTransferToken" />
      <MemberSignature Language="F#" Value="member this.InputTransferToken : Android.Window.InputTransferToken" Usage="Android.Views.IAttachedSurfaceControl.InputTransferToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-35.0;net-android-36.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android35.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android35.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-35.0;net-android-36.0">
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInputTransferToken", "()Landroid/window/InputTransferToken;", "GetGetInputTransferTokenHandler:Android.Views.IAttachedSurfaceControl, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=35)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getInputTransferToken", "()Landroid/window/InputTransferToken;", "GetGetInputTransferTokenHandler:Android.Views.IAttachedSurfaceControl, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=35)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Window.InputTransferToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the token used for associating this <c>AttachedSurfaceControl</c> with an embedded
            <c>SurfaceControlViewHost</c> or <c>SurfaceControl</c></summary>
        <value>The <c>InputTransferToken</c> for the <c>AttachedSurfaceControl</c></value>
        <remarks>
          <para>Gets the token used for associating this <c>AttachedSurfaceControl</c> with an embedded
            <c>SurfaceControlViewHost</c> or <c>SurfaceControl</c></para>
          <para>This token should be passed to
            <c>SurfaceControlViewHost#SurfaceControlViewHost(Context, Display, InputTransferToken)</c>
            or
            <c>WindowManager#registerBatchedSurfaceControlInputReceiver(int, InputTransferToken,
            SurfaceControl, Choreographer, SurfaceControlInputReceiver)</c> or
            <c>WindowManager#registerUnbatchedSurfaceControlInputReceiver(int, InputTransferToken,
            SurfaceControl, Looper, SurfaceControlInputReceiver)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/AttachedSurfaceControl#getInputTransferToken()" title="Reference documentation">Java documentation for <code>android.view.AttachedSurfaceControl.getInputTransferToken()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterOnJankDataListener">
      <MemberSignature Language="C#" Value="public virtual Android.Views.SurfaceControl.OnJankDataListenerRegistration RegisterOnJankDataListener (Java.Util.Concurrent.IExecutor executor, Android.Views.SurfaceControl.IOnJankDataListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.SurfaceControl/OnJankDataListenerRegistration RegisterOnJankDataListener(class Java.Util.Concurrent.IExecutor executor, class Android.Views.SurfaceControl/IOnJankDataListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.IAttachedSurfaceControl.RegisterOnJankDataListener(Java.Util.Concurrent.IExecutor,Android.Views.SurfaceControl.IOnJankDataListener)" />
      <MemberSignature Language="F#" Value="abstract member RegisterOnJankDataListener : Java.Util.Concurrent.IExecutor * Android.Views.SurfaceControl.IOnJankDataListener -&gt; Android.Views.SurfaceControl.OnJankDataListenerRegistration&#xA;override this.RegisterOnJankDataListener : Java.Util.Concurrent.IExecutor * Android.Views.SurfaceControl.IOnJankDataListener -&gt; Android.Views.SurfaceControl.OnJankDataListenerRegistration" Usage="iAttachedSurfaceControl.RegisterOnJankDataListener (executor, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[Android.Runtime.Register("registerOnJankDataListener", "(Ljava/util/concurrent/Executor;Landroid/view/SurfaceControl$OnJankDataListener;)Landroid/view/SurfaceControl$OnJankDataListenerRegistration;", "GetRegisterOnJankDataListener_Ljava_util_concurrent_Executor_Landroid_view_SurfaceControl_OnJankDataListener_Handler:Android.Views.IAttachedSurfaceControl, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=36)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerOnJankDataListener", "(Ljava/util/concurrent/Executor;Landroid/view/SurfaceControl$OnJankDataListener;)Landroid/view/SurfaceControl$OnJankDataListenerRegistration;", "GetRegisterOnJankDataListener_Ljava_util_concurrent_Executor_Landroid_view_SurfaceControl_OnJankDataListener_Handler:Android.Views.IAttachedSurfaceControl, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=36)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android36.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android36.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SurfaceControl+OnJankDataListenerRegistration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" Index="0" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="listener" Type="Android.Views.SurfaceControl+IOnJankDataListener" Index="1" FrameworkAlternate="net-android-36.0" />
      </Parameters>
      <Docs>
        <param name="executor">To be added.</param>
        <param name="listener">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveOnBufferTransformHintChangedListener">
      <MemberSignature Language="C#" Value="public virtual void RemoveOnBufferTransformHintChangedListener (Android.Views.IAttachedSurfaceControl.IOnBufferTransformHintChangedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveOnBufferTransformHintChangedListener(class Android.Views.IAttachedSurfaceControl/IOnBufferTransformHintChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.IAttachedSurfaceControl.RemoveOnBufferTransformHintChangedListener(Android.Views.IAttachedSurfaceControl.IOnBufferTransformHintChangedListener)" />
      <MemberSignature Language="F#" Value="abstract member RemoveOnBufferTransformHintChangedListener : Android.Views.IAttachedSurfaceControl.IOnBufferTransformHintChangedListener -&gt; unit&#xA;override this.RemoveOnBufferTransformHintChangedListener : Android.Views.IAttachedSurfaceControl.IOnBufferTransformHintChangedListener -&gt; unit" Usage="iAttachedSurfaceControl.RemoveOnBufferTransformHintChangedListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeOnBufferTransformHintChangedListener", "(Landroid/view/AttachedSurfaceControl$OnBufferTransformHintChangedListener;)V", "GetRemoveOnBufferTransformHintChangedListener_Landroid_view_AttachedSurfaceControl_OnBufferTransformHintChangedListener_Handler:Android.Views.IAttachedSurfaceControl, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=32)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeOnBufferTransformHintChangedListener", "(Landroid/view/AttachedSurfaceControl$OnBufferTransformHintChangedListener;)V", "GetRemoveOnBufferTransformHintChangedListener_Landroid_view_AttachedSurfaceControl_OnBufferTransformHintChangedListener_Handler:Android.Views.IAttachedSurfaceControl, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=32)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android32.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android32.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Views.IAttachedSurfaceControl+IOnBufferTransformHintChangedListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetChildBoundingInsets">
      <MemberSignature Language="C#" Value="public virtual void SetChildBoundingInsets (Android.Graphics.Rect insets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetChildBoundingInsets(class Android.Graphics.Rect insets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.IAttachedSurfaceControl.SetChildBoundingInsets(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member SetChildBoundingInsets : Android.Graphics.Rect -&gt; unit&#xA;override this.SetChildBoundingInsets : Android.Graphics.Rect -&gt; unit" Usage="iAttachedSurfaceControl.SetChildBoundingInsets insets" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setChildBoundingInsets", "(Landroid/graphics/Rect;)V", "GetSetChildBoundingInsets_Landroid_graphics_Rect_Handler:Android.Views.IAttachedSurfaceControl, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setChildBoundingInsets", "(Landroid/graphics/Rect;)V", "GetSetChildBoundingInsets_Landroid_graphics_Rect_Handler:Android.Views.IAttachedSurfaceControl, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insets" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="insets">The insets in each direction by which to bound the children
                          expressed in window-space.</param>
        <summary>Set a crop region on all children parented to the layer represented by this
            AttachedSurfaceControl.</summary>
        <remarks>
          <para>Set a crop region on all children parented to the layer represented by this
            AttachedSurfaceControl. This includes SurfaceView, and an example usage may
            be to ensure that SurfaceView with <c>android.view.SurfaceView#setZOrderOnTop</c>
            are cropped to a region not including the app bar.</para>
          <para>This cropped is expressed in terms of insets in window-space. Negative insets
            are considered invalid and will produce an exception. Insets of zero will produce
            the same result as if this function had never been called.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/AttachedSurfaceControl#setChildBoundingInsets(android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.view.AttachedSurfaceControl.setChildBoundingInsets(android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTouchableRegion">
      <MemberSignature Language="C#" Value="public virtual void SetTouchableRegion (Android.Graphics.Region? r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTouchableRegion(class Android.Graphics.Region r) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.IAttachedSurfaceControl.SetTouchableRegion(Android.Graphics.Region)" />
      <MemberSignature Language="F#" Value="abstract member SetTouchableRegion : Android.Graphics.Region -&gt; unit&#xA;override this.SetTouchableRegion : Android.Graphics.Region -&gt; unit" Usage="iAttachedSurfaceControl.SetTouchableRegion r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTouchableRegion", "(Landroid/graphics/Region;)V", "GetSetTouchableRegion_Landroid_graphics_Region_Handler:Android.Views.IAttachedSurfaceControl, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTouchableRegion", "(Landroid/graphics/Region;)V", "GetSetTouchableRegion_Landroid_graphics_Region_Handler:Android.Views.IAttachedSurfaceControl, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Graphics.Region" />
      </Parameters>
      <Docs>
        <param name="r">The region to use or null to use the entire Layer bounds</param>
        <summary>Sets the touchable region for this SurfaceControl, expressed in surface local
            coordinates.</summary>
        <remarks>
          <para>Sets the touchable region for this SurfaceControl, expressed in surface local
            coordinates. By default the touchable region is the entire Layer, indicating
            that if the layer is otherwise eligible to receive touch it receives touch
            on the entire surface. Setting the touchable region allows the SurfaceControl
            to receive touch in some regions, while allowing for pass-through in others.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/AttachedSurfaceControl#setTouchableRegion(android.graphics.Region)" title="Reference documentation">Java documentation for <code>android.view.AttachedSurfaceControl.setTouchableRegion(android.graphics.Region)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
