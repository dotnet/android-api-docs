<Type Name="ITransportHandle" FullName="Android.Ranging.Oob.ITransportHandle">
  <TypeSignature Language="C#" Value="public interface ITransportHandle : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ITransportHandle implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Ranging.Oob.ITransportHandle" />
  <TypeSignature Language="F#" Value="type ITransportHandle = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/ranging/oob/TransportHandle", "", "Android.Ranging.Oob.ITransportHandleInvoker", ApiSince=36)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/ranging/oob/TransportHandle", "", "Android.Ranging.Oob.ITransportHandleInvoker", ApiSince=36)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>TransportHandle is used as the Out-Of-Band (OOB) transport mechanism by ranging module.</summary>
    <remarks>
      <para>TransportHandle is used as the Out-Of-Band (OOB) transport mechanism by ranging module.
            In cases where module is used in a non-raw ranging mode, the user shall provide an implementation
            of the TransportHandle, allowing ranging module to do the necessary OOB communication with a peer
            device using the provided transport handle. Some examples of OOB transport between two peer
            devices are:
            &lt;ul&gt;
                &lt;li&gt;BLE GATT connection&lt;/li&gt;
                &lt;li&gt;Wi-Fi MDNS link&lt;/li&gt;
                &lt;li&gt;Internet&lt;/li&gt;
            &lt;/ul&gt;</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/ranging/oob/TransportHandle" title="Reference documentation">Java documentation for <code>android.ranging.oob.TransportHandle</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="RegisterReceiveCallback">
      <MemberSignature Language="C#" Value="public void RegisterReceiveCallback (Java.Util.Concurrent.IExecutor executor, Android.Ranging.Oob.ITransportHandleReceiveCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterReceiveCallback(class Java.Util.Concurrent.IExecutor executor, class Android.Ranging.Oob.ITransportHandleReceiveCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Ranging.Oob.ITransportHandle.RegisterReceiveCallback(Java.Util.Concurrent.IExecutor,Android.Ranging.Oob.ITransportHandleReceiveCallback)" />
      <MemberSignature Language="F#" Value="abstract member RegisterReceiveCallback : Java.Util.Concurrent.IExecutor * Android.Ranging.Oob.ITransportHandleReceiveCallback -&gt; unit" Usage="iTransportHandle.RegisterReceiveCallback (executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerReceiveCallback", "(Ljava/util/concurrent/Executor;Landroid/ranging/oob/TransportHandle$ReceiveCallback;)V", "GetRegisterReceiveCallback_Ljava_util_concurrent_Executor_Landroid_ranging_oob_TransportHandle_ReceiveCallback_Handler:Android.Ranging.Oob.ITransportHandleInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=36)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerReceiveCallback", "(Ljava/util/concurrent/Executor;Landroid/ranging/oob/TransportHandle$ReceiveCallback;)V", "GetRegisterReceiveCallback_Ljava_util_concurrent_Executor_Landroid_ranging_oob_TransportHandle_ReceiveCallback_Handler:Android.Ranging.Oob.ITransportHandleInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=36)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android36.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android36.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.Ranging.Oob.ITransportHandleReceiveCallback" />
      </Parameters>
      <Docs>
        <param name="executor">To be added.</param>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendData">
      <MemberSignature Language="C#" Value="public void SendData (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendData(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Ranging.Oob.ITransportHandle.SendData(System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member SendData : byte[] -&gt; unit" Usage="iTransportHandle.SendData data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendData", "([B)V", "GetSendData_arrayBHandler:Android.Ranging.Oob.ITransportHandleInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=36)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sendData", "([B)V", "GetSendData_arrayBHandler:Android.Ranging.Oob.ITransportHandleInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=36)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android36.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android36.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data">the data to be sent to the peer device. Must not be null.</param>
        <summary>Send data to the peer device via the implemented OOB transport.</summary>
        <remarks>
          <para>Send data to the peer device via the implemented OOB transport.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/ranging/oob/TransportHandle#sendData(byte[])" title="Reference documentation">Java documentation for <code>android.ranging.oob.TransportHandle.sendData(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
