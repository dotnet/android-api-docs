<Type Name="BluetoothLeScanner" FullName="Android.Bluetooth.LE.BluetoothLeScanner">
  <TypeSignature Language="C#" Value="public sealed class BluetoothLeScanner : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BluetoothLeScanner extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Bluetooth.LE.BluetoothLeScanner" />
  <TypeSignature Language="F#" Value="type BluetoothLeScanner = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/bluetooth/le/BluetoothLeScanner", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/bluetooth/le/BluetoothLeScanner", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>This class provides methods to perform scan related operations for Bluetooth LE devices.</summary>
    <remarks>
      <para>This class provides methods to perform scan related operations for Bluetooth LE devices. An
            application can scan for a particular type of Bluetooth LE devices using <c>ScanFilter</c>. It
            can also request different types of callbacks for delivering the result.</para>
      <para>Use <c>BluetoothAdapter#getBluetoothLeScanner()</c> to get an instance of <c>BluetoothLeScanner</c>.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/bluetooth/le/BluetoothLeScanner" title="Reference documentation">Java documentation for <code>android.bluetooth.le.BluetoothLeScanner</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExtraCallbackType">
      <MemberSignature Language="C#" Value="public const string ExtraCallbackType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraCallbackType" />
      <MemberSignature Language="DocId" Value="F:Android.Bluetooth.LE.BluetoothLeScanner.ExtraCallbackType" />
      <MemberSignature Language="F#" Value="val mutable ExtraCallbackType : string" Usage="Android.Bluetooth.LE.BluetoothLeScanner.ExtraCallbackType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_CALLBACK_TYPE", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_CALLBACK_TYPE", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Optional extra indicating the callback type, which will be one of CALLBACK_TYPE_* constants
            in <c>ScanSettings</c>.</summary>
        <remarks>
          <para>Optional extra indicating the callback type, which will be one of CALLBACK_TYPE_* constants
            in <c>ScanSettings</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/bluetooth/le/BluetoothLeScanner#EXTRA_CALLBACK_TYPE" title="Reference documentation">Java documentation for <code>android.bluetooth.le.BluetoothLeScanner.EXTRA_CALLBACK_TYPE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraErrorCode">
      <MemberSignature Language="C#" Value="public const string ExtraErrorCode;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraErrorCode" />
      <MemberSignature Language="DocId" Value="F:Android.Bluetooth.LE.BluetoothLeScanner.ExtraErrorCode" />
      <MemberSignature Language="F#" Value="val mutable ExtraErrorCode : string" Usage="Android.Bluetooth.LE.BluetoothLeScanner.ExtraErrorCode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_ERROR_CODE", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_ERROR_CODE", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Optional extra indicating the error code, if any.</summary>
        <remarks>
          <para>Optional extra indicating the error code, if any. The error code will be one of the
            SCAN_FAILED_* codes in <c>ScanCallback</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/bluetooth/le/BluetoothLeScanner#EXTRA_ERROR_CODE" title="Reference documentation">Java documentation for <code>android.bluetooth.le.BluetoothLeScanner.EXTRA_ERROR_CODE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraListScanResult">
      <MemberSignature Language="C#" Value="public const string ExtraListScanResult;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraListScanResult" />
      <MemberSignature Language="DocId" Value="F:Android.Bluetooth.LE.BluetoothLeScanner.ExtraListScanResult" />
      <MemberSignature Language="F#" Value="val mutable ExtraListScanResult : string" Usage="Android.Bluetooth.LE.BluetoothLeScanner.ExtraListScanResult" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_LIST_SCAN_RESULT", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_LIST_SCAN_RESULT", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Extra containing a list of ScanResults.</summary>
        <remarks>
          <para>Extra containing a list of ScanResults. It can have one or more results if there was no
            error. In case of error, <c>#EXTRA_ERROR_CODE</c> will contain the error code and this extra
            will not be available.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/bluetooth/le/BluetoothLeScanner#EXTRA_LIST_SCAN_RESULT" title="Reference documentation">Java documentation for <code>android.bluetooth.le.BluetoothLeScanner.EXTRA_LIST_SCAN_RESULT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushPendingScanResults">
      <MemberSignature Language="C#" Value="public void FlushPendingScanResults (Android.Bluetooth.LE.ScanCallback? callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FlushPendingScanResults(class Android.Bluetooth.LE.ScanCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Bluetooth.LE.BluetoothLeScanner.FlushPendingScanResults(Android.Bluetooth.LE.ScanCallback)" />
      <MemberSignature Language="F#" Value="member this.FlushPendingScanResults : Android.Bluetooth.LE.ScanCallback -&gt; unit" Usage="bluetoothLeScanner.FlushPendingScanResults callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("flushPendingScanResults", "(Landroid/bluetooth/le/ScanCallback;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("flushPendingScanResults", "(Landroid/bluetooth/le/ScanCallback;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.BLUETOOTH_SCAN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.BLUETOOTH_SCAN")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Bluetooth.LE.ScanCallback" />
      </Parameters>
      <Docs>
        <param name="callback">Callback of the Bluetooth LE Scan, it has to be the same instance as the one
                used to start scan.</param>
        <summary>Flush pending batch scan results stored in Bluetooth controller.</summary>
        <remarks>
          <para>Flush pending batch scan results stored in Bluetooth controller. This will return Bluetooth
            LE scan results batched on bluetooth controller. Returns immediately, batch scan results data
            will be delivered through the <c>callback</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/bluetooth/le/BluetoothLeScanner#flushPendingScanResults(android.bluetooth.le.ScanCallback)" title="Reference documentation">Java documentation for <code>android.bluetooth.le.BluetoothLeScanner.flushPendingScanResults(android.bluetooth.le.ScanCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Bluetooth.LE.BluetoothLeScanner.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Bluetooth.LE.BluetoothLeScanner.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartScan">
      <MemberSignature Language="C#" Value="public void StartScan (Android.Bluetooth.LE.ScanCallback? callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartScan(class Android.Bluetooth.LE.ScanCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Bluetooth.LE.BluetoothLeScanner.StartScan(Android.Bluetooth.LE.ScanCallback)" />
      <MemberSignature Language="F#" Value="member this.StartScan : Android.Bluetooth.LE.ScanCallback -&gt; unit" Usage="bluetoothLeScanner.StartScan callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startScan", "(Landroid/bluetooth/le/ScanCallback;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startScan", "(Landroid/bluetooth/le/ScanCallback;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.BLUETOOTH_SCAN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.BLUETOOTH_SCAN")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Bluetooth.LE.ScanCallback" />
      </Parameters>
      <Docs>
        <param name="callback">Callback used to deliver scan results.</param>
        <summary>Start Bluetooth LE scan with default parameters and no filters.</summary>
        <remarks>
          <para>Start Bluetooth LE scan with default parameters and no filters. The scan results will be
            delivered through <c>callback</c>. For unfiltered scans, scanning is stopped on screen off
            to save power. Scanning is resumed when screen is turned on again. To avoid this, use <c>#startScan(List, ScanSettings, ScanCallback)</c> with desired <c>ScanFilter</c>.</para>
          <para>An app must have <c>android.Manifest.permission#ACCESS_COARSE_LOCATION
            ACCESS_COARSE_LOCATION</c> permission in order to get results. An App targeting Android Q or
            later must have <c>android.Manifest.permission#ACCESS_FINE_LOCATION ACCESS_FINE_LOCATION</c>
            permission in order to get results.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/bluetooth/le/BluetoothLeScanner#startScan(android.bluetooth.le.ScanCallback)" title="Reference documentation">Java documentation for <code>android.bluetooth.le.BluetoothLeScanner.startScan(android.bluetooth.le.ScanCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">If <c>callback</c> is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="StartScan">
      <MemberSignature Language="C#" Value="public int StartScan (System.Collections.Generic.IList&lt;Android.Bluetooth.LE.ScanFilter&gt;? filters, Android.Bluetooth.LE.ScanSettings? settings, Android.App.PendingIntent callbackIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 StartScan(class System.Collections.Generic.IList`1&lt;class Android.Bluetooth.LE.ScanFilter&gt; filters, class Android.Bluetooth.LE.ScanSettings settings, class Android.App.PendingIntent callbackIntent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Bluetooth.LE.BluetoothLeScanner.StartScan(System.Collections.Generic.IList{Android.Bluetooth.LE.ScanFilter},Android.Bluetooth.LE.ScanSettings,Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="member this.StartScan : System.Collections.Generic.IList&lt;Android.Bluetooth.LE.ScanFilter&gt; * Android.Bluetooth.LE.ScanSettings * Android.App.PendingIntent -&gt; int" Usage="bluetoothLeScanner.StartScan (filters, settings, callbackIntent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startScan", "(Ljava/util/List;Landroid/bluetooth/le/ScanSettings;Landroid/app/PendingIntent;)I", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startScan", "(Ljava/util/List;Landroid/bluetooth/le/ScanSettings;Landroid/app/PendingIntent;)I", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.BLUETOOTH_SCAN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.BLUETOOTH_SCAN")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filters" Type="System.Collections.Generic.IList&lt;Android.Bluetooth.LE.ScanFilter&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="settings" Type="Android.Bluetooth.LE.ScanSettings">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="callbackIntent" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="filters">Optional list of ScanFilters for finding exact BLE devices.</param>
        <param name="settings">Optional settings for the scan.</param>
        <param name="callbackIntent">The PendingIntent to deliver the result to.</param>
        <summary>Start Bluetooth LE scan using a <c>PendingIntent</c>.</summary>
        <returns>Returns 0 for success or an error code from <c>ScanCallback</c> if the scan request
                could not be sent.</returns>
        <remarks>
          <para>Start Bluetooth LE scan using a <c>PendingIntent</c>. The scan results will be delivered via
            the PendingIntent. Use this method of scanning if your process is not always running and it
            should be started when scan results are available.</para>
          <para>An app must have <c>android.Manifest.permission#ACCESS_COARSE_LOCATION
            ACCESS_COARSE_LOCATION</c> permission in order to get results. An App targeting Android Q or
            later must have <c>android.Manifest.permission#ACCESS_FINE_LOCATION ACCESS_FINE_LOCATION</c>
            permission in order to get results.</para>
          <para>When the PendingIntent is delivered, the Intent passed to the receiver or activity will
            contain one or more of the extras <c>#EXTRA_CALLBACK_TYPE</c>, <c>#EXTRA_ERROR_CODE</c> and
            <c>#EXTRA_LIST_SCAN_RESULT</c> to indicate the result of the scan.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/bluetooth/le/BluetoothLeScanner#startScan(java.util.List%3Candroid.bluetooth.le.ScanFilter%3E,%20android.bluetooth.le.ScanSettings,%20android.app.PendingIntent)" title="Reference documentation">Java documentation for <code>android.bluetooth.le.BluetoothLeScanner.startScan(java.util.List&lt;android.bluetooth.le.ScanFilter&gt;, android.bluetooth.le.ScanSettings, android.app.PendingIntent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartScan">
      <MemberSignature Language="C#" Value="public void StartScan (System.Collections.Generic.IList&lt;Android.Bluetooth.LE.ScanFilter&gt;? filters, Android.Bluetooth.LE.ScanSettings? settings, Android.Bluetooth.LE.ScanCallback? callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartScan(class System.Collections.Generic.IList`1&lt;class Android.Bluetooth.LE.ScanFilter&gt; filters, class Android.Bluetooth.LE.ScanSettings settings, class Android.Bluetooth.LE.ScanCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Bluetooth.LE.BluetoothLeScanner.StartScan(System.Collections.Generic.IList{Android.Bluetooth.LE.ScanFilter},Android.Bluetooth.LE.ScanSettings,Android.Bluetooth.LE.ScanCallback)" />
      <MemberSignature Language="F#" Value="member this.StartScan : System.Collections.Generic.IList&lt;Android.Bluetooth.LE.ScanFilter&gt; * Android.Bluetooth.LE.ScanSettings * Android.Bluetooth.LE.ScanCallback -&gt; unit" Usage="bluetoothLeScanner.StartScan (filters, settings, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startScan", "(Ljava/util/List;Landroid/bluetooth/le/ScanSettings;Landroid/bluetooth/le/ScanCallback;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startScan", "(Ljava/util/List;Landroid/bluetooth/le/ScanSettings;Landroid/bluetooth/le/ScanCallback;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.BLUETOOTH_SCAN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.BLUETOOTH_SCAN")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filters" Type="System.Collections.Generic.IList&lt;Android.Bluetooth.LE.ScanFilter&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="settings" Type="Android.Bluetooth.LE.ScanSettings" />
        <Parameter Name="callback" Type="Android.Bluetooth.LE.ScanCallback" />
      </Parameters>
      <Docs>
        <param name="filters">
          <c>ScanFilter</c>s for finding exact BLE devices.</param>
        <param name="settings">Settings for the scan.</param>
        <param name="callback">Callback used to deliver scan results.</param>
        <summary>Start Bluetooth LE scan.</summary>
        <remarks>
          <para>Start Bluetooth LE scan. The scan results will be delivered through <c>callback</c>. For
            unfiltered scans, scanning is stopped on screen off to save power. Scanning is resumed when
            screen is turned on again. To avoid this, do filtered scanning by using proper <c>ScanFilter</c>.</para>
          <para>An app must have <c>android.Manifest.permission#ACCESS_COARSE_LOCATION
            ACCESS_COARSE_LOCATION</c> permission in order to get results. An App targeting Android Q or
            later must have <c>android.Manifest.permission#ACCESS_FINE_LOCATION ACCESS_FINE_LOCATION</c>
            permission in order to get results.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/bluetooth/le/BluetoothLeScanner#startScan(java.util.List%3Candroid.bluetooth.le.ScanFilter%3E,%20android.bluetooth.le.ScanSettings,%20android.bluetooth.le.ScanCallback)" title="Reference documentation">Java documentation for <code>android.bluetooth.le.BluetoothLeScanner.startScan(java.util.List&lt;android.bluetooth.le.ScanFilter&gt;, android.bluetooth.le.ScanSettings, android.bluetooth.le.ScanCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopScan">
      <MemberSignature Language="C#" Value="public void StopScan (Android.App.PendingIntent? callbackIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopScan(class Android.App.PendingIntent callbackIntent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Bluetooth.LE.BluetoothLeScanner.StopScan(Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="member this.StopScan : Android.App.PendingIntent -&gt; unit" Usage="bluetoothLeScanner.StopScan callbackIntent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stopScan", "(Landroid/app/PendingIntent;)V", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stopScan", "(Landroid/app/PendingIntent;)V", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.BLUETOOTH_SCAN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.BLUETOOTH_SCAN")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbackIntent" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="callbackIntent">The PendingIntent that was used to start the scan.</param>
        <summary>Stops an ongoing Bluetooth LE scan started using a PendingIntent.</summary>
        <remarks>
          <para>Stops an ongoing Bluetooth LE scan started using a PendingIntent. When creating the
            PendingIntent parameter, please do not use the FLAG_CANCEL_CURRENT flag. Otherwise, the stop
            scan may have no effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/bluetooth/le/BluetoothLeScanner#stopScan(android.app.PendingIntent)" title="Reference documentation">Java documentation for <code>android.bluetooth.le.BluetoothLeScanner.stopScan(android.app.PendingIntent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopScan">
      <MemberSignature Language="C#" Value="public void StopScan (Android.Bluetooth.LE.ScanCallback? callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopScan(class Android.Bluetooth.LE.ScanCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Bluetooth.LE.BluetoothLeScanner.StopScan(Android.Bluetooth.LE.ScanCallback)" />
      <MemberSignature Language="F#" Value="member this.StopScan : Android.Bluetooth.LE.ScanCallback -&gt; unit" Usage="bluetoothLeScanner.StopScan callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stopScan", "(Landroid/bluetooth/le/ScanCallback;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stopScan", "(Landroid/bluetooth/le/ScanCallback;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.BLUETOOTH_SCAN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.BLUETOOTH_SCAN")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Bluetooth.LE.ScanCallback" />
      </Parameters>
      <Docs>
        <param name="callback">callback</param>
        <summary>Stops an ongoing Bluetooth LE scan.</summary>
        <remarks>
          <para>Stops an ongoing Bluetooth LE scan.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/bluetooth/le/BluetoothLeScanner#stopScan(android.bluetooth.le.ScanCallback)" title="Reference documentation">Java documentation for <code>android.bluetooth.le.BluetoothLeScanner.stopScan(android.bluetooth.le.ScanCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Bluetooth.LE.BluetoothLeScanner.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Bluetooth.LE.BluetoothLeScanner.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Bluetooth.LE.BluetoothLeScanner.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Bluetooth.LE.BluetoothLeScanner.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
