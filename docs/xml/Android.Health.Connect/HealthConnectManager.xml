<Type Name="HealthConnectManager" FullName="Android.Health.Connect.HealthConnectManager">
  <TypeSignature Language="C#" Value="public class HealthConnectManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HealthConnectManager extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Health.Connect.HealthConnectManager" />
  <TypeSignature Language="F#" Value="type HealthConnectManager = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/health/connect/HealthConnectManager", ApiSince=34, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/health/connect/HealthConnectManager", ApiSince=34, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This class provides APIs to interact with the centralized HealthConnect storage maintained by the
            system.</summary>
    <remarks>
      <para>This class provides APIs to interact with the centralized HealthConnect storage maintained by the
            system.</para>
      <para>HealthConnect is an offline, on-device storage that unifies data from multiple devices and
            apps into an ecosystem featuring.
            
            &lt;ul&gt;
              &lt;li&gt;APIs to insert data of various types into the system.
            &lt;/ul&gt;</para>
      <para>The basic unit of data in HealthConnect is represented as a <c>Record</c> object, which is
            the base class for all the other data types such as <c>android.health.connect.datatypes.StepsRecord</c>.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/health/connect/HealthConnectManager" title="Reference documentation">Java documentation for <code>android.health.connect.HealthConnectManager</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HealthConnectManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Health.Connect.HealthConnectManager.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Health.Connect.HealthConnectManager : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Health.Connect.HealthConnectManager" Usage="new Android.Health.Connect.HealthConnectManager (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionManageHealthPermissions">
      <MemberSignature Language="C#" Value="public const string ActionManageHealthPermissions;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionManageHealthPermissions" />
      <MemberSignature Language="DocId" Value="F:Android.Health.Connect.HealthConnectManager.ActionManageHealthPermissions" />
      <MemberSignature Language="F#" Value="val mutable ActionManageHealthPermissions : string" Usage="Android.Health.Connect.HealthConnectManager.ActionManageHealthPermissions" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_MANAGE_HEALTH_PERMISSIONS", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_MANAGE_HEALTH_PERMISSIONS", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity action: Launch UI to manage (e.</summary>
        <remarks>
          <para>Activity action: Launch UI to manage (e.g. grant/revoke) health permissions.</para>
          <para>Shows a list of apps which request at least one permission of the Health permission group.</para>
          <para>Input: <c>android.content.Intent#EXTRA_PACKAGE_NAME</c> string extra with the name of the
            app requesting the action. Optional: Adding package name extras launches a UI to manager
            (e.g. grant/revoke) for this app.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/health/connect/HealthConnectManager#ACTION_MANAGE_HEALTH_PERMISSIONS" title="Reference documentation">Java documentation for <code>android.health.connect.HealthConnectManager.ACTION_MANAGE_HEALTH_PERMISSIONS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionRequestExerciseRoute">
      <MemberSignature Language="C#" Value="public const string ActionRequestExerciseRoute;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionRequestExerciseRoute" />
      <MemberSignature Language="DocId" Value="F:Android.Health.Connect.HealthConnectManager.ActionRequestExerciseRoute" />
      <MemberSignature Language="F#" Value="val mutable ActionRequestExerciseRoute : string" Usage="Android.Health.Connect.HealthConnectManager.ActionRequestExerciseRoute" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_REQUEST_EXERCISE_ROUTE", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_REQUEST_EXERCISE_ROUTE", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity action: Launch UI to share the route associated with an exercise session.</summary>
        <remarks>
          <para>Activity action: Launch UI to share the route associated with an exercise session.</para>
          <para>Input: caller must provide `String` extra EXTRA_SESSION_ID</para>
          <para>Result will be delivered via [Activity.onActivityResult] with `ExerciseRoute`
            EXTRA_EXERCISE_ROUTE.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/health/connect/HealthConnectManager#ACTION_REQUEST_EXERCISE_ROUTE" title="Reference documentation">Java documentation for <code>android.health.connect.HealthConnectManager.ACTION_REQUEST_EXERCISE_ROUTE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Aggregate">
      <MemberSignature Language="C#" Value="public virtual void Aggregate (Android.Health.Connect.AggregateRecordsRequest request, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Aggregate(class Android.Health.Connect.AggregateRecordsRequest request, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Health.Connect.HealthConnectManager.Aggregate(Android.Health.Connect.AggregateRecordsRequest,Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="abstract member Aggregate : Android.Health.Connect.AggregateRecordsRequest * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit&#xA;override this.Aggregate : Android.Health.Connect.AggregateRecordsRequest * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="healthConnectManager.Aggregate (request, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("aggregate", "(Landroid/health/connect/AggregateRecordsRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetAggregate_Landroid_health_connect_AggregateRecordsRequest_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("aggregate", "(Landroid/health/connect/AggregateRecordsRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetAggregate_Landroid_health_connect_AggregateRecordsRequest_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.Health.Connect.AggregateRecordsRequest" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">Result type of the aggregation.
                &lt;p&gt;Note:
                &lt;p&gt;This type is embedded in the <c>AggregationType</c> as <c>AggregationType</c> are
                typed in nature.
                &lt;p&gt;Only <c>AggregationType</c>s that are of same type T can be queried together</param>
        <param name="request">request for different aggregation.</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive result of performing this operation.</param>
        <summary>Get aggregations corresponding to <c>request</c>.</summary>
        <remarks>
          <para>Get aggregations corresponding to <c>request</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/health/connect/HealthConnectManager#aggregate(android.health.connect.AggregateRecordsRequest%3CT%3E,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Candroid.health.connect.AggregateRecordsResponse%3CT%3E,%20android.health.connect.HealthConnectException%3E)" title="Reference documentation">Java documentation for <code>android.health.connect.HealthConnectManager.aggregate(android.health.connect.AggregateRecordsRequest&lt;T&gt;, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;android.health.connect.AggregateRecordsResponse&lt;T&gt;, android.health.connect.HealthConnectException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AggregateGroupByDuration">
      <MemberSignature Language="C#" Value="public virtual void AggregateGroupByDuration (Android.Health.Connect.AggregateRecordsRequest request, Java.Time.Duration duration, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AggregateGroupByDuration(class Android.Health.Connect.AggregateRecordsRequest request, class Java.Time.Duration duration, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Health.Connect.HealthConnectManager.AggregateGroupByDuration(Android.Health.Connect.AggregateRecordsRequest,Java.Time.Duration,Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="abstract member AggregateGroupByDuration : Android.Health.Connect.AggregateRecordsRequest * Java.Time.Duration * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit&#xA;override this.AggregateGroupByDuration : Android.Health.Connect.AggregateRecordsRequest * Java.Time.Duration * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="healthConnectManager.AggregateGroupByDuration (request, duration, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("aggregateGroupByDuration", "(Landroid/health/connect/AggregateRecordsRequest;Ljava/time/Duration;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetAggregateGroupByDuration_Landroid_health_connect_AggregateRecordsRequest_Ljava_time_Duration_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("aggregateGroupByDuration", "(Landroid/health/connect/AggregateRecordsRequest;Ljava/time/Duration;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetAggregateGroupByDuration_Landroid_health_connect_AggregateRecordsRequest_Ljava_time_Duration_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.Health.Connect.AggregateRecordsRequest" />
        <Parameter Name="duration" Type="Java.Time.Duration" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">Result type of the aggregation.
                &lt;p&gt;Note:
                &lt;p&gt;This type is embedded in the <c>AggregationType</c> as <c>AggregationType</c> are
                typed in nature.
                &lt;p&gt;Only <c>AggregationType</c>s that are of same type T can be queried together</param>
        <param name="request">request for different aggregation.</param>
        <param name="duration">Duration on which to group by results</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive result of performing this operation.</param>
        <summary>Get aggregations corresponding to <c>request</c>.</summary>
        <remarks>
          <para>Get aggregations corresponding to <c>request</c>. Use this API if results are to be grouped
            by concrete intervals of time, for example 5 Hrs, 10 Hrs etc.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/health/connect/HealthConnectManager#aggregateGroupByDuration(android.health.connect.AggregateRecordsRequest%3CT%3E,%20java.time.Duration,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Cjava.util.List%3Candroid.health.connect.AggregateRecordsGroupedByDurationResponse%3CT%3E%3E,%20android.health.connect.HealthConnectException%3E)" title="Reference documentation">Java documentation for <code>android.health.connect.HealthConnectManager.aggregateGroupByDuration(android.health.connect.AggregateRecordsRequest&lt;T&gt;, java.time.Duration, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;java.util.List&lt;android.health.connect.AggregateRecordsGroupedByDurationResponse&lt;T&gt;&gt;, android.health.connect.HealthConnectException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AggregateGroupByPeriod">
      <MemberSignature Language="C#" Value="public virtual void AggregateGroupByPeriod (Android.Health.Connect.AggregateRecordsRequest request, Java.Time.Period period, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AggregateGroupByPeriod(class Android.Health.Connect.AggregateRecordsRequest request, class Java.Time.Period period, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Health.Connect.HealthConnectManager.AggregateGroupByPeriod(Android.Health.Connect.AggregateRecordsRequest,Java.Time.Period,Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="abstract member AggregateGroupByPeriod : Android.Health.Connect.AggregateRecordsRequest * Java.Time.Period * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit&#xA;override this.AggregateGroupByPeriod : Android.Health.Connect.AggregateRecordsRequest * Java.Time.Period * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="healthConnectManager.AggregateGroupByPeriod (request, period, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("aggregateGroupByPeriod", "(Landroid/health/connect/AggregateRecordsRequest;Ljava/time/Period;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetAggregateGroupByPeriod_Landroid_health_connect_AggregateRecordsRequest_Ljava_time_Period_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("aggregateGroupByPeriod", "(Landroid/health/connect/AggregateRecordsRequest;Ljava/time/Period;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetAggregateGroupByPeriod_Landroid_health_connect_AggregateRecordsRequest_Ljava_time_Period_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.Health.Connect.AggregateRecordsRequest" />
        <Parameter Name="period" Type="Java.Time.Period" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">Result type of the aggregation.
                &lt;p&gt;Note:
                &lt;p&gt;This type is embedded in the <c>AggregationType</c> as <c>AggregationType</c> are
                typed in nature.
                &lt;p&gt;Only <c>AggregationType</c>s that are of same type T can be queried together</param>
        <param name="request">Request for different aggregation.</param>
        <param name="period">Period on which to group by results</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive result of performing this operation.</param>
        <summary>Get aggregations corresponding to <c>request</c>.</summary>
        <remarks>
          <para>Get aggregations corresponding to <c>request</c>. Use this API if results are to be grouped
            by number of days. This API handles changes in <c>ZoneOffset</c> when computing the data on
            a per-day basis.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/health/connect/HealthConnectManager#aggregateGroupByPeriod(android.health.connect.AggregateRecordsRequest%3CT%3E,%20java.time.Period,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Cjava.util.List%3Candroid.health.connect.AggregateRecordsGroupedByPeriodResponse%3CT%3E%3E,%20android.health.connect.HealthConnectException%3E)" title="Reference documentation">Java documentation for <code>android.health.connect.HealthConnectManager.aggregateGroupByPeriod(android.health.connect.AggregateRecordsRequest&lt;T&gt;, java.time.Period, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;java.util.List&lt;android.health.connect.AggregateRecordsGroupedByPeriodResponse&lt;T&gt;&gt;, android.health.connect.HealthConnectException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryHealthPermissions">
      <MemberSignature Language="C#" Value="public const string CategoryHealthPermissions;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CategoryHealthPermissions" />
      <MemberSignature Language="DocId" Value="F:Android.Health.Connect.HealthConnectManager.CategoryHealthPermissions" />
      <MemberSignature Language="F#" Value="val mutable CategoryHealthPermissions : string" Usage="Android.Health.Connect.HealthConnectManager.CategoryHealthPermissions" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CATEGORY_HEALTH_PERMISSIONS", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CATEGORY_HEALTH_PERMISSIONS", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Used in conjunction with <c>android.content.Intent#ACTION_VIEW_PERMISSION_USAGE</c> to
            launch UI to show an app’s health permission rationale/data policy.</summary>
        <remarks>
          <para>Used in conjunction with <c>android.content.Intent#ACTION_VIEW_PERMISSION_USAGE</c> to
            launch UI to show an app’s health permission rationale/data policy.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; Used by apps to define an intent filter in conjunction with <c>android.content.Intent#ACTION_VIEW_PERMISSION_USAGE</c> that the HC UI can link out to.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/health/connect/HealthConnectManager#CATEGORY_HEALTH_PERMISSIONS" title="Reference documentation">Java documentation for <code>android.health.connect.HealthConnectManager.CATEGORY_HEALTH_PERMISSIONS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMedicalDataSource">
      <MemberSignature Language="C#" Value="public virtual void CreateMedicalDataSource (Android.Health.Connect.CreateMedicalDataSourceRequest request, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateMedicalDataSource(class Android.Health.Connect.CreateMedicalDataSourceRequest request, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Health.Connect.HealthConnectManager.CreateMedicalDataSource(Android.Health.Connect.CreateMedicalDataSourceRequest,Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="abstract member CreateMedicalDataSource : Android.Health.Connect.CreateMedicalDataSourceRequest * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit&#xA;override this.CreateMedicalDataSource : Android.Health.Connect.CreateMedicalDataSourceRequest * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="healthConnectManager.CreateMedicalDataSource (request, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[Android.Runtime.Register("createMedicalDataSource", "(Landroid/health/connect/CreateMedicalDataSourceRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetCreateMedicalDataSource_Landroid_health_connect_CreateMedicalDataSourceRequest_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=36)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createMedicalDataSource", "(Landroid/health/connect/CreateMedicalDataSourceRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetCreateMedicalDataSource_Landroid_health_connect_CreateMedicalDataSourceRequest_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=36)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.health.WRITE_MEDICAL_DATA")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.health.WRITE_MEDICAL_DATA")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android36.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android36.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.Health.Connect.CreateMedicalDataSourceRequest" Index="0" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" Index="1" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" Index="2" FrameworkAlternate="net-android-36.0" />
      </Parameters>
      <Docs>
        <param name="request">Creation request.</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive result of performing this operation.</param>
        <summary>Creates a <c>MedicalDataSource</c> in HealthConnect based on the <c>CreateMedicalDataSourceRequest</c> request values.</summary>
        <remarks>
          <para>Creates a <c>MedicalDataSource</c> in HealthConnect based on the <c>CreateMedicalDataSourceRequest</c> request values.</para>
          <para>Medical data is represented using the <see href="https://hl7.org/fhir/">Fast Healthcare
            Interoperability Resources (FHIR)</see> standard.</para>
          <para>A <c>MedicalDataSource</c> needs to be created before any <c>MedicalResource</c>s for
            that source can be inserted. Separate <c>MedicalDataSource</c>s should be created for
            medical records coming from different sources (e.g. different FHIR endpoints, different
            healthcare systems), unless the data has been reconciled and all records have a unique
            combination of resource type and resource id.</para>
          <para>The <c>CreateMedicalDataSourceRequest.Builder#setDisplayName display name</c> must be
            unique per app, and <c>CreateMedicalDataSourceRequest.Builder#setFhirVersion</c> FHIR
            version} must be a version supported by Health Connect, as documented on the <c>FhirVersion</c>. See <c>CreateMedicalDataSourceRequest.Builder#setFhirBaseUri</c> for more
            details on the FHIR base URI.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/health/connect/HealthConnectManager#createMedicalDataSource(android.health.connect.CreateMedicalDataSourceRequest,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Candroid.health.connect.datatypes.MedicalDataSource,%20android.health.connect.HealthConnectException%3E)" title="Reference documentation">Java documentation for <code>android.health.connect.HealthConnectManager.createMedicalDataSource(android.health.connect.CreateMedicalDataSourceRequest, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;android.health.connect.datatypes.MedicalDataSource, android.health.connect.HealthConnectException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMedicalDataSourceWithData">
      <MemberSignature Language="C#" Value="public virtual void DeleteMedicalDataSourceWithData (string id, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteMedicalDataSourceWithData(string id, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Health.Connect.HealthConnectManager.DeleteMedicalDataSourceWithData(System.String,Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="abstract member DeleteMedicalDataSourceWithData : string * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit&#xA;override this.DeleteMedicalDataSourceWithData : string * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="healthConnectManager.DeleteMedicalDataSourceWithData (id, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[Android.Runtime.Register("deleteMedicalDataSourceWithData", "(Ljava/lang/String;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetDeleteMedicalDataSourceWithData_Ljava_lang_String_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=36)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("deleteMedicalDataSourceWithData", "(Ljava/lang/String;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetDeleteMedicalDataSourceWithData_Ljava_lang_String_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=36)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android36.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android36.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" Index="0" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" Index="1" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" Index="2" FrameworkAlternate="net-android-36.0" />
      </Parameters>
      <Docs>
        <param name="id">The id of the data source to delete.</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive result of performing this operation.</param>
        <summary>Deletes a <c>MedicalDataSource</c> and all data linked to it.</summary>
        <remarks>
          <para>Deletes a <c>MedicalDataSource</c> and all data linked to it.</para>
          <para>If the provided data source <c>id</c> is either invalid, or does not exist, or owned by
            another apps, the caller will receive an exception with code <c>HealthConnectException#ERROR_INVALID_ARGUMENT</c> via <c>callback.onError()</c>.</para>
          <para>Regarding permissions:
            
            &lt;ul&gt;
              &lt;li&gt;Only apps with the system permission can delete data written by apps other than
                  themselves.
              &lt;li&gt;Deletes are permitted in the foreground or background.
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/health/connect/HealthConnectManager#deleteMedicalDataSourceWithData(java.lang.String,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Cjava.lang.Void,%20android.health.connect.HealthConnectException%3E)" title="Reference documentation">Java documentation for <code>android.health.connect.HealthConnectManager.deleteMedicalDataSourceWithData(java.lang.String, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;java.lang.Void, android.health.connect.HealthConnectException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMedicalResources">
      <MemberSignature Language="C#" Value="public virtual void DeleteMedicalResources (Android.Health.Connect.DeleteMedicalResourcesRequest request, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteMedicalResources(class Android.Health.Connect.DeleteMedicalResourcesRequest request, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Health.Connect.HealthConnectManager.DeleteMedicalResources(Android.Health.Connect.DeleteMedicalResourcesRequest,Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="abstract member DeleteMedicalResources : Android.Health.Connect.DeleteMedicalResourcesRequest * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit&#xA;override this.DeleteMedicalResources : Android.Health.Connect.DeleteMedicalResourcesRequest * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="healthConnectManager.DeleteMedicalResources (request, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[Android.Runtime.Register("deleteMedicalResources", "(Landroid/health/connect/DeleteMedicalResourcesRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetDeleteMedicalResources_Landroid_health_connect_DeleteMedicalResourcesRequest_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=36)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("deleteMedicalResources", "(Landroid/health/connect/DeleteMedicalResourcesRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetDeleteMedicalResources_Landroid_health_connect_DeleteMedicalResourcesRequest_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=36)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android36.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android36.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.Health.Connect.DeleteMedicalResourcesRequest" Index="0" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" Index="1" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" Index="2" FrameworkAlternate="net-android-36.0" />
      </Parameters>
      <Docs>
        <param name="request">The delete request.</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive result of performing this operation.</param>
        <summary>Deletes <c>MedicalResource</c>s based on given filters in <c>DeleteMedicalResourcesRequest</c>.</summary>
        <remarks>
          <para>Deletes <c>MedicalResource</c>s based on given filters in <c>DeleteMedicalResourcesRequest</c>.</para>
          <para>Regarding permissions:
            
            &lt;ul&gt;
              &lt;li&gt;Only apps with the system permission can delete data written by apps other than
                  themselves.
              &lt;li&gt;Deletes are permitted in the foreground or background.
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/health/connect/HealthConnectManager#deleteMedicalResources(android.health.connect.DeleteMedicalResourcesRequest,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Cjava.lang.Void,%20android.health.connect.HealthConnectException%3E)" title="Reference documentation">Java documentation for <code>android.health.connect.HealthConnectManager.deleteMedicalResources(android.health.connect.DeleteMedicalResourcesRequest, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;java.lang.Void, android.health.connect.HealthConnectException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMedicalResources">
      <MemberSignature Language="C#" Value="public virtual void DeleteMedicalResources (System.Collections.Generic.IList&lt;Android.Health.Connect.MedicalResourceId&gt; ids, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteMedicalResources(class System.Collections.Generic.IList`1&lt;class Android.Health.Connect.MedicalResourceId&gt; ids, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Health.Connect.HealthConnectManager.DeleteMedicalResources(System.Collections.Generic.IList{Android.Health.Connect.MedicalResourceId},Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="abstract member DeleteMedicalResources : System.Collections.Generic.IList&lt;Android.Health.Connect.MedicalResourceId&gt; * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit&#xA;override this.DeleteMedicalResources : System.Collections.Generic.IList&lt;Android.Health.Connect.MedicalResourceId&gt; * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="healthConnectManager.DeleteMedicalResources (ids, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[Android.Runtime.Register("deleteMedicalResources", "(Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetDeleteMedicalResources_Ljava_util_List_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=36)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("deleteMedicalResources", "(Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetDeleteMedicalResources_Ljava_util_List_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=36)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android36.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android36.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ids" Type="System.Collections.Generic.IList&lt;Android.Health.Connect.MedicalResourceId&gt;" Index="0" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" Index="1" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" Index="2" FrameworkAlternate="net-android-36.0" />
      </Parameters>
      <Docs>
        <param name="ids">The ids to delete.</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive result of performing this operation.</param>
        <summary>Deletes a list of <c>MedicalResource</c>s by the provided list of <c>MedicalResourceId</c>s.</summary>
        <remarks>
          <para>Deletes a list of <c>MedicalResource</c>s by the provided list of <c>MedicalResourceId</c>s.
            
            &lt;ul&gt;
              &lt;li&gt;If any ID in <c>ids</c> is invalid, the API will throw an <c>IllegalArgumentException</c>, and nothing will be deleted.
              &lt;li&gt;If any ID in <c>ids</c> does not exist, that ID will be ignored, while deletion on
                  other IDs will be performed.
            &lt;/ul&gt;</para>
          <para>Regarding permissions:
            
            &lt;ul&gt;
              &lt;li&gt;Only apps with the system permission can delete data written by apps other than
                  themselves.
              &lt;li&gt;Deletes are permitted in the foreground or background.
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/health/connect/HealthConnectManager#deleteMedicalResources(java.util.List%3Candroid.health.connect.MedicalResourceId%3E,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Cjava.lang.Void,%20android.health.connect.HealthConnectException%3E)" title="Reference documentation">Java documentation for <code>android.health.connect.HealthConnectManager.deleteMedicalResources(java.util.List&lt;android.health.connect.MedicalResourceId&gt;, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;java.lang.Void, android.health.connect.HealthConnectException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRecords">
      <MemberSignature Language="C#" Value="public virtual void DeleteRecords (System.Collections.Generic.IList&lt;Android.Health.Connect.RecordIdFilter&gt; recordIds, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteRecords(class System.Collections.Generic.IList`1&lt;class Android.Health.Connect.RecordIdFilter&gt; recordIds, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Health.Connect.HealthConnectManager.DeleteRecords(System.Collections.Generic.IList{Android.Health.Connect.RecordIdFilter},Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="abstract member DeleteRecords : System.Collections.Generic.IList&lt;Android.Health.Connect.RecordIdFilter&gt; * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit&#xA;override this.DeleteRecords : System.Collections.Generic.IList&lt;Android.Health.Connect.RecordIdFilter&gt; * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="healthConnectManager.DeleteRecords (recordIds, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("deleteRecords", "(Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetDeleteRecords_Ljava_util_List_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("deleteRecords", "(Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetDeleteRecords_Ljava_util_List_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordIds" Type="System.Collections.Generic.IList&lt;Android.Health.Connect.RecordIdFilter&gt;" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" />
      </Parameters>
      <Docs>
        <param name="recordIds">recordIds on which to perform delete operation.</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive result of performing this operation.</param>
        <summary>Deletes records based on <c>RecordIdFilter</c>.</summary>
        <remarks>
          <para>Deletes records based on <c>RecordIdFilter</c>.</para>
          <para>Deletions are performed in a transaction i.e. either all will be deleted or none</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/health/connect/HealthConnectManager#deleteRecords(java.util.List%3Candroid.health.connect.RecordIdFilter%3E,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Cjava.lang.Void,%20android.health.connect.HealthConnectException%3E)" title="Reference documentation">Java documentation for <code>android.health.connect.HealthConnectManager.deleteRecords(java.util.List&lt;android.health.connect.RecordIdFilter&gt;, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;java.lang.Void, android.health.connect.HealthConnectException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRecords">
      <MemberSignature Language="C#" Value="public virtual void DeleteRecords (Java.Lang.Class recordType, Android.Health.Connect.ITimeRangeFilter timeRangeFilter, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteRecords(class Java.Lang.Class recordType, class Android.Health.Connect.ITimeRangeFilter timeRangeFilter, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Health.Connect.HealthConnectManager.DeleteRecords(Java.Lang.Class,Android.Health.Connect.ITimeRangeFilter,Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="abstract member DeleteRecords : Java.Lang.Class * Android.Health.Connect.ITimeRangeFilter * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit&#xA;override this.DeleteRecords : Java.Lang.Class * Android.Health.Connect.ITimeRangeFilter * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="healthConnectManager.DeleteRecords (recordType, timeRangeFilter, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("deleteRecords", "(Ljava/lang/Class;Landroid/health/connect/TimeRangeFilter;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetDeleteRecords_Ljava_lang_Class_Landroid_health_connect_TimeRangeFilter_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("deleteRecords", "(Ljava/lang/Class;Landroid/health/connect/TimeRangeFilter;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetDeleteRecords_Ljava_lang_Class_Landroid_health_connect_TimeRangeFilter_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordType" Type="Java.Lang.Class" />
        <Parameter Name="timeRangeFilter" Type="Android.Health.Connect.ITimeRangeFilter" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" />
      </Parameters>
      <Docs>
        <param name="recordType">recordType to perform delete operation on.</param>
        <param name="timeRangeFilter">time filter based on which to delete the records.</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive result of performing this operation.</param>
        <summary>Deletes records based on the <c>TimeRangeFilter</c>.</summary>
        <remarks>
          <para>Deletes records based on the <c>TimeRangeFilter</c>.</para>
          <para>Deletions are performed in a transaction i.e. either all will be deleted or none</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/health/connect/HealthConnectManager#deleteRecords(java.lang.Class%3C?%20extends%20android.health.connect.datatypes.Record%3E,%20android.health.connect.TimeRangeFilter,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Cjava.lang.Void,%20android.health.connect.HealthConnectException%3E)" title="Reference documentation">Java documentation for <code>android.health.connect.HealthConnectManager.deleteRecords(java.lang.Class&lt;? extends android.health.connect.datatypes.Record&gt;, android.health.connect.TimeRangeFilter, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;java.lang.Void, android.health.connect.HealthConnectException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraExerciseRoute">
      <MemberSignature Language="C#" Value="public const string ExtraExerciseRoute;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraExerciseRoute" />
      <MemberSignature Language="DocId" Value="F:Android.Health.Connect.HealthConnectManager.ExtraExerciseRoute" />
      <MemberSignature Language="F#" Value="val mutable ExtraExerciseRoute : string" Usage="Android.Health.Connect.HealthConnectManager.ExtraExerciseRoute" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_EXERCISE_ROUTE", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_EXERCISE_ROUTE", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An exercise route requested via <c>#ACTION_REQUEST_EXERCISE_ROUTE</c>.</summary>
        <remarks>
          <para>An exercise route requested via <c>#ACTION_REQUEST_EXERCISE_ROUTE</c>.</para>
          <para>This is returned for a successful request to access a route associated with an exercise
            session.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/health/connect/HealthConnectManager#EXTRA_EXERCISE_ROUTE" title="Reference documentation">Java documentation for <code>android.health.connect.HealthConnectManager.EXTRA_EXERCISE_ROUTE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraSessionId">
      <MemberSignature Language="C#" Value="public const string ExtraSessionId;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraSessionId" />
      <MemberSignature Language="DocId" Value="F:Android.Health.Connect.HealthConnectManager.ExtraSessionId" />
      <MemberSignature Language="F#" Value="val mutable ExtraSessionId : string" Usage="Android.Health.Connect.HealthConnectManager.ExtraSessionId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_SESSION_ID", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_SESSION_ID", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A string ID of a session to be used with <c>#ACTION_REQUEST_EXERCISE_ROUTE</c>.</summary>
        <remarks>
          <para>A string ID of a session to be used with <c>#ACTION_REQUEST_EXERCISE_ROUTE</c>.</para>
          <para>This is used to specify route of which exercise session we want to request.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/health/connect/HealthConnectManager#EXTRA_SESSION_ID" title="Reference documentation">Java documentation for <code>android.health.connect.HealthConnectManager.EXTRA_SESSION_ID</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangeLogs">
      <MemberSignature Language="C#" Value="public virtual void GetChangeLogs (Android.Health.Connect.ChangeLog.ChangeLogsRequest changeLogsRequest, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetChangeLogs(class Android.Health.Connect.ChangeLog.ChangeLogsRequest changeLogsRequest, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Health.Connect.HealthConnectManager.GetChangeLogs(Android.Health.Connect.ChangeLog.ChangeLogsRequest,Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="abstract member GetChangeLogs : Android.Health.Connect.ChangeLog.ChangeLogsRequest * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit&#xA;override this.GetChangeLogs : Android.Health.Connect.ChangeLog.ChangeLogsRequest * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="healthConnectManager.GetChangeLogs (changeLogsRequest, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getChangeLogs", "(Landroid/health/connect/changelog/ChangeLogsRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetGetChangeLogs_Landroid_health_connect_changelog_ChangeLogsRequest_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getChangeLogs", "(Landroid/health/connect/changelog/ChangeLogsRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetGetChangeLogs_Landroid_health_connect_changelog_ChangeLogsRequest_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeLogsRequest" Type="Android.Health.Connect.ChangeLog.ChangeLogsRequest" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" />
      </Parameters>
      <Docs>
        <param name="changeLogsRequest">The token from <c>HealthConnectManager#getChangeLogToken</c>.</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive result of performing this operation.</param>
        <summary>Get change logs post the time when <c>token</c> was generated.</summary>
        <remarks>
          <para>Get change logs post the time when <c>token</c> was generated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/health/connect/HealthConnectManager#getChangeLogs(android.health.connect.changelog.ChangeLogsRequest,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Candroid.health.connect.changelog.ChangeLogsResponse,%20android.health.connect.HealthConnectException%3E)" title="Reference documentation">Java documentation for <code>android.health.connect.HealthConnectManager.getChangeLogs(android.health.connect.changelog.ChangeLogsRequest, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;android.health.connect.changelog.ChangeLogsResponse, android.health.connect.HealthConnectException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangeLogToken">
      <MemberSignature Language="C#" Value="public virtual void GetChangeLogToken (Android.Health.Connect.ChangeLog.ChangeLogTokenRequest request, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetChangeLogToken(class Android.Health.Connect.ChangeLog.ChangeLogTokenRequest request, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Health.Connect.HealthConnectManager.GetChangeLogToken(Android.Health.Connect.ChangeLog.ChangeLogTokenRequest,Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="abstract member GetChangeLogToken : Android.Health.Connect.ChangeLog.ChangeLogTokenRequest * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit&#xA;override this.GetChangeLogToken : Android.Health.Connect.ChangeLog.ChangeLogTokenRequest * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="healthConnectManager.GetChangeLogToken (request, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getChangeLogToken", "(Landroid/health/connect/changelog/ChangeLogTokenRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetGetChangeLogToken_Landroid_health_connect_changelog_ChangeLogTokenRequest_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getChangeLogToken", "(Landroid/health/connect/changelog/ChangeLogTokenRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetGetChangeLogToken_Landroid_health_connect_changelog_ChangeLogTokenRequest_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.Health.Connect.ChangeLog.ChangeLogTokenRequest" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" />
      </Parameters>
      <Docs>
        <param name="request">A request to get changelog token</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive result of performing this operation.</param>
        <summary>Get token for {HealthConnectManager#getChangeLogs}.</summary>
        <remarks>
          <para>Get token for {HealthConnectManager#getChangeLogs}. Changelogs requested corresponding to
            this token will be post the time this token was generated by the system all items that match
            the given filters.</para>
          <para>Tokens from this request are to be passed to {HealthConnectManager#getChangeLogs}</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/health/connect/HealthConnectManager#getChangeLogToken(android.health.connect.changelog.ChangeLogTokenRequest,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Candroid.health.connect.changelog.ChangeLogTokenResponse,%20android.health.connect.HealthConnectException%3E)" title="Reference documentation">Java documentation for <code>android.health.connect.HealthConnectManager.getChangeLogToken(android.health.connect.changelog.ChangeLogTokenRequest, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;android.health.connect.changelog.ChangeLogTokenResponse, android.health.connect.HealthConnectException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMedicalDataSources">
      <MemberSignature Language="C#" Value="public virtual void GetMedicalDataSources (Android.Health.Connect.GetMedicalDataSourcesRequest request, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetMedicalDataSources(class Android.Health.Connect.GetMedicalDataSourcesRequest request, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Health.Connect.HealthConnectManager.GetMedicalDataSources(Android.Health.Connect.GetMedicalDataSourcesRequest,Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="abstract member GetMedicalDataSources : Android.Health.Connect.GetMedicalDataSourcesRequest * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit&#xA;override this.GetMedicalDataSources : Android.Health.Connect.GetMedicalDataSourcesRequest * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="healthConnectManager.GetMedicalDataSources (request, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[Android.Runtime.Register("getMedicalDataSources", "(Landroid/health/connect/GetMedicalDataSourcesRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetGetMedicalDataSources_Landroid_health_connect_GetMedicalDataSourcesRequest_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=36)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getMedicalDataSources", "(Landroid/health/connect/GetMedicalDataSourcesRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetGetMedicalDataSources_Landroid_health_connect_GetMedicalDataSourcesRequest_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=36)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android36.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android36.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.Health.Connect.GetMedicalDataSourcesRequest" Index="0" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" Index="1" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" Index="2" FrameworkAlternate="net-android-36.0" />
      </Parameters>
      <Docs>
        <param name="request">the request for which data sources to return.</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive result of performing this operation.</param>
        <summary>Returns the requested <c>MedicalDataSource</c>s.</summary>
        <remarks>
          <para>Returns the requested <c>MedicalDataSource</c>s.</para>
          <para>Number of data sources returned by this API will depend based on below factors:
            
            &lt;ul&gt;
              &lt;li&gt;If an empty <c>GetMedicalDataSourcesRequest#getPackageNames() list of package
                  names</c> is passed, all permitted data sources from all apps will be returned. See below.
              &lt;li&gt;If any package name in the <c>GetMedicalDataSourcesRequest#getPackageNames() list
                  of package names</c> is invalid, the API will throw an <c>IllegalArgumentException</c>.
              &lt;li&gt;If a non-empty <c>GetMedicalDataSourcesRequest#getPackageNames() list of package
                  names</c> is specified in the request, then only the permitted data sources created by
                  those packages will be returned. See below.
            &lt;/ul&gt;</para>
          <para>There is no specific read permission for getting data sources. Instead permission to read
            data sources is based on whether the caller has permission to read the data currently linked
            to that data source. Being permitted to get data sources is dependent on the following logic,
            in priority order, earlier statements take precedence.
            
            &lt;ol&gt;
              &lt;li&gt;A caller with the system permission can get any data source in the foreground or
                  background.
              &lt;li&gt;A caller without any read or write permissions for health data will not be able to get
                  any medical data sources and receive an exception with code <c>HealthConnectException#ERROR_SECURITY</c> via <c>callback.onError()</c>, even for data
                  sources the caller has created.
              &lt;li&gt;Callers can get data sources they have created, whether this method is called in the
                  foreground or background. Note this only applies if the caller has at least one read or
                  write permission for health data.
              &lt;li&gt;For any given data source, a caller can get that data source in the foreground if the
                  caller has permission to read any of the data linked to that data source. For clarity,
                  the does not allow it to get an empty data source.
              &lt;li&gt;For any given data source, a caller can get that data source in the background if it
                  has both permission to read any of the data linked to that data source, and <c>android.health.connect.HealthPermissions#READ_HEALTH_DATA_IN_BACKGROUND</c>.
              &lt;li&gt;In all other cases the caller is not permitted to get the given data source and it will
                  not be returned.
            &lt;/ol&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/health/connect/HealthConnectManager#getMedicalDataSources(android.health.connect.GetMedicalDataSourcesRequest,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Cjava.util.List%3Candroid.health.connect.datatypes.MedicalDataSource%3E,%20android.health.connect.HealthConnectException%3E)" title="Reference documentation">Java documentation for <code>android.health.connect.HealthConnectManager.getMedicalDataSources(android.health.connect.GetMedicalDataSourcesRequest, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;java.util.List&lt;android.health.connect.datatypes.MedicalDataSource&gt;, android.health.connect.HealthConnectException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMedicalDataSources">
      <MemberSignature Language="C#" Value="public virtual void GetMedicalDataSources (System.Collections.Generic.IList&lt;string&gt; ids, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetMedicalDataSources(class System.Collections.Generic.IList`1&lt;string&gt; ids, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Health.Connect.HealthConnectManager.GetMedicalDataSources(System.Collections.Generic.IList{System.String},Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="abstract member GetMedicalDataSources : System.Collections.Generic.IList&lt;string&gt; * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit&#xA;override this.GetMedicalDataSources : System.Collections.Generic.IList&lt;string&gt; * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="healthConnectManager.GetMedicalDataSources (ids, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[Android.Runtime.Register("getMedicalDataSources", "(Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetGetMedicalDataSources_Ljava_util_List_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=36)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getMedicalDataSources", "(Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetGetMedicalDataSources_Ljava_util_List_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=36)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android36.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android36.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ids" Type="System.Collections.Generic.IList&lt;System.String&gt;" Index="0" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" Index="1" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" Index="2" FrameworkAlternate="net-android-36.0" />
      </Parameters>
      <Docs>
        <param name="ids">Identifiers for data sources to get.</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive result of performing this operation.</param>
        <summary>Returns <c>MedicalDataSource</c>s for the provided list of IDs.</summary>
        <remarks>
          <para>Returns <c>MedicalDataSource</c>s for the provided list of IDs.</para>
          <para>The number and order of medical data sources returned by this API is not guaranteed. The
            number will depend on the factors below:
            
            &lt;ul&gt;
              &lt;li&gt;If an empty list of <c>ids</c> is provided, an empty list will be returned.
              &lt;li&gt;If any ID in <c>ids</c> is invalid, the caller will receive an exception with code
                  <c>HealthConnectException#ERROR_INVALID_ARGUMENT</c> via <c>callback.onError()</c>.
              &lt;li&gt;If any ID in <c>ids</c> does not exist, no data source will be returned for that ID.
              &lt;li&gt;Callers will only get data sources they are permitted to get. See below.
            &lt;/ul&gt;</para>
          <para>There is no specific read permission for getting data sources. Instead, permission to read
            data sources is based on whether the caller has permission to read the data currently linked
            to that data source. Being permitted to get data sources is dependent on the following logic,
            in priority order, earlier statements take precedence.
            
            &lt;ol&gt;
              &lt;li&gt;A caller with the system permission can get any data source in the foreground or
                  background.
              &lt;li&gt;A caller without any read or write permissions for health data will not be able to get
                  any medical data sources and receive an exception with code <c>HealthConnectException#ERROR_SECURITY</c> via <c>callback.onError()</c>, even for data
                  sources the caller has created.
              &lt;li&gt;Callers can get data sources they have created, whether this method is called in the
                  foreground or background. Note this only applies if the caller has at least one read or
                  write permission for health data.
              &lt;li&gt;For any given data source, a caller can get that data source in the foreground if the
                  caller has permission to read any of the data linked to that data source. For clarity,
                  the does not allow it to get an empty data source.
              &lt;li&gt;For any given data source, a caller can get that data source in the background if it
                  has both permission to read any of the data linked to that data source, and <c>android.health.connect.HealthPermissions#READ_HEALTH_DATA_IN_BACKGROUND</c>.
              &lt;li&gt;In all other cases the caller is not permitted to get the given data source and it will
                  not be returned.
            &lt;/ol&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/health/connect/HealthConnectManager#getMedicalDataSources(java.util.List%3Cjava.lang.String%3E,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Cjava.util.List%3Candroid.health.connect.datatypes.MedicalDataSource%3E,%20android.health.connect.HealthConnectException%3E)" title="Reference documentation">Java documentation for <code>android.health.connect.HealthConnectManager.getMedicalDataSources(java.util.List&lt;java.lang.String&gt;, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;java.util.List&lt;android.health.connect.datatypes.MedicalDataSource&gt;, android.health.connect.HealthConnectException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRecords">
      <MemberSignature Language="C#" Value="public virtual void InsertRecords (System.Collections.Generic.IList&lt;Android.Health.Connect.DataTypes.Record&gt; records, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertRecords(class System.Collections.Generic.IList`1&lt;class Android.Health.Connect.DataTypes.Record&gt; records, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Health.Connect.HealthConnectManager.InsertRecords(System.Collections.Generic.IList{Android.Health.Connect.DataTypes.Record},Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="abstract member InsertRecords : System.Collections.Generic.IList&lt;Android.Health.Connect.DataTypes.Record&gt; * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit&#xA;override this.InsertRecords : System.Collections.Generic.IList&lt;Android.Health.Connect.DataTypes.Record&gt; * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="healthConnectManager.InsertRecords (records, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("insertRecords", "(Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetInsertRecords_Ljava_util_List_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("insertRecords", "(Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetInsertRecords_Ljava_util_List_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="records" Type="System.Collections.Generic.IList&lt;Android.Health.Connect.DataTypes.Record&gt;" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" />
      </Parameters>
      <Docs>
        <param name="records">list of records to be inserted.</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive result of performing this operation.</param>
        <summary>Inserts <c>records</c> into the HealthConnect database.</summary>
        <remarks>
          <para>Inserts <c>records</c> into the HealthConnect database. The records returned in <c>InsertRecordsResponse</c> contains the unique IDs of the input records. The values are in same
            order as <c>records</c>. In case of an error or a permission failure the HealthConnect
            service, <c>OutcomeReceiver#onError</c> will be invoked with a <c>HealthConnectException</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/health/connect/HealthConnectManager#insertRecords(java.util.List%3Candroid.health.connect.datatypes.Record%3E,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Candroid.health.connect.InsertRecordsResponse,%20android.health.connect.HealthConnectException%3E)" title="Reference documentation">Java documentation for <code>android.health.connect.HealthConnectManager.insertRecords(java.util.List&lt;android.health.connect.datatypes.Record&gt;, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;android.health.connect.InsertRecordsResponse, android.health.connect.HealthConnectException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Health.Connect.HealthConnectManager.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Health.Connect.HealthConnectManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadMedicalResources">
      <MemberSignature Language="C#" Value="public virtual void ReadMedicalResources (Android.Health.Connect.ReadMedicalResourcesRequest request, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadMedicalResources(class Android.Health.Connect.ReadMedicalResourcesRequest request, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Health.Connect.HealthConnectManager.ReadMedicalResources(Android.Health.Connect.ReadMedicalResourcesRequest,Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="abstract member ReadMedicalResources : Android.Health.Connect.ReadMedicalResourcesRequest * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit&#xA;override this.ReadMedicalResources : Android.Health.Connect.ReadMedicalResourcesRequest * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="healthConnectManager.ReadMedicalResources (request, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[Android.Runtime.Register("readMedicalResources", "(Landroid/health/connect/ReadMedicalResourcesRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetReadMedicalResources_Landroid_health_connect_ReadMedicalResourcesRequest_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=36)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readMedicalResources", "(Landroid/health/connect/ReadMedicalResourcesRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetReadMedicalResources_Landroid_health_connect_ReadMedicalResourcesRequest_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=36)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android36.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android36.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.Health.Connect.ReadMedicalResourcesRequest" Index="0" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" Index="1" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" Index="2" FrameworkAlternate="net-android-36.0" />
      </Parameters>
      <Docs>
        <param name="request">The read request <c>ReadMedicalResourcesInitialRequest</c> or <c>ReadMedicalResourcesPageRequest</c>.</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive result of performing this operation.</param>
        <summary>Reads <c>MedicalResource</c>s based on <c>ReadMedicalResourcesInitialRequest</c> or <c>ReadMedicalResourcesPageRequest</c>.</summary>
        <remarks>
          <para>Reads <c>MedicalResource</c>s based on <c>ReadMedicalResourcesInitialRequest</c> or <c>ReadMedicalResourcesPageRequest</c>.</para>
          <para>Being permitted to read medical resources is dependent on the following logic, in priority
            order, earlier statements take precedence.
            
            &lt;ol&gt;
              &lt;li&gt;A caller with the system permission can get any medical resources in the foreground or
                  background.
              &lt;li&gt;A caller without any read or write permissions for health data will not be able to get
                  any medical resources and receive an exception with code <c>HealthConnectException#ERROR_SECURITY</c> via <c>callback.onError()</c>, even for medical
                  resources the caller has created.
              &lt;li&gt;Callers can get medical resources they have created, whether this method is called in
                  the foreground or background. Note this only applies if the caller has at least one
                  read or write permission for health data.
              &lt;li&gt;For any given medical resource, a caller can get that medical resource in the
                  foreground if the caller has the corresponding read permission, or in the background if
                  it also has <c>android.health.connect.HealthPermissions#READ_HEALTH_DATA_IN_BACKGROUND</c>.
              &lt;li&gt;In all other cases the caller is not permitted to get the given medical resource and it
                  will not be returned.
            &lt;/ol&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/health/connect/HealthConnectManager#readMedicalResources(android.health.connect.ReadMedicalResourcesRequest,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Candroid.health.connect.ReadMedicalResourcesResponse,%20android.health.connect.HealthConnectException%3E)" title="Reference documentation">Java documentation for <code>android.health.connect.HealthConnectManager.readMedicalResources(android.health.connect.ReadMedicalResourcesRequest, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;android.health.connect.ReadMedicalResourcesResponse, android.health.connect.HealthConnectException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadMedicalResources">
      <MemberSignature Language="C#" Value="public virtual void ReadMedicalResources (System.Collections.Generic.IList&lt;Android.Health.Connect.MedicalResourceId&gt; ids, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadMedicalResources(class System.Collections.Generic.IList`1&lt;class Android.Health.Connect.MedicalResourceId&gt; ids, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Health.Connect.HealthConnectManager.ReadMedicalResources(System.Collections.Generic.IList{Android.Health.Connect.MedicalResourceId},Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="abstract member ReadMedicalResources : System.Collections.Generic.IList&lt;Android.Health.Connect.MedicalResourceId&gt; * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit&#xA;override this.ReadMedicalResources : System.Collections.Generic.IList&lt;Android.Health.Connect.MedicalResourceId&gt; * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="healthConnectManager.ReadMedicalResources (ids, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[Android.Runtime.Register("readMedicalResources", "(Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetReadMedicalResources_Ljava_util_List_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=36)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readMedicalResources", "(Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetReadMedicalResources_Ljava_util_List_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=36)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android36.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android36.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ids" Type="System.Collections.Generic.IList&lt;Android.Health.Connect.MedicalResourceId&gt;" Index="0" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" Index="1" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" Index="2" FrameworkAlternate="net-android-36.0" />
      </Parameters>
      <Docs>
        <param name="ids">Identifiers on which to perform read operation.</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive result of performing this operation.</param>
        <summary>Reads <c>MedicalResource</c>s based on a list of <c>MedicalResourceId</c>s.</summary>
        <remarks>
          <para>Reads <c>MedicalResource</c>s based on a list of <c>MedicalResourceId</c>s.</para>
          <para>The number and order of medical resources returned by this API is not guaranteed. The
            number will depend on the factors below:
            
            &lt;ul&gt;
              &lt;li&gt;If an empty list of <c>ids</c> is provided, an empty list will be returned.
              &lt;li&gt;If the size of <c>ids</c> is more than 5000, the API will throw an <c>IllegalArgumentException</c>.
              &lt;li&gt;If any ID in <c>ids</c> is invalid, the API will throw an <c>IllegalArgumentException</c>.
              &lt;li&gt;If any ID in <c>ids</c> does not exist, no medical resource will be returned for that
                  ID.
              &lt;li&gt;Callers will only get medical resources they are permitted to get. See below.
            &lt;/ul&gt;
            
            Being permitted to read medical resources is dependent on the following logic, in priority
            order, earlier statements take precedence.
            
            &lt;ol&gt;
              &lt;li&gt;A caller with the system permission can get any medical resources in the foreground or
                  background.
              &lt;li&gt;A caller without any read or write permissions for health data will not be able to get
                  any medical resources and receive an exception with code <c>HealthConnectException#ERROR_SECURITY</c> via <c>callback.onError()</c>, even for medical
                  resources the caller has created.
              &lt;li&gt;Callers can get medical resources they have created, whether this method is called in
                  the foreground or background. Note this only applies if the caller has at least one
                  read or write permission for health data.
              &lt;li&gt;For any given medical resource, a caller can get that medical resource in the
                  foreground if the caller has the corresponding read permission, or in the background if
                  it also has <c>android.health.connect.HealthPermissions#READ_HEALTH_DATA_IN_BACKGROUND</c>.
              &lt;li&gt;In all other cases the caller is not permitted to get the given medical resource and it
                  will not be returned.
            &lt;/ol&gt;</para>
          <para>Each returned <c>MedicalResource</c> has passed the Health Connect FHIR validation checks
            at write time, but is not guaranteed to meet all requirements of the <see href="https://hl7.org/fhir/resourcelist.html">Fast Healthcare Interoperability Resources
            (FHIR) spec</see>. If required, clients should perform their own checks on the data.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/health/connect/HealthConnectManager#readMedicalResources(java.util.List%3Candroid.health.connect.MedicalResourceId%3E,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Cjava.util.List%3Candroid.health.connect.datatypes.MedicalResource%3E,%20android.health.connect.HealthConnectException%3E)" title="Reference documentation">Java documentation for <code>android.health.connect.HealthConnectManager.readMedicalResources(java.util.List&lt;android.health.connect.MedicalResourceId&gt;, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;java.util.List&lt;android.health.connect.datatypes.MedicalResource&gt;, android.health.connect.HealthConnectException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadRecords">
      <MemberSignature Language="C#" Value="public virtual void ReadRecords (Android.Health.Connect.ReadRecordsRequest request, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadRecords(class Android.Health.Connect.ReadRecordsRequest request, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Health.Connect.HealthConnectManager.ReadRecords(Android.Health.Connect.ReadRecordsRequest,Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="abstract member ReadRecords : Android.Health.Connect.ReadRecordsRequest * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit&#xA;override this.ReadRecords : Android.Health.Connect.ReadRecordsRequest * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="healthConnectManager.ReadRecords (request, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readRecords", "(Landroid/health/connect/ReadRecordsRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetReadRecords_Landroid_health_connect_ReadRecordsRequest_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readRecords", "(Landroid/health/connect/ReadRecordsRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetReadRecords_Landroid_health_connect_ReadRecordsRequest_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T extends android.health.connect.datatypes.Record" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T extends android.health.connect.datatypes.Record" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.Health.Connect.ReadRecordsRequest" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" />
      </Parameters>
      <Docs>
        <param name="request">Read request based on <c>ReadRecordsRequestUsingFilters</c> or <c>ReadRecordsRequestUsingIds</c></param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive result of performing this operation.</param>
        <summary>API to read records based on <c>ReadRecordsRequestUsingFilters</c> or <c>ReadRecordsRequestUsingIds</c></summary>
        <remarks>
          <para>API to read records based on <c>ReadRecordsRequestUsingFilters</c> or <c>ReadRecordsRequestUsingIds</c></para>
          <para>Number of records returned by this API will depend based on below factors:</para>
          <para>When an app with read permission allowed calls the API from background then it will be
            able to read only its own inserted records and will not get records inserted by other apps.
            This may be less than the total records present for the record type.</para>
          <para>When an app with read permission allowed calls the API from foreground then it will be
            able to read all records for the record type.</para>
          <para>App with only write permission but no read permission allowed will be able to read only
            its own inserted records both when in foreground or background.</para>
          <para>An app without both read and write permissions will not be able to read any record and the
            API will throw Security Exception.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/health/connect/HealthConnectManager#readRecords(android.health.connect.ReadRecordsRequest%3CT%3E,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Candroid.health.connect.ReadRecordsResponse%3CT%3E,%20android.health.connect.HealthConnectException%3E)" title="Reference documentation">Java documentation for <code>android.health.connect.HealthConnectManager.readRecords(android.health.connect.ReadRecordsRequest&lt;T&gt;, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;android.health.connect.ReadRecordsResponse&lt;T&gt;, android.health.connect.HealthConnectException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Health.Connect.HealthConnectManager.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Health.Connect.HealthConnectManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Health.Connect.HealthConnectManager.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Health.Connect.HealthConnectManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateRecords">
      <MemberSignature Language="C#" Value="public virtual void UpdateRecords (System.Collections.Generic.IList&lt;Android.Health.Connect.DataTypes.Record&gt; records, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateRecords(class System.Collections.Generic.IList`1&lt;class Android.Health.Connect.DataTypes.Record&gt; records, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Health.Connect.HealthConnectManager.UpdateRecords(System.Collections.Generic.IList{Android.Health.Connect.DataTypes.Record},Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="abstract member UpdateRecords : System.Collections.Generic.IList&lt;Android.Health.Connect.DataTypes.Record&gt; * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit&#xA;override this.UpdateRecords : System.Collections.Generic.IList&lt;Android.Health.Connect.DataTypes.Record&gt; * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="healthConnectManager.UpdateRecords (records, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("updateRecords", "(Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetUpdateRecords_Ljava_util_List_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("updateRecords", "(Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetUpdateRecords_Ljava_util_List_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="records" Type="System.Collections.Generic.IList&lt;Android.Health.Connect.DataTypes.Record&gt;" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" />
      </Parameters>
      <Docs>
        <param name="records">list of records to be updated.</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive result of performing this operation.</param>
        <summary>Updates <c>records</c> into the HealthConnect database.</summary>
        <remarks>
          <para>Updates <c>records</c> into the HealthConnect database. In case of an error or a permission
            failure the HealthConnect service, <c>OutcomeReceiver#onError</c> will be invoked with a
            <c>HealthConnectException</c>.</para>
          <para>In case the input record to be updated does not exist in the database or the caller is not
            the owner of the record then <c>HealthConnectException#ERROR_INVALID_ARGUMENT</c> will be
            thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/health/connect/HealthConnectManager#updateRecords(java.util.List%3Candroid.health.connect.datatypes.Record%3E,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Cjava.lang.Void,%20android.health.connect.HealthConnectException%3E)" title="Reference documentation">Java documentation for <code>android.health.connect.HealthConnectManager.updateRecords(java.util.List&lt;android.health.connect.datatypes.Record&gt;, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;java.lang.Void, android.health.connect.HealthConnectException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpsertMedicalResources">
      <MemberSignature Language="C#" Value="public virtual void UpsertMedicalResources (System.Collections.Generic.IList&lt;Android.Health.Connect.UpsertMedicalResourceRequest&gt; requests, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpsertMedicalResources(class System.Collections.Generic.IList`1&lt;class Android.Health.Connect.UpsertMedicalResourceRequest&gt; requests, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Health.Connect.HealthConnectManager.UpsertMedicalResources(System.Collections.Generic.IList{Android.Health.Connect.UpsertMedicalResourceRequest},Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="abstract member UpsertMedicalResources : System.Collections.Generic.IList&lt;Android.Health.Connect.UpsertMedicalResourceRequest&gt; * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit&#xA;override this.UpsertMedicalResources : System.Collections.Generic.IList&lt;Android.Health.Connect.UpsertMedicalResourceRequest&gt; * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="healthConnectManager.UpsertMedicalResources (requests, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[Android.Runtime.Register("upsertMedicalResources", "(Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetUpsertMedicalResources_Ljava_util_List_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=36)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("upsertMedicalResources", "(Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "GetUpsertMedicalResources_Ljava_util_List_Ljava_util_concurrent_Executor_Landroid_os_OutcomeReceiver_Handler", ApiSince=36)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.health.WRITE_MEDICAL_DATA")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.health.WRITE_MEDICAL_DATA")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android36.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android36.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requests" Type="System.Collections.Generic.IList&lt;Android.Health.Connect.UpsertMedicalResourceRequest&gt;" Index="0" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" Index="1" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" Index="2" FrameworkAlternate="net-android-36.0" />
      </Parameters>
      <Docs>
        <param name="requests">List of upsert requests.</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive result of performing this operation.</param>
        <summary>Inserts or updates a list of <c>MedicalResource</c>s into the HealthConnect database using
            <c>UpsertMedicalResourceRequest</c>.</summary>
        <remarks>
          <para>Inserts or updates a list of <c>MedicalResource</c>s into the HealthConnect database using
            <c>UpsertMedicalResourceRequest</c>.</para>
          <para>For each <c>UpsertMedicalResourceRequest</c>, one <c>MedicalResource</c> will be
            returned. The returned list of <c>MedicalResource</c>s will be in the same order as the
            <c>requests</c>.</para>
          <para>Note that a <c>MedicalDataSource</c> needs to be created using <c>#createMedicalDataSource</c> before any <c>MedicalResource</c>s can be upserted for this
            source.</para>
          <para>Medical data is represented using the <see href="https://hl7.org/fhir/">Fast Healthcare
            Interoperability Resources (FHIR)</see> standard. The FHIR resource provided in <c>UpsertMedicalResourceRequest#getData()</c> is expected to be valid FHIR in JSON representation
            for the specified <c>UpsertMedicalResourceRequest#getFhirVersion()</c> according to the <see href="https://hl7.org/fhir/resourcelist.html">FHIR spec</see>. Structural validation checks
            such as resource structure, field types and presence of required fields are performed, but
            these checks may not cover all FHIR spec requirements and may change in future versions.</para>
          <para>Data written to Health Connect should be for a single individual only. However, the API
            allows for multiple Patient resources to be written to account for the possibility of
            multiple Patient resources being present in one individual's medical record.</para>
          <para>Each <c>UpsertMedicalResourceRequest</c> also has to meet the following requirements.
            
            &lt;ul&gt;
              &lt;li&gt;The FHIR resource contains an "id" and "resourceType" field.
              &lt;li&gt;The FHIR resource type is in our accepted list of resource types. See <c>FhirResource</c> for the accepted types.
              &lt;li&gt;The FHIR resource does not contain any "contained" resources.
              &lt;li&gt;The resource can be mapped to one of the READ_MEDICAL_DATA_ <c>HealthPermissions</c>
                  categories.
              &lt;li&gt;The <c>UpsertMedicalResourceRequest#getDataSourceId()</c> is valid.
              &lt;li&gt;The <c>UpsertMedicalResourceRequest#getFhirVersion()</c> matches the <c>FhirVersion</c> of the <c>MedicalDataSource</c>.
            &lt;/ul&gt;</para>
          <para>If any request contains invalid <c>MedicalDataSource</c> IDs, the API will throw an
            <c>IllegalArgumentException</c>, and none of the <c>requests</c> will be upserted into the
            HealthConnect database.</para>
          <para>If any request is deemed invalid for any other reasons, the caller will receive an
            exception with code <c>HealthConnectException#ERROR_INVALID_ARGUMENT</c> via <c>callback.onError()</c>, and none of the <c>requests</c> will be upserted into the HealthConnect
            database.</para>
          <para>If data for any <c>UpsertMedicalResourceRequest</c> fails to be upserted, then no data
            from any <c>requests</c> will be upserted into the database.</para>
          <para>The uniqueness of each request is calculated comparing the combination of <c>UpsertMedicalResourceRequest#getDataSourceId() data source id</c>, FHIR resource type and FHIR
            resource ID extracted from the provided <c>UpsertMedicalResourceRequest#getData() data</c>.
            If the above combination does not match with an existing one in Health Connect, then a new
            <c>MedicalResource</c> is inserted, otherwise the existing one is updated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/health/connect/HealthConnectManager#upsertMedicalResources(java.util.List%3Candroid.health.connect.UpsertMedicalResourceRequest%3E,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Cjava.util.List%3Candroid.health.connect.datatypes.MedicalResource%3E,%20android.health.connect.HealthConnectException%3E)" title="Reference documentation">Java documentation for <code>android.health.connect.HealthConnectManager.upsertMedicalResources(java.util.List&lt;android.health.connect.UpsertMedicalResourceRequest&gt;, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;java.util.List&lt;android.health.connect.datatypes.MedicalResource&gt;, android.health.connect.HealthConnectException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
