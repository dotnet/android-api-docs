<Type Name="AppSearchSession" FullName="Android.App.AppSearch.AppSearchSession">
  <TypeSignature Language="C#" Value="public sealed class AppSearchSession : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.IO.ICloseable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AppSearchSession extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ICloseable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.App.AppSearch.AppSearchSession" />
  <TypeSignature Language="F#" Value="type AppSearchSession = class&#xA;    inherit Object&#xA;    interface ICloseable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ICloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/app/appsearch/AppSearchSession", ApiSince=31, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/app/appsearch/AppSearchSession", ApiSince=31, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides a connection to a single AppSearch database.</summary>
    <remarks>
      <para>Provides a connection to a single AppSearch database.</para>
      <para>An <c>AppSearchSession</c> instance provides access to database operations such as setting a
            schema, adding documents, and searching.</para>
      <para>This class is thread safe.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/app/appsearch/AppSearchSession" title="Reference documentation">Java documentation for <code>android.app.appsearch.AppSearchSession</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AppSearch.AppSearchSession.Close" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="appSearchSession.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.ICloseable.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("close", "()V", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("close", "()V", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes the <c>AppSearchSession</c> to persist all schema and document updates, additions,
            and deletes to disk.</summary>
        <remarks>
          <para>Closes the <c>AppSearchSession</c> to persist all schema and document updates, additions,
            and deletes to disk.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/appsearch/AppSearchSession#close()" title="Reference documentation">Java documentation for <code>android.app.appsearch.AppSearchSession.close()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitBlob">
      <MemberSignature Language="C#" Value="public void CommitBlob (System.Collections.Generic.ICollection&lt;Android.App.AppSearch.AppSearchBlobHandle&gt; handles, Java.Util.Concurrent.IExecutor executor, Java.Util.Functions.IConsumer callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CommitBlob(class System.Collections.Generic.ICollection`1&lt;class Android.App.AppSearch.AppSearchBlobHandle&gt; handles, class Java.Util.Concurrent.IExecutor executor, class Java.Util.Functions.IConsumer callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AppSearch.AppSearchSession.CommitBlob(System.Collections.Generic.ICollection{Android.App.AppSearch.AppSearchBlobHandle},Java.Util.Concurrent.IExecutor,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="member this.CommitBlob : System.Collections.Generic.ICollection&lt;Android.App.AppSearch.AppSearchBlobHandle&gt; * Java.Util.Concurrent.IExecutor * Java.Util.Functions.IConsumer -&gt; unit" Usage="appSearchSession.CommitBlob (handles, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[Android.Runtime.Register("commitBlob", "(Ljava/util/Set;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "", ApiSince=36)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("commitBlob", "(Ljava/util/Set;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "", ApiSince=36)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android36.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android36.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handles" Type="System.Collections.Generic.ICollection&lt;Android.App.AppSearch.AppSearchBlobHandle&gt;" Index="0" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" Index="1" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="callback" Type="Java.Util.Functions.IConsumer" Index="2" FrameworkAlternate="net-android-36.0" />
      </Parameters>
      <Docs>
        <param name="handles">The <c>AppSearchBlobHandle</c>s that identifies the blobs.</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive the <c>CommitBlobResponse</c>.</param>
        <summary>Commits the blobs to make it retrievable and immutable.</summary>
        <remarks>
          <para>Commits the blobs to make it retrievable and immutable.</para>
          <para>After this call, the blob is readable via <c>#openBlobForRead</c>. Any change to the
            content or rewrite via <c>#openBlobForWrite</c> of this blob won't be allowed.</para>
          <para>If the blob is already stored in AppSearch and committed. A failed <c>AppSearchResult</c>
            with error code <c>AppSearchResult#RESULT_ALREADY_EXISTS</c> will be associated with the
            <c>AppSearchBlobHandle</c>.</para>
          <para>If the blob content doesn't match the digest in <c>AppSearchBlobHandle</c>, a failed
            <c>AppSearchResult</c> with error code <c>AppSearchResult#RESULT_INVALID_ARGUMENT</c> will
            be associated with the <c>AppSearchBlobHandle</c>. The pending Blob file will be removed
            from AppSearch.</para>
          <para>Pending blobs won't be lost or auto-commit if <c>AppSearchSession</c> closed. Pending
            blobs will store in disk rather than memory. You can re-open <c>AppSearchSession</c> and
            re-write the pending blobs.</para>
          <para>The default time to recycle pending and orphan blobs is 1 week. A blob will be considered
            as an orphan if no <c>GenericDocument</c> references it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/appsearch/AppSearchSession#commitBlob(java.util.Set%3Candroid.app.appsearch.AppSearchBlobHandle%3E,%20java.util.concurrent.Executor,%20java.util.function.Consumer%3Candroid.app.appsearch.AppSearchResult%3Candroid.app.appsearch.CommitBlobResponse%3E%3E)" title="Reference documentation">Java documentation for <code>android.app.appsearch.AppSearchSession.commitBlob(java.util.Set&lt;android.app.appsearch.AppSearchBlobHandle&gt;, java.util.concurrent.Executor, java.util.function.Consumer&lt;android.app.appsearch.AppSearchResult&lt;android.app.appsearch.CommitBlobResponse&gt;&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByDocumentId">
      <MemberSignature Language="C#" Value="public void GetByDocumentId (Android.App.AppSearch.GetByDocumentIdRequest request, Java.Util.Concurrent.IExecutor executor, Android.App.AppSearch.IBatchResultCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetByDocumentId(class Android.App.AppSearch.GetByDocumentIdRequest request, class Java.Util.Concurrent.IExecutor executor, class Android.App.AppSearch.IBatchResultCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AppSearch.AppSearchSession.GetByDocumentId(Android.App.AppSearch.GetByDocumentIdRequest,Java.Util.Concurrent.IExecutor,Android.App.AppSearch.IBatchResultCallback)" />
      <MemberSignature Language="F#" Value="member this.GetByDocumentId : Android.App.AppSearch.GetByDocumentIdRequest * Java.Util.Concurrent.IExecutor * Android.App.AppSearch.IBatchResultCallback -&gt; unit" Usage="appSearchSession.GetByDocumentId (request, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getByDocumentId", "(Landroid/app/appsearch/GetByDocumentIdRequest;Ljava/util/concurrent/Executor;Landroid/app/appsearch/BatchResultCallback;)V", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getByDocumentId", "(Landroid/app/appsearch/GetByDocumentIdRequest;Ljava/util/concurrent/Executor;Landroid/app/appsearch/BatchResultCallback;)V", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.App.AppSearch.GetByDocumentIdRequest" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.App.AppSearch.IBatchResultCallback" />
      </Parameters>
      <Docs>
        <param name="request">a request containing a namespace and IDs to get documents for.</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive the pending result of performing this operation. The keys
                of the <c>AppSearchBatchResult</c> represent the input document IDs from the <c>GetByDocumentIdRequest</c> object. The values are either the corresponding <c>GenericDocument</c> object for the ID on success, or an <c>AppSearchResult</c> object on
                failure. For example, if an ID is not found, the value for that ID will be set to an
                <c>AppSearchResult</c> object with result code: <c>AppSearchResult#RESULT_NOT_FOUND</c>. If an unexpected internal error occurs in the
                AppSearch service, <c>BatchResultCallback#onSystemError</c> will be invoked with a
                <c>Throwable</c>.</param>
        <summary>Gets <c>GenericDocument</c> objects by document IDs in a namespace from the <c>AppSearchSession</c> database.</summary>
        <remarks>
          <para>Gets <c>GenericDocument</c> objects by document IDs in a namespace from the <c>AppSearchSession</c> database.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/appsearch/AppSearchSession#getByDocumentId(android.app.appsearch.GetByDocumentIdRequest,%20java.util.concurrent.Executor,%20android.app.appsearch.BatchResultCallback%3Cjava.lang.String,%20android.app.appsearch.GenericDocument%3E)" title="Reference documentation">Java documentation for <code>android.app.appsearch.AppSearchSession.getByDocumentId(android.app.appsearch.GetByDocumentIdRequest, java.util.concurrent.Executor, android.app.appsearch.BatchResultCallback&lt;java.lang.String, android.app.appsearch.GenericDocument&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamespaces">
      <MemberSignature Language="C#" Value="public void GetNamespaces (Java.Util.Concurrent.IExecutor executor, Java.Util.Functions.IConsumer callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetNamespaces(class Java.Util.Concurrent.IExecutor executor, class Java.Util.Functions.IConsumer callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AppSearch.AppSearchSession.GetNamespaces(Java.Util.Concurrent.IExecutor,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="member this.GetNamespaces : Java.Util.Concurrent.IExecutor * Java.Util.Functions.IConsumer -&gt; unit" Usage="appSearchSession.GetNamespaces (executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getNamespaces", "(Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getNamespaces", "(Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive the namespaces.</param>
        <summary>Retrieves the set of all namespaces in the current database with at least one document.</summary>
        <remarks>
          <para>Retrieves the set of all namespaces in the current database with at least one document.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/appsearch/AppSearchSession#getNamespaces(java.util.concurrent.Executor,%20java.util.function.Consumer%3Candroid.app.appsearch.AppSearchResult%3Cjava.util.Set%3Cjava.lang.String%3E%3E%3E)" title="Reference documentation">Java documentation for <code>android.app.appsearch.AppSearchSession.getNamespaces(java.util.concurrent.Executor, java.util.function.Consumer&lt;android.app.appsearch.AppSearchResult&lt;java.util.Set&lt;java.lang.String&gt;&gt;&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public void GetSchema (Java.Util.Concurrent.IExecutor executor, Java.Util.Functions.IConsumer callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetSchema(class Java.Util.Concurrent.IExecutor executor, class Java.Util.Functions.IConsumer callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AppSearch.AppSearchSession.GetSchema(Java.Util.Concurrent.IExecutor,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="member this.GetSchema : Java.Util.Concurrent.IExecutor * Java.Util.Functions.IConsumer -&gt; unit" Usage="appSearchSession.GetSchema (executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSchema", "(Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSchema", "(Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive the pending results of schema.</param>
        <summary>Retrieves the schema most recently successfully provided to <c>#setSchema</c>.</summary>
        <remarks>
          <para>Retrieves the schema most recently successfully provided to <c>#setSchema</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/appsearch/AppSearchSession#getSchema(java.util.concurrent.Executor,%20java.util.function.Consumer%3Candroid.app.appsearch.AppSearchResult%3Candroid.app.appsearch.GetSchemaResponse%3E%3E)" title="Reference documentation">Java documentation for <code>android.app.appsearch.AppSearchSession.getSchema(java.util.concurrent.Executor, java.util.function.Consumer&lt;android.app.appsearch.AppSearchResult&lt;android.app.appsearch.GetSchemaResponse&gt;&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStorageInfo">
      <MemberSignature Language="C#" Value="public void GetStorageInfo (Java.Util.Concurrent.IExecutor executor, Java.Util.Functions.IConsumer callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetStorageInfo(class Java.Util.Concurrent.IExecutor executor, class Java.Util.Functions.IConsumer callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AppSearch.AppSearchSession.GetStorageInfo(Java.Util.Concurrent.IExecutor,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="member this.GetStorageInfo : Java.Util.Concurrent.IExecutor * Java.Util.Functions.IConsumer -&gt; unit" Usage="appSearchSession.GetStorageInfo (executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getStorageInfo", "(Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getStorageInfo", "(Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive the storage info.</param>
        <summary>Gets the storage info for this <c>AppSearchSession</c> database.</summary>
        <remarks>
          <para>Gets the storage info for this <c>AppSearchSession</c> database.</para>
          <para>This may take time proportional to the number of documents and may be inefficient to call
            repeatedly.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/appsearch/AppSearchSession#getStorageInfo(java.util.concurrent.Executor,%20java.util.function.Consumer%3Candroid.app.appsearch.AppSearchResult%3Candroid.app.appsearch.StorageInfo%3E%3E)" title="Reference documentation">Java documentation for <code>android.app.appsearch.AppSearchSession.getStorageInfo(java.util.concurrent.Executor, java.util.function.Consumer&lt;android.app.appsearch.AppSearchResult&lt;android.app.appsearch.StorageInfo&gt;&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.App.AppSearch.AppSearchSession.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.App.AppSearch.AppSearchSession.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenBlobForRead">
      <MemberSignature Language="C#" Value="public void OpenBlobForRead (System.Collections.Generic.ICollection&lt;Android.App.AppSearch.AppSearchBlobHandle&gt; handles, Java.Util.Concurrent.IExecutor executor, Java.Util.Functions.IConsumer callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenBlobForRead(class System.Collections.Generic.ICollection`1&lt;class Android.App.AppSearch.AppSearchBlobHandle&gt; handles, class Java.Util.Concurrent.IExecutor executor, class Java.Util.Functions.IConsumer callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AppSearch.AppSearchSession.OpenBlobForRead(System.Collections.Generic.ICollection{Android.App.AppSearch.AppSearchBlobHandle},Java.Util.Concurrent.IExecutor,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="member this.OpenBlobForRead : System.Collections.Generic.ICollection&lt;Android.App.AppSearch.AppSearchBlobHandle&gt; * Java.Util.Concurrent.IExecutor * Java.Util.Functions.IConsumer -&gt; unit" Usage="appSearchSession.OpenBlobForRead (handles, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[Android.Runtime.Register("openBlobForRead", "(Ljava/util/Set;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "", ApiSince=36)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("openBlobForRead", "(Ljava/util/Set;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "", ApiSince=36)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android36.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android36.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handles" Type="System.Collections.Generic.ICollection&lt;Android.App.AppSearch.AppSearchBlobHandle&gt;" Index="0" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" Index="1" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="callback" Type="Java.Util.Functions.IConsumer" Index="2" FrameworkAlternate="net-android-36.0" />
      </Parameters>
      <Docs>
        <param name="handles">The <c>AppSearchBlobHandle</c>s that identifies the blobs.</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive the <c>OpenBlobForReadResponse</c>.</param>
        <summary>Opens a batch of AppSearch Blobs for reading.</summary>
        <remarks>
          <para>Opens a batch of AppSearch Blobs for reading.</para>
          <para>Only blobs committed via <c>#commitBlob</c> are available for reading.</para>
          <para>The returned <c>OpenBlobForReadResponse</c> must be closed after use to
            avoid resource leaks. Failing to close it will result in system file descriptor exhaustion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/appsearch/AppSearchSession#openBlobForRead(java.util.Set%3Candroid.app.appsearch.AppSearchBlobHandle%3E,%20java.util.concurrent.Executor,%20java.util.function.Consumer%3Candroid.app.appsearch.AppSearchResult%3Candroid.app.appsearch.OpenBlobForReadResponse%3E%3E)" title="Reference documentation">Java documentation for <code>android.app.appsearch.AppSearchSession.openBlobForRead(java.util.Set&lt;android.app.appsearch.AppSearchBlobHandle&gt;, java.util.concurrent.Executor, java.util.function.Consumer&lt;android.app.appsearch.AppSearchResult&lt;android.app.appsearch.OpenBlobForReadResponse&gt;&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenBlobForWrite">
      <MemberSignature Language="C#" Value="public void OpenBlobForWrite (System.Collections.Generic.ICollection&lt;Android.App.AppSearch.AppSearchBlobHandle&gt; handles, Java.Util.Concurrent.IExecutor executor, Java.Util.Functions.IConsumer callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenBlobForWrite(class System.Collections.Generic.ICollection`1&lt;class Android.App.AppSearch.AppSearchBlobHandle&gt; handles, class Java.Util.Concurrent.IExecutor executor, class Java.Util.Functions.IConsumer callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AppSearch.AppSearchSession.OpenBlobForWrite(System.Collections.Generic.ICollection{Android.App.AppSearch.AppSearchBlobHandle},Java.Util.Concurrent.IExecutor,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="member this.OpenBlobForWrite : System.Collections.Generic.ICollection&lt;Android.App.AppSearch.AppSearchBlobHandle&gt; * Java.Util.Concurrent.IExecutor * Java.Util.Functions.IConsumer -&gt; unit" Usage="appSearchSession.OpenBlobForWrite (handles, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[Android.Runtime.Register("openBlobForWrite", "(Ljava/util/Set;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "", ApiSince=36)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("openBlobForWrite", "(Ljava/util/Set;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "", ApiSince=36)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android36.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android36.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handles" Type="System.Collections.Generic.ICollection&lt;Android.App.AppSearch.AppSearchBlobHandle&gt;" Index="0" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" Index="1" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="callback" Type="Java.Util.Functions.IConsumer" Index="2" FrameworkAlternate="net-android-36.0" />
      </Parameters>
      <Docs>
        <param name="handles">The <c>AppSearchBlobHandle</c>s that identifies the blobs.</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive the <c>OpenBlobForWriteResponse</c>.</param>
        <summary>Opens a batch of AppSearch Blobs for writing.</summary>
        <remarks>
          <para>Opens a batch of AppSearch Blobs for writing.</para>
          <para>A "blob" is a large binary object. It is used to store a significant amount of data that
            is not searchable, such as images, videos, audio files, or other binary data. Unlike other
            fields in AppSearch, blobs are stored as blob files on disk rather than in memory, and use
            <c>android.os.ParcelFileDescriptor</c> to read and write. This allows for efficient handling
            of large, non-searchable content.</para>
          <para>Once done writing, call <c>#commitBlob</c> to commit blob files.</para>
          <para>This call will create a empty blob file for each given <c>AppSearchBlobHandle</c>, and a
            <c>android.os.ParcelFileDescriptor</c> of that blob file will be returned in the <c>OpenBlobForWriteResponse</c>.</para>
          <para>If the blob file is already stored in AppSearch and committed. A failed <c>AppSearchResult</c> with error code <c>AppSearchResult#RESULT_ALREADY_EXISTS</c> will be
            associated with the <c>AppSearchBlobHandle</c>.</para>
          <para>If the blob file is already stored in AppSearch but not committed. A <c>android.os.ParcelFileDescriptor</c> of that blob file will be returned for continue writing.</para>
          <para>For given duplicate <c>AppSearchBlobHandle</c>, the same <c>android.os.ParcelFileDescriptor</c> pointing to the same blob file will be returned.</para>
          <para>Pending blob files won't be lost or auto-commit if <c>AppSearchSession</c> closed.
            Pending blob files will be stored in disk rather than memory. You can re-open <c>AppSearchSession</c> and re-write the pending blob files.</para>
          <para>A committed blob file will be considered as an orphan if no <c>GenericDocument</c>
            references it. Uncommitted pending blob files and orphan blobs files will be cleaned up if
            they has been created for an extended period (default is 1 week).</para>
          <para>The returned <c>OpenBlobForWriteResponse</c> must be closed after use to
            avoid resource leaks. Failing to close it will result in system file descriptor exhaustion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/appsearch/AppSearchSession#openBlobForWrite(java.util.Set%3Candroid.app.appsearch.AppSearchBlobHandle%3E,%20java.util.concurrent.Executor,%20java.util.function.Consumer%3Candroid.app.appsearch.AppSearchResult%3Candroid.app.appsearch.OpenBlobForWriteResponse%3E%3E)" title="Reference documentation">Java documentation for <code>android.app.appsearch.AppSearchSession.openBlobForWrite(java.util.Set&lt;android.app.appsearch.AppSearchBlobHandle&gt;, java.util.concurrent.Executor, java.util.function.Consumer&lt;android.app.appsearch.AppSearchResult&lt;android.app.appsearch.OpenBlobForWriteResponse&gt;&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public void Put (Android.App.AppSearch.PutDocumentsRequest request, Java.Util.Concurrent.IExecutor executor, Android.App.AppSearch.IBatchResultCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Put(class Android.App.AppSearch.PutDocumentsRequest request, class Java.Util.Concurrent.IExecutor executor, class Android.App.AppSearch.IBatchResultCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AppSearch.AppSearchSession.Put(Android.App.AppSearch.PutDocumentsRequest,Java.Util.Concurrent.IExecutor,Android.App.AppSearch.IBatchResultCallback)" />
      <MemberSignature Language="F#" Value="member this.Put : Android.App.AppSearch.PutDocumentsRequest * Java.Util.Concurrent.IExecutor * Android.App.AppSearch.IBatchResultCallback -&gt; unit" Usage="appSearchSession.Put (request, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("put", "(Landroid/app/appsearch/PutDocumentsRequest;Ljava/util/concurrent/Executor;Landroid/app/appsearch/BatchResultCallback;)V", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("put", "(Landroid/app/appsearch/PutDocumentsRequest;Ljava/util/concurrent/Executor;Landroid/app/appsearch/BatchResultCallback;)V", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.App.AppSearch.PutDocumentsRequest" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.App.AppSearch.IBatchResultCallback" />
      </Parameters>
      <Docs>
        <param name="request">containing documents to be indexed.</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive pending result of performing this operation. The keys of
                the returned <c>AppSearchBatchResult</c> are the IDs of the input documents. The values
                are either <c>null</c> if the corresponding document was successfully indexed, or a
                failed <c>AppSearchResult</c> otherwise. If an unexpected internal error occurs in the
                AppSearch service, <c>BatchResultCallback#onSystemError</c> will be invoked with a
                <c>Throwable</c>.</param>
        <summary>Indexes documents into the <c>AppSearchSession</c> database.</summary>
        <remarks>
          <para>Indexes documents into the <c>AppSearchSession</c> database.</para>
          <para>Each <c>GenericDocument</c> object must have a <c>schemaType</c> field set to an <c>AppSearchSchema</c> type that has been previously registered by calling the <c>#setSchema</c>
            method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/appsearch/AppSearchSession#put(android.app.appsearch.PutDocumentsRequest,%20java.util.concurrent.Executor,%20android.app.appsearch.BatchResultCallback%3Cjava.lang.String,%20java.lang.Void%3E)" title="Reference documentation">Java documentation for <code>android.app.appsearch.AppSearchSession.put(android.app.appsearch.PutDocumentsRequest, java.util.concurrent.Executor, android.app.appsearch.BatchResultCallback&lt;java.lang.String, java.lang.Void&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (Android.App.AppSearch.RemoveByDocumentIdRequest request, Java.Util.Concurrent.IExecutor executor, Android.App.AppSearch.IBatchResultCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class Android.App.AppSearch.RemoveByDocumentIdRequest request, class Java.Util.Concurrent.IExecutor executor, class Android.App.AppSearch.IBatchResultCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AppSearch.AppSearchSession.Remove(Android.App.AppSearch.RemoveByDocumentIdRequest,Java.Util.Concurrent.IExecutor,Android.App.AppSearch.IBatchResultCallback)" />
      <MemberSignature Language="F#" Value="member this.Remove : Android.App.AppSearch.RemoveByDocumentIdRequest * Java.Util.Concurrent.IExecutor * Android.App.AppSearch.IBatchResultCallback -&gt; unit" Usage="appSearchSession.Remove (request, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("remove", "(Landroid/app/appsearch/RemoveByDocumentIdRequest;Ljava/util/concurrent/Executor;Landroid/app/appsearch/BatchResultCallback;)V", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("remove", "(Landroid/app/appsearch/RemoveByDocumentIdRequest;Ljava/util/concurrent/Executor;Landroid/app/appsearch/BatchResultCallback;)V", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.App.AppSearch.RemoveByDocumentIdRequest" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.App.AppSearch.IBatchResultCallback" />
      </Parameters>
      <Docs>
        <param name="request">
          <c>RemoveByDocumentIdRequest</c> with IDs in a namespace to remove from the
                index.</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive the pending result of performing this operation. The keys
                of the returned <c>AppSearchBatchResult</c> represent the input IDs from the <c>RemoveByDocumentIdRequest</c> object. The values are either <c>null</c> on success, or a
                failed <c>AppSearchResult</c> otherwise. IDs that are not found will return a failed
                <c>AppSearchResult</c> with a result code of <c>AppSearchResult#RESULT_NOT_FOUND</c>.
                If an unexpected internal error occurs in the AppSearch service, <c>BatchResultCallback#onSystemError</c> will be invoked with a <c>Throwable</c>..</param>
        <summary>Removes <c>GenericDocument</c> objects by document IDs in a namespace from the <c>AppSearchSession</c> database.</summary>
        <remarks>
          <para>Removes <c>GenericDocument</c> objects by document IDs in a namespace from the <c>AppSearchSession</c> database.</para>
          <para>Removed documents will no longer be surfaced by <c>#search</c> or <c>#getByDocumentId</c> calls.</para>
          <para>Once the database crosses the document count or byte usage threshold, removed documents
            will be deleted from disk.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/appsearch/AppSearchSession#remove(android.app.appsearch.RemoveByDocumentIdRequest,%20java.util.concurrent.Executor,%20android.app.appsearch.BatchResultCallback%3Cjava.lang.String,%20java.lang.Void%3E)" title="Reference documentation">Java documentation for <code>android.app.appsearch.AppSearchSession.remove(android.app.appsearch.RemoveByDocumentIdRequest, java.util.concurrent.Executor, android.app.appsearch.BatchResultCallback&lt;java.lang.String, java.lang.Void&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string queryExpression, Android.App.AppSearch.SearchSpec searchSpec, Java.Util.Concurrent.IExecutor executor, Java.Util.Functions.IConsumer callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string queryExpression, class Android.App.AppSearch.SearchSpec searchSpec, class Java.Util.Concurrent.IExecutor executor, class Java.Util.Functions.IConsumer callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AppSearch.AppSearchSession.Remove(System.String,Android.App.AppSearch.SearchSpec,Java.Util.Concurrent.IExecutor,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="member this.Remove : string * Android.App.AppSearch.SearchSpec * Java.Util.Concurrent.IExecutor * Java.Util.Functions.IConsumer -&gt; unit" Usage="appSearchSession.Remove (queryExpression, searchSpec, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("remove", "(Ljava/lang/String;Landroid/app/appsearch/SearchSpec;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("remove", "(Ljava/lang/String;Landroid/app/appsearch/SearchSpec;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.String" />
        <Parameter Name="searchSpec" Type="Android.App.AppSearch.SearchSpec" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="queryExpression">Query String to search.</param>
        <param name="searchSpec">Spec containing schemaTypes, namespaces and query expression indicates how
                document will be removed. All specific about how to scoring, ordering, snippeting and
                resulting will be ignored.</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive errors resulting from removing the documents. If the
                operation succeeds, the callback will be invoked with <c>null</c>.</param>
        <summary>Removes <c>GenericDocument</c>s from the index by Query.</summary>
        <remarks>
          <para>Removes <c>GenericDocument</c>s from the index by Query. Documents will be removed if they
            match the <c>queryExpression</c> in given namespaces and schemaTypes which is set via <c>SearchSpec.Builder#addFilterNamespaces</c> and <c>SearchSpec.Builder#addFilterSchemas</c>.</para>
          <para>An empty <c>queryExpression</c> matches all documents.</para>
          <para>An empty set of namespaces or schemaTypes matches all namespaces or schemaTypes in the
            current database.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/appsearch/AppSearchSession#remove(java.lang.String,%20android.app.appsearch.SearchSpec,%20java.util.concurrent.Executor,%20java.util.function.Consumer%3Candroid.app.appsearch.AppSearchResult%3Cjava.lang.Void%3E%3E)" title="Reference documentation">Java documentation for <code>android.app.appsearch.AppSearchSession.remove(java.lang.String, android.app.appsearch.SearchSpec, java.util.concurrent.Executor, java.util.function.Consumer&lt;android.app.appsearch.AppSearchResult&lt;java.lang.Void&gt;&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveBlob">
      <MemberSignature Language="C#" Value="public void RemoveBlob (System.Collections.Generic.ICollection&lt;Android.App.AppSearch.AppSearchBlobHandle&gt; handles, Java.Util.Concurrent.IExecutor executor, Java.Util.Functions.IConsumer callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveBlob(class System.Collections.Generic.ICollection`1&lt;class Android.App.AppSearch.AppSearchBlobHandle&gt; handles, class Java.Util.Concurrent.IExecutor executor, class Java.Util.Functions.IConsumer callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AppSearch.AppSearchSession.RemoveBlob(System.Collections.Generic.ICollection{Android.App.AppSearch.AppSearchBlobHandle},Java.Util.Concurrent.IExecutor,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="member this.RemoveBlob : System.Collections.Generic.ICollection&lt;Android.App.AppSearch.AppSearchBlobHandle&gt; * Java.Util.Concurrent.IExecutor * Java.Util.Functions.IConsumer -&gt; unit" Usage="appSearchSession.RemoveBlob (handles, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[Android.Runtime.Register("removeBlob", "(Ljava/util/Set;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "", ApiSince=36)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeBlob", "(Ljava/util/Set;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "", ApiSince=36)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android36.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android36.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handles" Type="System.Collections.Generic.ICollection&lt;Android.App.AppSearch.AppSearchBlobHandle&gt;" Index="0" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" Index="1" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="callback" Type="Java.Util.Functions.IConsumer" Index="2" FrameworkAlternate="net-android-36.0" />
      </Parameters>
      <Docs>
        <param name="handles">The <c>AppSearchBlobHandle</c>s that identifies the blobs.</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive the <c>CommitBlobResponse</c>.</param>
        <summary>Removes the blob data from AppSearch.</summary>
        <remarks>
          <para>Removes the blob data from AppSearch.</para>
          <para>After this call, the blob data is removed immediately and cannot be recovered. It will not
            accessible via <c>#openBlobForRead</c>. <c>#openBlobForWrite</c> could reopen and rewrite
            it.</para>
          <para>This API can be used to remove pending blob data and committed blob data.</para>
          <para>Removing a committed blob data that is still referenced by documents will
            leave those documents with no readable blob content. It is highly recommended to let
            AppSearch control the blob data's life cycle. AppSearch automatically recycles orphaned and
            pending blob data. The default time to recycle pending and orphan blob file is 1 week. A blob
            file will be considered as an orphan if no <c>GenericDocument</c> references it. If you want
            to remove a committed blob data, you should remove the reference documents first.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/appsearch/AppSearchSession#removeBlob(java.util.Set%3Candroid.app.appsearch.AppSearchBlobHandle%3E,%20java.util.concurrent.Executor,%20java.util.function.Consumer%3Candroid.app.appsearch.AppSearchResult%3Candroid.app.appsearch.RemoveBlobResponse%3E%3E)" title="Reference documentation">Java documentation for <code>android.app.appsearch.AppSearchSession.removeBlob(java.util.Set&lt;android.app.appsearch.AppSearchBlobHandle&gt;, java.util.concurrent.Executor, java.util.function.Consumer&lt;android.app.appsearch.AppSearchResult&lt;android.app.appsearch.RemoveBlobResponse&gt;&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportUsage">
      <MemberSignature Language="C#" Value="public void ReportUsage (Android.App.AppSearch.ReportUsageRequest request, Java.Util.Concurrent.IExecutor executor, Java.Util.Functions.IConsumer callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReportUsage(class Android.App.AppSearch.ReportUsageRequest request, class Java.Util.Concurrent.IExecutor executor, class Java.Util.Functions.IConsumer callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AppSearch.AppSearchSession.ReportUsage(Android.App.AppSearch.ReportUsageRequest,Java.Util.Concurrent.IExecutor,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="member this.ReportUsage : Android.App.AppSearch.ReportUsageRequest * Java.Util.Concurrent.IExecutor * Java.Util.Functions.IConsumer -&gt; unit" Usage="appSearchSession.ReportUsage (request, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reportUsage", "(Landroid/app/appsearch/ReportUsageRequest;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reportUsage", "(Landroid/app/appsearch/ReportUsageRequest;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.App.AppSearch.ReportUsageRequest" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="request">The usage reporting request.</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive errors. If the operation succeeds, the callback will be
                invoked with <c>null</c>.</param>
        <summary>Reports usage of a particular document by namespace and ID.</summary>
        <remarks>
          <para>Reports usage of a particular document by namespace and ID.</para>
          <para>A usage report represents an event in which a user interacted with or viewed a document.</para>
          <para>For each call to <c>#reportUsage</c>, AppSearch updates usage count and usage recency
            metrics for that particular document. These metrics are used for ordering <c>#search</c>
            results by the <c>SearchSpec#RANKING_STRATEGY_USAGE_COUNT</c> and <c>SearchSpec#RANKING_STRATEGY_USAGE_LAST_USED_TIMESTAMP</c> ranking strategies.</para>
          <para>Reporting usage of a document is optional.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/appsearch/AppSearchSession#reportUsage(android.app.appsearch.ReportUsageRequest,%20java.util.concurrent.Executor,%20java.util.function.Consumer%3Candroid.app.appsearch.AppSearchResult%3Cjava.lang.Void%3E%3E)" title="Reference documentation">Java documentation for <code>android.app.appsearch.AppSearchSession.reportUsage(android.app.appsearch.ReportUsageRequest, java.util.concurrent.Executor, java.util.function.Consumer&lt;android.app.appsearch.AppSearchResult&lt;java.lang.Void&gt;&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Search">
      <MemberSignature Language="C#" Value="public Android.App.AppSearch.SearchResults Search (string queryExpression, Android.App.AppSearch.SearchSpec searchSpec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.AppSearch.SearchResults Search(string queryExpression, class Android.App.AppSearch.SearchSpec searchSpec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AppSearch.AppSearchSession.Search(System.String,Android.App.AppSearch.SearchSpec)" />
      <MemberSignature Language="F#" Value="member this.Search : string * Android.App.AppSearch.SearchSpec -&gt; Android.App.AppSearch.SearchResults" Usage="appSearchSession.Search (queryExpression, searchSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("search", "(Ljava/lang/String;Landroid/app/appsearch/SearchSpec;)Landroid/app/appsearch/SearchResults;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("search", "(Ljava/lang/String;Landroid/app/appsearch/SearchSpec;)Landroid/app/appsearch/SearchResults;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.AppSearch.SearchResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.String" />
        <Parameter Name="searchSpec" Type="Android.App.AppSearch.SearchSpec" />
      </Parameters>
      <Docs>
        <param name="queryExpression">query string to search.</param>
        <param name="searchSpec">spec for setting document filters, adding projection, setting term match
                type, etc.</param>
        <summary>Retrieves documents from the open <c>AppSearchSession</c> that match a given query string
            and type of search provided.</summary>
        <returns>a <c>SearchResults</c> object for retrieved matched documents.</returns>
        <remarks>
          <para>Retrieves documents from the open <c>AppSearchSession</c> that match a given query string
            and type of search provided.</para>
          <para>Query strings can be empty, contain one term with no operators, or contain multiple terms
            and operators.</para>
          <para>For query strings that are empty, all documents that match the <c>SearchSpec</c> will be
            returned.</para>
          <para>For query strings with a single term and no operators, documents that match the provided
            query string and <c>SearchSpec</c> will be returned.</para>
          <para>The following operators are supported:
            
            &lt;ul&gt;
              &lt;li&gt;AND (implicit)</para>
          <para>AND is an operator that matches documents that contain <i>all</i> provided terms.</para>
          <para>&lt;b&gt;NOTE:&lt;/b&gt; A space between terms is treated as an "AND" operator. Explicitly
                  including "AND" in a query string will treat "AND" as a term, returning documents that
                  also contain "AND".</para>
          <para>Example: "apple AND banana" matches documents that contain the terms "apple", "and",
                  "banana".</para>
          <para>Example: "apple banana" matches documents that contain both "apple" and "banana".</para>
          <para>Example: "apple banana cherry" matches documents that contain "apple", "banana", and
                  "cherry".
              &lt;li&gt;OR</para>
          <para>OR is an operator that matches documents that contain <i>any</i> provided term.</para>
          <para>Example: "apple OR banana" matches documents that contain either "apple" or
                  "banana".</para>
          <para>Example: "apple OR banana OR cherry" matches documents that contain any of "apple",
                  "banana", or "cherry".
              &lt;li&gt;Exclusion (-)</para>
          <para>Exclusion (-) is an operator that matches documents that <i>do not</i> contain the
                  provided term.</para>
          <para>Example: "-apple" matches documents that do not contain "apple".
              &lt;li&gt;Grouped Terms</para>
          <para>For queries that require multiple operators and terms, terms can be grouped into
                  subqueries. Subqueries are contained within an open "(" and close ")" parenthesis.</para>
          <para>Example: "(donut OR bagel) (coffee OR tea)" matches documents that contain either
                  "donut" or "bagel" and either "coffee" or "tea".
              &lt;li&gt;Property Restricts</para>
          <para>For queries that require a term to match a specific <c>AppSearchSchema</c> property
                  of a document, a ":" must be included between the property name and the term.</para>
          <para>Example: "subject:important" matches documents that contain the term "important" in
                  the "subject" property.
            &lt;/ul&gt;</para>
          <para>The above description covers the query operators that are supported on all versions of
            AppSearch. Additional operators and their required features are described below.</para>
          <para>LIST_FILTER_QUERY_LANGUAGE: This feature covers the expansion of the query language to
            conform to the definition of the list filters language (https://aip.dev/160). This includes:
            
            &lt;ul&gt;
              &lt;li&gt;addition of explicit 'AND' and 'NOT' operators
              &lt;li&gt;property restricts are allowed with groupings (ex. "prop:(a OR b)")
              &lt;li&gt;addition of custom functions to control matching
            &lt;/ul&gt;</para>
          <para>The newly added custom functions covered by this feature are:
            
            &lt;ul&gt;
              &lt;li&gt;createList(String...)
              &lt;li&gt;search(String, <c>List&lt;String&gt;</c>)
              &lt;li&gt;propertyDefined(String)
            &lt;/ul&gt;</para>
          <para>createList takes a variable number of strings and returns a list of strings. It is for use
            with search.</para>
          <para>search takes a query string that will be parsed according to the supported query language
            and an optional list of strings that specify the properties to be restricted to. This exists
            as a convenience for multiple property restricts. So, for example, the query `(subject:foo OR
            body:foo) (subject:bar OR body:bar)` could be rewritten as `search("foo bar",
            createList("subject", "body"))`.</para>
          <para>propertyDefined takes a string specifying the property of interest and matches all
            documents of any type that defines the specified property (ex.
            `propertyDefined("sender.name")`). Note that propertyDefined will match so long as the
            document's type defines the specified property. Unlike the "hasProperty" function below, this
            function does NOT require that the document actually hold any values for this property.</para>
          <para>NUMERIC_SEARCH: This feature covers numeric search expressions. In the query language, the
            values of properties that have <c>AppSearchSchema.LongPropertyConfig#INDEXING_TYPE_RANGE</c>
            set can be matched with a numeric search expression (the property, a supported comparator and
            an integer value). Supported comparators are &lt;, &lt;=, ==, &gt;= and &gt;.</para>
          <para>Ex. `price &lt; 10` will match all documents that has a numeric value in its price property
            that is less than 10.</para>
          <para>VERBATIM_SEARCH: This feature covers the verbatim string operator (quotation marks).</para>
          <para>Ex. `"foo/bar" OR baz` will ensure that 'foo/bar' is treated as a single 'verbatim' token.</para>
          <para>LIST_FILTER_HAS_PROPERTY_FUNCTION: This feature covers the "hasProperty" function in query
            expressions, which takes a string specifying the property of interest and matches all
            documents that hold values for this property. Not to be confused with the "propertyDefined"
            function, which checks whether a document's schema has defined the property, instead of
            whether a document itself has this property.</para>
          <para>Ex. `foo hasProperty("sender.name")` will return all documents that have the term "foo"
            AND have values in the property "sender.name". Consider two documents, documentA and
            documentB, of the same schema with an optional property "sender.name". If documentA sets
            "foo" in this property but documentB does not, then `hasProperty("sender.name")` will only
            match documentA. However, `propertyDefined("sender.name")` will match both documentA and
            documentB, regardless of whether a value is actually set.</para>
          <para>LIST_FILTER_MATCH_SCORE_EXPRESSION_FUNCTION: This feature covers the
            "matchScoreExpression" function in query expressions.</para>
          <para>Usage: matchScoreExpression({score_expression}, {low}, {high})
            
            &lt;ul&gt;
              &lt;li&gt;matchScoreExpression matches all documents with scores falling within the specified
                  range. These scores are calculated using the provided score expression, which adheres
                  to the syntax defined in <c>SearchSpec.Builder#setRankingStrategy(String)</c>.
              &lt;li&gt;"score_expression" is a string value that specifies the score expression.
              &lt;li&gt;"low" and "high" are floating point numbers that specify the score range. The "high"
                  parameter is optional; if not provided, it defaults to positive infinity.
            &lt;/ul&gt;</para>
          <para>Ex. `matchScoreExpression("this.documentScore()", 3, 4)` will return all documents that
            have document scores from 3 to 4.</para>
          <para>SCHEMA_EMBEDDING_PROPERTY_CONFIG: This feature covers the "semanticSearch" and
            "getEmbeddingParameter" functions in query expressions, which are used for semantic search.</para>
          <para>Usage: semanticSearch(getEmbeddingParameter({embedding_index}), {low}, {high}, {metric})
            
            &lt;ul&gt;
              &lt;li&gt;semanticSearch matches all documents that have at least one embedding vector with a
                  matching model signature (see <c>EmbeddingVector#getModelSignature()</c>) and a
                  similarity score within the range specified based on the provided metric.
              &lt;li&gt;getEmbeddingParameter({embedding_index}) retrieves the embedding search passed in
                  <c>SearchSpec.Builder#addEmbeddingParameters</c> based on the index specified, which
                  starts from 0.
              &lt;li&gt;"low" and "high" are floating point numbers that specify the similarity score range. If
                  omitted, they default to negative and positive infinity, respectively.
              &lt;li&gt;"metric" is a string value that specifies how embedding similarities should be
                  calculated. If omitted, it defaults to the metric specified in <c>SearchSpec.Builder#setDefaultEmbeddingSearchMetricType(int)</c>. Possible values:
                  &lt;ul&gt;
                    &lt;li&gt;"COSINE"
                    &lt;li&gt;"DOT_PRODUCT"
                    &lt;li&gt;"EUCLIDEAN"
                  &lt;/ul&gt;
            &lt;/ul&gt;</para>
          <para>Examples:
            
            &lt;ul&gt;
              &lt;li&gt;Basic: semanticSearch(getEmbeddingParameter(0), 0.5, 1, "COSINE")
              &lt;li&gt;With a property restriction: property1:semanticSearch(getEmbeddingParameter(0), 0.5, 1)
              &lt;li&gt;Hybrid: foo OR semanticSearch(getEmbeddingParameter(0), 0.5, 1)
              &lt;li&gt;Complex: (foo OR semanticSearch(getEmbeddingParameter(0), 0.5, 1)) AND bar
            &lt;/ul&gt;</para>
          <para>SEARCH_SPEC_SEARCH_STRING_PARAMETERS: This feature covers the "getSearchStringParameter"
            function in query expressions, which substitutes the string provided at the same index in
            <c>SearchSpec.Builder#addSearchStringParameters</c> into the query as plain text. This
            string is then segmented, normalized and stripped of punctuation-only segments. The remaining
            tokens are then AND'd together. This function is useful for callers who wish to provide user
            input, but want to ensure that that user input does not invoke any query operators.</para>
          <para>Usage: getSearchStringParameter({search_parameter_strings_index})</para>
          <para>Ex. `foo OR getSearchStringParameter(0)` with <c>SearchSpec#getSearchStringParameters</c>
            returning {"bar OR baz."}. The string "bar OR baz." will be segmented into "bar", "OR",
            "baz", ".". Punctuation is removed and the segments are normalized to "bar", "or", "baz".
            This query will be equivalent to `foo OR (bar AND or AND baz)`.</para>
          <para>Additional search specifications, such as filtering by <c>AppSearchSchema</c> type or
            adding projection, can be set by calling the corresponding <c>SearchSpec.Builder</c> setter.</para>
          <para>This method is lightweight. The heavy work will be done in <c>SearchResults#getNextPage</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/appsearch/AppSearchSession#search(java.lang.String,%20android.app.appsearch.SearchSpec)" title="Reference documentation">Java documentation for <code>android.app.appsearch.AppSearchSession.search(java.lang.String, android.app.appsearch.SearchSpec)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchSuggestion">
      <MemberSignature Language="C#" Value="public void SearchSuggestion (string suggestionQueryExpression, Android.App.AppSearch.SearchSuggestionSpec searchSuggestionSpec, Java.Util.Concurrent.IExecutor executor, Java.Util.Functions.IConsumer callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SearchSuggestion(string suggestionQueryExpression, class Android.App.AppSearch.SearchSuggestionSpec searchSuggestionSpec, class Java.Util.Concurrent.IExecutor executor, class Java.Util.Functions.IConsumer callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AppSearch.AppSearchSession.SearchSuggestion(System.String,Android.App.AppSearch.SearchSuggestionSpec,Java.Util.Concurrent.IExecutor,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="member this.SearchSuggestion : string * Android.App.AppSearch.SearchSuggestionSpec * Java.Util.Concurrent.IExecutor * Java.Util.Functions.IConsumer -&gt; unit" Usage="appSearchSession.SearchSuggestion (suggestionQueryExpression, searchSuggestionSpec, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("searchSuggestion", "(Ljava/lang/String;Landroid/app/appsearch/SearchSuggestionSpec;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("searchSuggestion", "(Ljava/lang/String;Landroid/app/appsearch/SearchSuggestionSpec;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="suggestionQueryExpression" Type="System.String" />
        <Parameter Name="searchSuggestionSpec" Type="Android.App.AppSearch.SearchSuggestionSpec" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="suggestionQueryExpression">the non empty query string to search suggestions</param>
        <param name="searchSuggestionSpec">spec for setting document filters</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive the pending result of performing this operation, which is
                a List of <c>SearchSuggestionResult</c> on success. The returned suggestion Strings are
                ordered by the number of <c>SearchResult</c> you could get by using that suggestion in
                <c>#search</c>.</param>
        <summary>Retrieves suggested Strings that could be used as <c>queryExpression</c> in <c>#search(String, SearchSpec)</c> API.</summary>
        <remarks>
          <para>Retrieves suggested Strings that could be used as <c>queryExpression</c> in <c>#search(String, SearchSpec)</c> API.</para>
          <para>The <c>suggestionQueryExpression</c> can contain one term with no operators, or contain
            multiple terms and operators. Operators will be considered as a normal term. Please see the
            operator examples below. The <c>suggestionQueryExpression</c> must end with a valid term,
            the suggestions are generated based on the last term. If the input <c>suggestionQueryExpression</c> doesn't have a valid token, AppSearch will return an empty result
            list. Please see the invalid examples below.</para>
          <para>Example: if there are following documents with content stored in AppSearch.
            
            &lt;ul&gt;
              &lt;li&gt;document1: "term1"
              &lt;li&gt;document2: "term1 term2"
              &lt;li&gt;document3: "term1 term2 term3"
              &lt;li&gt;document4: "org"
            &lt;/ul&gt;</para>
          <para>Search suggestions with the single term <c>suggestionQueryExpression</c> "t", the
            suggested results are:
            
            &lt;ul&gt;
              &lt;li&gt;"term1" - Use it to be queryExpression in <c>#search</c> could get 3 <c>SearchResult</c>s, which contains document 1, 2 and 3.
              &lt;li&gt;"term2" - Use it to be queryExpression in <c>#search</c> could get 2 <c>SearchResult</c>s, which contains document 2 and 3.
              &lt;li&gt;"term3" - Use it to be queryExpression in <c>#search</c> could get 1 <c>SearchResult</c>, which contains document 3.
            &lt;/ul&gt;</para>
          <para>Search suggestions with the multiple term <c>suggestionQueryExpression</c> "org t", the
            suggested result will be "org term1" - The last token is completed by the suggested String.</para>
          <para>Operators in <c>#search</c> are supported.</para>
          <para>&lt;b&gt;NOTE:&lt;/b&gt; Exclusion and Grouped Terms in the last term is not supported.</para>
          <para>example: "apple -f": This Api will throw an <c>android.app.appsearch.exceptions.AppSearchException</c> with <c>AppSearchResult#RESULT_INVALID_ARGUMENT</c>.</para>
          <para>example: "apple (f)": This Api will return an empty results.</para>
          <para>Invalid example: All these input <c>suggestionQueryExpression</c> don't have a valid last
            token, AppSearch will return an empty result list.
            
            &lt;ul&gt;
              &lt;li&gt;"" - Empty <c>suggestionQueryExpression</c>.
              &lt;li&gt;"(f)" - Ending in a closed brackets.
              &lt;li&gt;"f:" - Ending in an operator.
              &lt;li&gt;"f " - Ending in trailing space.
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/appsearch/AppSearchSession#searchSuggestion(java.lang.String,%20android.app.appsearch.SearchSuggestionSpec,%20java.util.concurrent.Executor,%20java.util.function.Consumer%3Candroid.app.appsearch.AppSearchResult%3Cjava.util.List%3Candroid.app.appsearch.SearchSuggestionResult%3E%3E%3E)" title="Reference documentation">Java documentation for <code>android.app.appsearch.AppSearchSession.searchSuggestion(java.lang.String, android.app.appsearch.SearchSuggestionSpec, java.util.concurrent.Executor, java.util.function.Consumer&lt;android.app.appsearch.AppSearchResult&lt;java.util.List&lt;android.app.appsearch.SearchSuggestionResult&gt;&gt;&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBlobVisibility">
      <MemberSignature Language="C#" Value="public void SetBlobVisibility (Android.App.AppSearch.SetBlobVisibilityRequest request, Java.Util.Concurrent.IExecutor executor, Java.Util.Functions.IConsumer callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBlobVisibility(class Android.App.AppSearch.SetBlobVisibilityRequest request, class Java.Util.Concurrent.IExecutor executor, class Java.Util.Functions.IConsumer callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AppSearch.AppSearchSession.SetBlobVisibility(Android.App.AppSearch.SetBlobVisibilityRequest,Java.Util.Concurrent.IExecutor,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="member this.SetBlobVisibility : Android.App.AppSearch.SetBlobVisibilityRequest * Java.Util.Concurrent.IExecutor * Java.Util.Functions.IConsumer -&gt; unit" Usage="appSearchSession.SetBlobVisibility (request, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[Android.Runtime.Register("setBlobVisibility", "(Landroid/app/appsearch/SetBlobVisibilityRequest;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "", ApiSince=36)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setBlobVisibility", "(Landroid/app/appsearch/SetBlobVisibilityRequest;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "", ApiSince=36)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android36.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android36.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.App.AppSearch.SetBlobVisibilityRequest" Index="0" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" Index="1" FrameworkAlternate="net-android-36.0" />
        <Parameter Name="callback" Type="Java.Util.Functions.IConsumer" Index="2" FrameworkAlternate="net-android-36.0" />
      </Parameters>
      <Docs>
        <param name="request">The request holds visibility settings for all blob namespaces</param>
        <param name="executor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive the pending result of performing this operation which
                resolves to <c>null</c> on success.</param>
        <summary>Sets the visibility configuration for all blob namespaces within an appsearch database.</summary>
        <remarks>
          <para>Sets the visibility configuration for all blob namespaces within an appsearch database.</para>
          <para>Blobs under the same namespace will share same visibility settings.</para>
          <para>The default setting is blobs will be only visible to the owner package and System. To
            configure other kinds of sharing, set <c>SchemaVisibilityConfig</c> via <c>SetBlobVisibilityRequest</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/appsearch/AppSearchSession#setBlobVisibility(android.app.appsearch.SetBlobVisibilityRequest,%20java.util.concurrent.Executor,%20java.util.function.Consumer%3Candroid.app.appsearch.AppSearchResult%3Cjava.lang.Void%3E%3E)" title="Reference documentation">Java documentation for <code>android.app.appsearch.AppSearchSession.setBlobVisibility(android.app.appsearch.SetBlobVisibilityRequest, java.util.concurrent.Executor, java.util.function.Consumer&lt;android.app.appsearch.AppSearchResult&lt;java.lang.Void&gt;&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSchema">
      <MemberSignature Language="C#" Value="public void SetSchema (Android.App.AppSearch.SetSchemaRequest request, Java.Util.Concurrent.IExecutor workExecutor, Java.Util.Concurrent.IExecutor callbackExecutor, Java.Util.Functions.IConsumer callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSchema(class Android.App.AppSearch.SetSchemaRequest request, class Java.Util.Concurrent.IExecutor workExecutor, class Java.Util.Concurrent.IExecutor callbackExecutor, class Java.Util.Functions.IConsumer callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AppSearch.AppSearchSession.SetSchema(Android.App.AppSearch.SetSchemaRequest,Java.Util.Concurrent.IExecutor,Java.Util.Concurrent.IExecutor,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="member this.SetSchema : Android.App.AppSearch.SetSchemaRequest * Java.Util.Concurrent.IExecutor * Java.Util.Concurrent.IExecutor * Java.Util.Functions.IConsumer -&gt; unit" Usage="appSearchSession.SetSchema (request, workExecutor, callbackExecutor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setSchema", "(Landroid/app/appsearch/SetSchemaRequest;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setSchema", "(Landroid/app/appsearch/SetSchemaRequest;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.App.AppSearch.SetSchemaRequest" />
        <Parameter Name="workExecutor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callbackExecutor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="request">the schema to set or update the AppSearch database to.</param>
        <param name="workExecutor">Executor on which to schedule heavy client-side background work such as
                transforming documents.</param>
        <param name="callbackExecutor">Executor on which to invoke the callback.</param>
        <param name="callback">Callback to receive the result of setting the schema.</param>
        <summary>Sets the schema that represents the organizational structure of data within the AppSearch
            database.</summary>
        <remarks>
          <para>Sets the schema that represents the organizational structure of data within the AppSearch
            database.</para>
          <para>Upon creating an <c>AppSearchSession</c>, <c>#setSchema</c> should be called. If the
            schema needs to be updated, or it has not been previously set, then the provided schema will
            be saved and persisted to disk. Otherwise, <c>#setSchema</c> is handled efficiently as a
            no-op call.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/appsearch/AppSearchSession#setSchema(android.app.appsearch.SetSchemaRequest,%20java.util.concurrent.Executor,%20java.util.concurrent.Executor,%20java.util.function.Consumer%3Candroid.app.appsearch.AppSearchResult%3Candroid.app.appsearch.SetSchemaResponse%3E%3E)" title="Reference documentation">Java documentation for <code>android.app.appsearch.AppSearchSession.setSchema(android.app.appsearch.SetSchemaRequest, java.util.concurrent.Executor, java.util.concurrent.Executor, java.util.function.Consumer&lt;android.app.appsearch.AppSearchResult&lt;android.app.appsearch.SetSchemaResponse&gt;&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.App.AppSearch.AppSearchSession.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.App.AppSearch.AppSearchSession.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.App.AppSearch.AppSearchSession.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.App.AppSearch.AppSearchSession.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
