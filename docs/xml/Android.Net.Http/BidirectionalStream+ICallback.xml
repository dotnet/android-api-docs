<Type Name="BidirectionalStream+ICallback" FullName="Android.Net.Http.BidirectionalStream+ICallback">
  <TypeSignature Language="C#" Value="public interface BidirectionalStream.ICallback : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class nested public interface auto ansi abstract beforefieldinit BidirectionalStream/ICallback implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Net.Http.BidirectionalStream.ICallback" />
  <TypeSignature Language="F#" Value="type BidirectionalStream.ICallback = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/net/http/BidirectionalStream$Callback", "", "Android.Net.Http.BidirectionalStream/ICallbackInvoker", ApiSince=34)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/net/http/BidirectionalStream$Callback", "", "Android.Net.Http.BidirectionalStream/ICallbackInvoker", ApiSince=34)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Callback interface used to receive callbacks from a <c>BidirectionalStream</c>.</summary>
    <remarks>
      <para>Callback interface used to receive callbacks from a <c>BidirectionalStream</c>.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/net/http/BidirectionalStream.Callback" title="Reference documentation">Java documentation for <code>android.net.http.BidirectionalStream.Callback</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="OnCanceled">
      <MemberSignature Language="C#" Value="public void OnCanceled (Android.Net.Http.BidirectionalStream stream, Android.Net.Http.UrlResponseInfo? info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCanceled(class Android.Net.Http.BidirectionalStream stream, class Android.Net.Http.UrlResponseInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Http.BidirectionalStream.ICallback.OnCanceled(Android.Net.Http.BidirectionalStream,Android.Net.Http.UrlResponseInfo)" />
      <MemberSignature Language="F#" Value="abstract member OnCanceled : Android.Net.Http.BidirectionalStream * Android.Net.Http.UrlResponseInfo -&gt; unit" Usage="iCallback.OnCanceled (stream, info)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCanceled", "(Landroid/net/http/BidirectionalStream;Landroid/net/http/UrlResponseInfo;)V", "GetOnCanceled_Landroid_net_http_BidirectionalStream_Landroid_net_http_UrlResponseInfo_Handler:Android.Net.Http.BidirectionalStream/ICallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCanceled", "(Landroid/net/http/BidirectionalStream;Landroid/net/http/UrlResponseInfo;)V", "GetOnCanceled_Landroid_net_http_BidirectionalStream_Landroid_net_http_UrlResponseInfo_Handler:Android.Net.Http.BidirectionalStream/ICallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="Android.Net.Http.BidirectionalStream" />
        <Parameter Name="info" Type="Android.Net.Http.UrlResponseInfo">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="stream">the stream that was canceled. &lt;strong&gt;This is not guaranteed to
                   be the same object as the one received by other callbacks, nor is it guaranteed
                   to be the one returned by <c>BidirectionalStream.Builder#build</c>.&lt;/strong&gt;
                   However, method calls on this object will have the same effects as calls on the
                   original <c>BidirectionalStream</c>.</param>
        <param name="info">the response information. May be <c>null</c> if no response was received.</param>
        <summary>Invoked if the stream was canceled via <c>BidirectionalStream#cancel</c>.</summary>
        <remarks>
          <para>Invoked if the stream was canceled via <c>BidirectionalStream#cancel</c>. Once invoked,
            no further <c>BidirectionalStream.Callback</c> methods will be invoked. Default
            implementation takes no action.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/http/BidirectionalStream.Callback#onCanceled(android.net.http.BidirectionalStream,%20android.net.http.UrlResponseInfo)" title="Reference documentation">Java documentation for <code>android.net.http.BidirectionalStream.Callback.onCanceled(android.net.http.BidirectionalStream, android.net.http.UrlResponseInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFailed">
      <MemberSignature Language="C#" Value="public void OnFailed (Android.Net.Http.BidirectionalStream stream, Android.Net.Http.UrlResponseInfo? info, Android.Net.Http.HttpException error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnFailed(class Android.Net.Http.BidirectionalStream stream, class Android.Net.Http.UrlResponseInfo info, class Android.Net.Http.HttpException error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Http.BidirectionalStream.ICallback.OnFailed(Android.Net.Http.BidirectionalStream,Android.Net.Http.UrlResponseInfo,Android.Net.Http.HttpException)" />
      <MemberSignature Language="F#" Value="abstract member OnFailed : Android.Net.Http.BidirectionalStream * Android.Net.Http.UrlResponseInfo * Android.Net.Http.HttpException -&gt; unit" Usage="iCallback.OnFailed (stream, info, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onFailed", "(Landroid/net/http/BidirectionalStream;Landroid/net/http/UrlResponseInfo;Landroid/net/http/HttpException;)V", "GetOnFailed_Landroid_net_http_BidirectionalStream_Landroid_net_http_UrlResponseInfo_Landroid_net_http_HttpException_Handler:Android.Net.Http.BidirectionalStream/ICallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onFailed", "(Landroid/net/http/BidirectionalStream;Landroid/net/http/UrlResponseInfo;Landroid/net/http/HttpException;)V", "GetOnFailed_Landroid_net_http_BidirectionalStream_Landroid_net_http_UrlResponseInfo_Landroid_net_http_HttpException_Handler:Android.Net.Http.BidirectionalStream/ICallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="Android.Net.Http.BidirectionalStream" />
        <Parameter Name="info" Type="Android.Net.Http.UrlResponseInfo">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="error" Type="Android.Net.Http.HttpException" />
      </Parameters>
      <Docs>
        <param name="stream">the stream which has failed. &lt;strong&gt;This is not guaranteed to
                   be the same object as the one received by other callbacks, nor is it guaranteed
                   to be the one returned by <c>BidirectionalStream.Builder#build</c>.&lt;/strong&gt;
                   However, method calls on this object will have the same effects as calls on the
                   original <c>BidirectionalStream</c>.</param>
        <param name="info">the response information. May be <c>null</c> if no response was received.</param>
        <param name="error">information about the failure</param>
        <summary>Invoked if the stream failed for any reason after <c>BidirectionalStream#start</c>.</summary>
        <remarks>
          <para>Invoked if the stream failed for any reason after <c>BidirectionalStream#start</c>.
            <see href="https://tools.ietf.org/html/rfc7540#section-7">HTTP/2 error codes</see> are
            mapped to <c>NetworkException#getErrorCode</c> codes. Once invoked,
            no further <c>BidirectionalStream.Callback</c> methods will be invoked.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/http/BidirectionalStream.Callback#onFailed(android.net.http.BidirectionalStream,%20android.net.http.UrlResponseInfo,%20android.net.http.HttpException)" title="Reference documentation">Java documentation for <code>android.net.http.BidirectionalStream.Callback.onFailed(android.net.http.BidirectionalStream, android.net.http.UrlResponseInfo, android.net.http.HttpException)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReadCompleted">
      <MemberSignature Language="C#" Value="public void OnReadCompleted (Android.Net.Http.BidirectionalStream stream, Android.Net.Http.UrlResponseInfo info, Java.Nio.ByteBuffer buffer, bool endOfStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnReadCompleted(class Android.Net.Http.BidirectionalStream stream, class Android.Net.Http.UrlResponseInfo info, class Java.Nio.ByteBuffer buffer, bool endOfStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Http.BidirectionalStream.ICallback.OnReadCompleted(Android.Net.Http.BidirectionalStream,Android.Net.Http.UrlResponseInfo,Java.Nio.ByteBuffer,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnReadCompleted : Android.Net.Http.BidirectionalStream * Android.Net.Http.UrlResponseInfo * Java.Nio.ByteBuffer * bool -&gt; unit" Usage="iCallback.OnReadCompleted (stream, info, buffer, endOfStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onReadCompleted", "(Landroid/net/http/BidirectionalStream;Landroid/net/http/UrlResponseInfo;Ljava/nio/ByteBuffer;Z)V", "GetOnReadCompleted_Landroid_net_http_BidirectionalStream_Landroid_net_http_UrlResponseInfo_Ljava_nio_ByteBuffer_ZHandler:Android.Net.Http.BidirectionalStream/ICallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onReadCompleted", "(Landroid/net/http/BidirectionalStream;Landroid/net/http/UrlResponseInfo;Ljava/nio/ByteBuffer;Z)V", "GetOnReadCompleted_Landroid_net_http_BidirectionalStream_Landroid_net_http_UrlResponseInfo_Ljava_nio_ByteBuffer_ZHandler:Android.Net.Http.BidirectionalStream/ICallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="Android.Net.Http.BidirectionalStream" />
        <Parameter Name="info" Type="Android.Net.Http.UrlResponseInfo" />
        <Parameter Name="buffer" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="endOfStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">the stream on which the read completed. &lt;strong&gt;This is not guaranteed to
                   be the same object as the one received by other callbacks, nor is it guaranteed
                   to be the one returned by <c>BidirectionalStream.Builder#build</c>.&lt;/strong&gt;
                   However, method calls on this object will have the same effects as calls on the
                   original <c>BidirectionalStream</c>.</param>
        <param name="info">the response information</param>
        <param name="buffer">the buffer that was passed to <c>BidirectionalStream#read read()</c>, now
            set to the end of the received data. If position is not updated, it means the remote side
            has signaled that it will send no more data.</param>
        <param name="endOfStream">if true, this is the last read data, remote will not send more data,
                    and
            the read side is closed.</param>
        <summary>Invoked when data is read into the buffer passed to <c>BidirectionalStream#read
            read()</c>.</summary>
        <remarks>
          <para>Invoked when data is read into the buffer passed to <c>BidirectionalStream#read
            read()</c>. Only part of the buffer may be populated. To continue reading, call <c>BidirectionalStream#read read()</c>. It may be invoked after <c>onResponseTrailersReceived()</c>, if there was pending read data before trailers were
            received.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/http/BidirectionalStream.Callback#onReadCompleted(android.net.http.BidirectionalStream,%20android.net.http.UrlResponseInfo,%20java.nio.ByteBuffer,%20boolean)" title="Reference documentation">Java documentation for <code>android.net.http.BidirectionalStream.Callback.onReadCompleted(android.net.http.BidirectionalStream, android.net.http.UrlResponseInfo, java.nio.ByteBuffer, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResponseHeadersReceived">
      <MemberSignature Language="C#" Value="public void OnResponseHeadersReceived (Android.Net.Http.BidirectionalStream stream, Android.Net.Http.UrlResponseInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnResponseHeadersReceived(class Android.Net.Http.BidirectionalStream stream, class Android.Net.Http.UrlResponseInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Http.BidirectionalStream.ICallback.OnResponseHeadersReceived(Android.Net.Http.BidirectionalStream,Android.Net.Http.UrlResponseInfo)" />
      <MemberSignature Language="F#" Value="abstract member OnResponseHeadersReceived : Android.Net.Http.BidirectionalStream * Android.Net.Http.UrlResponseInfo -&gt; unit" Usage="iCallback.OnResponseHeadersReceived (stream, info)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onResponseHeadersReceived", "(Landroid/net/http/BidirectionalStream;Landroid/net/http/UrlResponseInfo;)V", "GetOnResponseHeadersReceived_Landroid_net_http_BidirectionalStream_Landroid_net_http_UrlResponseInfo_Handler:Android.Net.Http.BidirectionalStream/ICallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onResponseHeadersReceived", "(Landroid/net/http/BidirectionalStream;Landroid/net/http/UrlResponseInfo;)V", "GetOnResponseHeadersReceived_Landroid_net_http_BidirectionalStream_Landroid_net_http_UrlResponseInfo_Handler:Android.Net.Http.BidirectionalStream/ICallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="Android.Net.Http.BidirectionalStream" />
        <Parameter Name="info" Type="Android.Net.Http.UrlResponseInfo" />
      </Parameters>
      <Docs>
        <param name="stream">the stream on which response headers were received. &lt;strong&gt;This is not
                   guaranteed to be the same object as the one received by other callbacks, nor is
                   it guaranteed to be the one returned by <c>BidirectionalStream.Builder#build</c>.
                   &lt;/strong&gt; However, method calls on this object will have the same effects as
                   calls on the original <c>BidirectionalStream</c>.</param>
        <param name="info">the response information.</param>
        <summary>Invoked when initial response headers are received.</summary>
        <remarks>
          <para>Invoked when initial response headers are received. Headers are available from <c>info.</c><c>UrlResponseInfo#getHeaders getHeaders()</c>. Consumer may call <c>BidirectionalStream#read read()</c> to start reading. Consumer may call <c>BidirectionalStream#write write()</c> to start writing or close the stream.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/http/BidirectionalStream.Callback#onResponseHeadersReceived(android.net.http.BidirectionalStream,%20android.net.http.UrlResponseInfo)" title="Reference documentation">Java documentation for <code>android.net.http.BidirectionalStream.Callback.onResponseHeadersReceived(android.net.http.BidirectionalStream, android.net.http.UrlResponseInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResponseTrailersReceived">
      <MemberSignature Language="C#" Value="public void OnResponseTrailersReceived (Android.Net.Http.BidirectionalStream stream, Android.Net.Http.UrlResponseInfo info, Android.Net.Http.HeaderBlock trailers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnResponseTrailersReceived(class Android.Net.Http.BidirectionalStream stream, class Android.Net.Http.UrlResponseInfo info, class Android.Net.Http.HeaderBlock trailers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Http.BidirectionalStream.ICallback.OnResponseTrailersReceived(Android.Net.Http.BidirectionalStream,Android.Net.Http.UrlResponseInfo,Android.Net.Http.HeaderBlock)" />
      <MemberSignature Language="F#" Value="abstract member OnResponseTrailersReceived : Android.Net.Http.BidirectionalStream * Android.Net.Http.UrlResponseInfo * Android.Net.Http.HeaderBlock -&gt; unit" Usage="iCallback.OnResponseTrailersReceived (stream, info, trailers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onResponseTrailersReceived", "(Landroid/net/http/BidirectionalStream;Landroid/net/http/UrlResponseInfo;Landroid/net/http/HeaderBlock;)V", "GetOnResponseTrailersReceived_Landroid_net_http_BidirectionalStream_Landroid_net_http_UrlResponseInfo_Landroid_net_http_HeaderBlock_Handler:Android.Net.Http.BidirectionalStream/ICallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onResponseTrailersReceived", "(Landroid/net/http/BidirectionalStream;Landroid/net/http/UrlResponseInfo;Landroid/net/http/HeaderBlock;)V", "GetOnResponseTrailersReceived_Landroid_net_http_BidirectionalStream_Landroid_net_http_UrlResponseInfo_Landroid_net_http_HeaderBlock_Handler:Android.Net.Http.BidirectionalStream/ICallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="Android.Net.Http.BidirectionalStream" />
        <Parameter Name="info" Type="Android.Net.Http.UrlResponseInfo" />
        <Parameter Name="trailers" Type="Android.Net.Http.HeaderBlock" />
      </Parameters>
      <Docs>
        <param name="stream">the stream on which response trailers were received. &lt;strong&gt;This is not
                   guaranteed to be the same object as the one received by other callbacks, nor is
                   it guaranteed to be the one returned by <c>BidirectionalStream.Builder#build</c>.
                   &lt;/strong&gt; However, method calls on this object will have the same effects as calls
                   on the original <c>BidirectionalStream</c>.</param>
        <param name="info">the response information</param>
        <param name="trailers">the trailers received</param>
        <summary>Invoked when trailers are received before closing the stream.</summary>
        <remarks>
          <para>Invoked when trailers are received before closing the stream. Only invoked when server
            sends trailers, which it may not. May be invoked while there is read data remaining in
            local buffer.</para>
          <para>Default implementation takes no action.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/http/BidirectionalStream.Callback#onResponseTrailersReceived(android.net.http.BidirectionalStream,%20android.net.http.UrlResponseInfo,%20android.net.http.HeaderBlock)" title="Reference documentation">Java documentation for <code>android.net.http.BidirectionalStream.Callback.onResponseTrailersReceived(android.net.http.BidirectionalStream, android.net.http.UrlResponseInfo, android.net.http.HeaderBlock)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStreamReady">
      <MemberSignature Language="C#" Value="public void OnStreamReady (Android.Net.Http.BidirectionalStream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnStreamReady(class Android.Net.Http.BidirectionalStream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Http.BidirectionalStream.ICallback.OnStreamReady(Android.Net.Http.BidirectionalStream)" />
      <MemberSignature Language="F#" Value="abstract member OnStreamReady : Android.Net.Http.BidirectionalStream -&gt; unit" Usage="iCallback.OnStreamReady stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onStreamReady", "(Landroid/net/http/BidirectionalStream;)V", "GetOnStreamReady_Landroid_net_http_BidirectionalStream_Handler:Android.Net.Http.BidirectionalStream/ICallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onStreamReady", "(Landroid/net/http/BidirectionalStream;)V", "GetOnStreamReady_Landroid_net_http_BidirectionalStream_Handler:Android.Net.Http.BidirectionalStream/ICallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="Android.Net.Http.BidirectionalStream" />
      </Parameters>
      <Docs>
        <param name="stream">the stream that is ready. &lt;strong&gt;This is not guaranteed to be the same
                   object as the one received by other callbacks, nor is it guaranteed to be the one
                   returned by <c>BidirectionalStream.Builder#build</c>.&lt;/strong&gt; However, method
                   calls on this object will have the same effects as calls on the original
                   <c>BidirectionalStream</c>.</param>
        <summary>Invoked when the stream is ready for reading and writing.</summary>
        <remarks>
          <para>Invoked when the stream is ready for reading and writing. Consumer may call <c>BidirectionalStream#read read()</c> to start reading data. Consumer may call <c>BidirectionalStream#write write()</c> to start writing data.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/http/BidirectionalStream.Callback#onStreamReady(android.net.http.BidirectionalStream)" title="Reference documentation">Java documentation for <code>android.net.http.BidirectionalStream.Callback.onStreamReady(android.net.http.BidirectionalStream)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSucceeded">
      <MemberSignature Language="C#" Value="public void OnSucceeded (Android.Net.Http.BidirectionalStream stream, Android.Net.Http.UrlResponseInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSucceeded(class Android.Net.Http.BidirectionalStream stream, class Android.Net.Http.UrlResponseInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Http.BidirectionalStream.ICallback.OnSucceeded(Android.Net.Http.BidirectionalStream,Android.Net.Http.UrlResponseInfo)" />
      <MemberSignature Language="F#" Value="abstract member OnSucceeded : Android.Net.Http.BidirectionalStream * Android.Net.Http.UrlResponseInfo -&gt; unit" Usage="iCallback.OnSucceeded (stream, info)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSucceeded", "(Landroid/net/http/BidirectionalStream;Landroid/net/http/UrlResponseInfo;)V", "GetOnSucceeded_Landroid_net_http_BidirectionalStream_Landroid_net_http_UrlResponseInfo_Handler:Android.Net.Http.BidirectionalStream/ICallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSucceeded", "(Landroid/net/http/BidirectionalStream;Landroid/net/http/UrlResponseInfo;)V", "GetOnSucceeded_Landroid_net_http_BidirectionalStream_Landroid_net_http_UrlResponseInfo_Handler:Android.Net.Http.BidirectionalStream/ICallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="Android.Net.Http.BidirectionalStream" />
        <Parameter Name="info" Type="Android.Net.Http.UrlResponseInfo" />
      </Parameters>
      <Docs>
        <param name="stream">the stream which is closed successfully. &lt;strong&gt;This is not guaranteed to
                   be the same object as the one received by other callbacks, nor is it guaranteed
                   to be the one returned by <c>BidirectionalStream.Builder#build</c>.&lt;/strong&gt;
                   However, method calls on this object will have the same effects as calls on the
                   original <c>BidirectionalStream</c>.</param>
        <param name="info">the response information</param>
        <summary>Invoked when there is no data to be read or written and the stream is closed successfully
            remotely and locally.</summary>
        <remarks>
          <para>Invoked when there is no data to be read or written and the stream is closed successfully
            remotely and locally. Once invoked, no further <c>BidirectionalStream.Callback</c>
            methods will be invoked.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/http/BidirectionalStream.Callback#onSucceeded(android.net.http.BidirectionalStream,%20android.net.http.UrlResponseInfo)" title="Reference documentation">Java documentation for <code>android.net.http.BidirectionalStream.Callback.onSucceeded(android.net.http.BidirectionalStream, android.net.http.UrlResponseInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWriteCompleted">
      <MemberSignature Language="C#" Value="public void OnWriteCompleted (Android.Net.Http.BidirectionalStream stream, Android.Net.Http.UrlResponseInfo info, Java.Nio.ByteBuffer buffer, bool endOfStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnWriteCompleted(class Android.Net.Http.BidirectionalStream stream, class Android.Net.Http.UrlResponseInfo info, class Java.Nio.ByteBuffer buffer, bool endOfStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Http.BidirectionalStream.ICallback.OnWriteCompleted(Android.Net.Http.BidirectionalStream,Android.Net.Http.UrlResponseInfo,Java.Nio.ByteBuffer,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnWriteCompleted : Android.Net.Http.BidirectionalStream * Android.Net.Http.UrlResponseInfo * Java.Nio.ByteBuffer * bool -&gt; unit" Usage="iCallback.OnWriteCompleted (stream, info, buffer, endOfStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onWriteCompleted", "(Landroid/net/http/BidirectionalStream;Landroid/net/http/UrlResponseInfo;Ljava/nio/ByteBuffer;Z)V", "GetOnWriteCompleted_Landroid_net_http_BidirectionalStream_Landroid_net_http_UrlResponseInfo_Ljava_nio_ByteBuffer_ZHandler:Android.Net.Http.BidirectionalStream/ICallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onWriteCompleted", "(Landroid/net/http/BidirectionalStream;Landroid/net/http/UrlResponseInfo;Ljava/nio/ByteBuffer;Z)V", "GetOnWriteCompleted_Landroid_net_http_BidirectionalStream_Landroid_net_http_UrlResponseInfo_Ljava_nio_ByteBuffer_ZHandler:Android.Net.Http.BidirectionalStream/ICallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="Android.Net.Http.BidirectionalStream" />
        <Parameter Name="info" Type="Android.Net.Http.UrlResponseInfo" />
        <Parameter Name="buffer" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="endOfStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">the stream on which the write completed. &lt;strong&gt;This is not guaranteed to
                   be the same object as the one received by other callbacks, nor is it guaranteed
                   to be the one returned by <c>BidirectionalStream.Builder#build</c>.&lt;/strong&gt;
                   However, method calls on this object will have the same effects as calls on the
                   original <c>BidirectionalStream</c>.</param>
        <param name="info">the response information</param>
        <param name="buffer">the buffer that was passed to <c>BidirectionalStream#write write()</c>.
                    The
            buffer's position is set to the buffer's limit. The buffer's limit is not changed.</param>
        <param name="endOfStream">the endOfStream flag that was passed to the corresponding <c>BidirectionalStream#write write()</c>. If true, the write side is closed.</param>
        <summary>Invoked when the entire ByteBuffer passed to <c>BidirectionalStream#write write()</c> is
            sent.</summary>
        <remarks>
          <para>Invoked when the entire ByteBuffer passed to <c>BidirectionalStream#write write()</c> is
            sent. The buffer's position is updated to be the same as the buffer's limit. The buffer's
            limit is not changed. To continue writing, call <c>BidirectionalStream#write
            write()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/http/BidirectionalStream.Callback#onWriteCompleted(android.net.http.BidirectionalStream,%20android.net.http.UrlResponseInfo,%20java.nio.ByteBuffer,%20boolean)" title="Reference documentation">Java documentation for <code>android.net.http.BidirectionalStream.Callback.onWriteCompleted(android.net.http.BidirectionalStream, android.net.http.UrlResponseInfo, java.nio.ByteBuffer, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
