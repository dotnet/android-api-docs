<Type Name="IUnicodeMatcher" FullName="Android.Icu.Text.IUnicodeMatcher">
  <TypeSignature Language="C#" Value="public interface IUnicodeMatcher : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IUnicodeMatcher implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Icu.Text.IUnicodeMatcher" />
  <TypeSignature Language="F#" Value="type IUnicodeMatcher = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/icu/text/UnicodeMatcher", "", "Android.Icu.Text.IUnicodeMatcherInvoker", ApiSince=24)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/icu/text/UnicodeMatcher", "", "Android.Icu.Text.IUnicodeMatcherInvoker", ApiSince=24)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <c>UnicodeMatcher</c> defines a protocol for objects that can
            match a range of characters in a Replaceable string.</summary>
    <remarks>
      <para>
        <c>UnicodeMatcher</c> defines a protocol for objects that can
            match a range of characters in a Replaceable string.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/icu/text/UnicodeMatcher" title="Reference documentation">Java documentation for <code>android.icu.text.UnicodeMatcher</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddMatchSetTo">
      <MemberSignature Language="C#" Value="public void AddMatchSetTo (Android.Icu.Text.UnicodeSet? toUnionTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddMatchSetTo(class Android.Icu.Text.UnicodeSet toUnionTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.IUnicodeMatcher.AddMatchSetTo(Android.Icu.Text.UnicodeSet)" />
      <MemberSignature Language="F#" Value="abstract member AddMatchSetTo : Android.Icu.Text.UnicodeSet -&gt; unit" Usage="iUnicodeMatcher.AddMatchSetTo toUnionTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addMatchSetTo", "(Landroid/icu/text/UnicodeSet;)V", "GetAddMatchSetTo_Landroid_icu_text_UnicodeSet_Handler:Android.Icu.Text.IUnicodeMatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addMatchSetTo", "(Landroid/icu/text/UnicodeSet;)V", "GetAddMatchSetTo_Landroid_icu_text_UnicodeSet_Handler:Android.Icu.Text.IUnicodeMatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toUnionTo" Type="Android.Icu.Text.UnicodeSet" />
      </Parameters>
      <Docs>
        <param name="toUnionTo">the set into which to union the source characters</param>
        <summary>Union the set of all characters that may be matched by this object
            into the given set.</summary>
        <remarks>
          <para>Union the set of all characters that may be matched by this object
            into the given set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/UnicodeMatcher#addMatchSetTo(android.icu.text.UnicodeSet)" title="Reference documentation">Java documentation for <code>android.icu.text.UnicodeMatcher.addMatchSetTo(android.icu.text.UnicodeSet)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ether">
      <MemberSignature Language="C#" Value="public const char Ether;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char Ether" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Text.IUnicodeMatcher.Ether" />
      <MemberSignature Language="F#" Value="val mutable Ether : char" Usage="Android.Icu.Text.IUnicodeMatcher.Ether" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ETHER", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ETHER", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The character at index i, where i &amp;lt; contextStart || i &amp;gt;= contextLimit,
            is ETHER.</summary>
        <remarks>
          <para>The character at index i, where i &amp;lt; contextStart || i &amp;gt;= contextLimit,
            is ETHER.  This allows explicit matching by rules and UnicodeSets
            of text outside the context.  In traditional terms, this allows anchoring
            at the start and/or end.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/UnicodeMatcher#ETHER" title="Reference documentation">Java documentation for <code>android.icu.text.UnicodeMatcher.ETHER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public int Matches (Android.Icu.Text.IReplaceable? text, int[]? offset, int limit, bool incremental);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Matches(class Android.Icu.Text.IReplaceable text, int32[] offset, int32 limit, bool incremental) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.IUnicodeMatcher.Matches(Android.Icu.Text.IReplaceable,System.Int32[],System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Matches : Android.Icu.Text.IReplaceable * int[] * int * bool -&gt; int" Usage="iUnicodeMatcher.Matches (text, offset, limit, incremental)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("matches", "(Landroid/icu/text/Replaceable;[IIZ)I", "GetMatches_Landroid_icu_text_Replaceable_arrayIIZHandler:Android.Icu.Text.IUnicodeMatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("matches", "(Landroid/icu/text/Replaceable;[IIZ)I", "GetMatches_Landroid_icu_text_Replaceable_arrayIIZHandler:Android.Icu.Text.IUnicodeMatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Android.Icu.Text.IReplaceable" />
        <Parameter Name="offset" Type="System.Int32[]" />
        <Parameter Name="limit" Type="System.Int32" />
        <Parameter Name="incremental" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">the text to be matched</param>
        <param name="offset">on input, the index into text at which to begin
            matching.  On output, the limit of the matched text.  The
            number of matched characters is the output value of offset
            minus the input value.  Offset should always point to the
            HIGH SURROGATE (leading code unit) of a pair of surrogates,
            both on entry and upon return.</param>
        <param name="limit">the limit index of text to be matched.  Greater
            than offset for a forward direction match, less than offset for
            a backward direction match.  The last character to be
            considered for matching will be text.charAt(limit-1) in the
            forward direction or text.charAt(limit+1) in the backward
            direction.</param>
        <param name="incremental">if true, then assume further characters may
            be inserted at limit and check for partial matching.  Otherwise
            assume the text as given is complete.</param>
        <summary>Return a UMatchDegree value indicating the degree of match for
            the given text at the given offset.</summary>
        <returns>a match degree value indicating a full match, a partial
            match, or a mismatch.  If incremental is false then
            U_PARTIAL_MATCH should never be returned.</returns>
        <remarks>
          <para>Return a UMatchDegree value indicating the degree of match for
            the given text at the given offset.  Zero, one, or more
            characters may be matched.</para>
          <para>Matching in the forward direction is indicated by limit &amp;gt;
            offset.  Characters from offset forwards to limit-1 will be
            considered for matching.</para>
          <para>Matching in the reverse direction is indicated by limit &amp;lt;
            offset.  Characters from offset backwards to limit+1 will be
            considered for matching.</para>
          <para>If limit == offset then the only match possible is a zero
            character match (which subclasses may implement if desired).</para>
          <para>If U_MATCH is returned, then as a side effect, advance the
            offset parameter to the limit of the matched substring.  In the
            forward direction, this will be the index of the last matched
            character plus one.  In the reverse direction, this will be the
            index of the last matched character minus one.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/UnicodeMatcher#matches(android.icu.text.Replaceable,%20int[],%20int,%20boolean)" title="Reference documentation">Java documentation for <code>android.icu.text.UnicodeMatcher.matches(android.icu.text.Replaceable, int[], int, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchesIndexValue">
      <MemberSignature Language="C#" Value="public bool MatchesIndexValue (int v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesIndexValue(int32 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.IUnicodeMatcher.MatchesIndexValue(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member MatchesIndexValue : int -&gt; bool" Usage="iUnicodeMatcher.MatchesIndexValue v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("matchesIndexValue", "(I)Z", "GetMatchesIndexValue_IHandler:Android.Icu.Text.IUnicodeMatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("matchesIndexValue", "(I)Z", "GetMatchesIndexValue_IHandler:Android.Icu.Text.IUnicodeMatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>Returns true if this matcher will match a character c, where c
            &amp;amp; 0xFF == v, at offset, in the forward direction (with limit &amp;gt;
            offset).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns true if this matcher will match a character c, where c
            &amp;amp; 0xFF == v, at offset, in the forward direction (with limit &amp;gt;
            offset).  This is used by <c>RuleBasedTransliterator</c> for
            indexing.</para>
          <para>Note:  This API uses an int even though the value will be
            restricted to 8 bits in order to avoid complications with
            signedness (bytes convert to ints in the range -128..127).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/UnicodeMatcher#matchesIndexValue(int)" title="Reference documentation">Java documentation for <code>android.icu.text.UnicodeMatcher.matchesIndexValue(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPattern">
      <MemberSignature Language="C#" Value="public string? ToPattern (bool escapeUnprintable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToPattern(bool escapeUnprintable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.IUnicodeMatcher.ToPattern(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ToPattern : bool -&gt; string" Usage="iUnicodeMatcher.ToPattern escapeUnprintable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toPattern", "(Z)Ljava/lang/String;", "GetToPattern_ZHandler:Android.Icu.Text.IUnicodeMatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toPattern", "(Z)Ljava/lang/String;", "GetToPattern_ZHandler:Android.Icu.Text.IUnicodeMatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="escapeUnprintable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="escapeUnprintable">if true then convert unprintable
            character to their hex escape representations, \\uxxxx or
            \\Uxxxxxxxx.  Unprintable characters are those other than
            U+000A, U+0020..U+007E.</param>
        <summary>Returns a string representation of this matcher.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns a string representation of this matcher.  If the result of
            calling this function is passed to the appropriate parser, it
            will produce another matcher that is equal to this one.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/UnicodeMatcher#toPattern(boolean)" title="Reference documentation">Java documentation for <code>android.icu.text.UnicodeMatcher.toPattern(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
