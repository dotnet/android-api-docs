<Type Name="Normalizer" FullName="Android.Icu.Text.Normalizer">
  <TypeSignature Language="C#" Value="public sealed class Normalizer : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.ICloneable" FrameworkAlternate="net-android-34.0;net-android-35.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Normalizer extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Icu.Text.Normalizer" />
  <TypeSignature Language="F#" Value="type Normalizer = class&#xA;    inherit Object&#xA;    interface ICloneable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <TypeSignature Language="C#" Value="public sealed class Normalizer : Java.Lang.Object, IDisposable, Java.Lang.ICloneable" FrameworkAlternate="net-android-36.0" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/icu/text/Normalizer", ApiSince=24, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/icu/text/Normalizer", ApiSince=24, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Old Unicode normalization API.</summary>
    <remarks>
      <para>Old Unicode normalization API.</para>
      <para>This API has been replaced by the <c>Normalizer2</c> class and is only available
            for backward compatibility. This class simply delegates to the Normalizer2 class.
            There are two exceptions: The new API does not provide a replacement for
            <c>QuickCheckResult</c> and <c>compare()</c>.</para>
      <para>
        <c>normalize</c> transforms Unicode text into an equivalent composed or
            decomposed form, allowing for easier sorting and searching of text.
            <c>normalize</c> supports the standard normalization forms described in
            
            Unicode Standard Annex #15 &amp;mdash; Unicode Normalization Forms.</para>
      <para>Characters with accents or other adornments can be encoded in
            several different ways in Unicode.  For example, take the character A-acute.
            In Unicode, this can be encoded as a single character (the
            "composed" form):</para>
      <code lang="text/java">00C1    LATIN CAPITAL LETTER A WITH ACUTE
            </code>
      <para>or as two separate characters (the "decomposed" form):</para>
      <code lang="text/java">0041    LATIN CAPITAL LETTER A
                 0301    COMBINING ACUTE ACCENT
            </code>
      <para>To a user of your program, however, both of these sequences should be
            treated as the same "user-level" character "A with acute accent".  When you
            are searching or comparing text, you must ensure that these two sequences are
            treated equivalently.  In addition, you must handle characters with more than
            one accent.  Sometimes the order of a character's combining accents is
            significant, while in other cases accent sequences in different orders are
            really equivalent.</para>
      <para>Similarly, the string "ffi" can be encoded as three separate letters:</para>
      <code lang="text/java">0066    LATIN SMALL LETTER F
                 0066    LATIN SMALL LETTER F
                 0069    LATIN SMALL LETTER I
            </code>
      <para>or as the single character</para>
      <code lang="text/java">FB03    LATIN SMALL LIGATURE FFI
            </code>
      <para>The ffi ligature is not a distinct semantic character, and strictly speaking
            it shouldn't be in Unicode at all, but it was included for compatibility
            with existing character sets that already provided it.  The Unicode standard
            identifies such characters by giving them "compatibility" decompositions
            into the corresponding semantic characters.  When sorting and searching, you
            will often want to use these mappings.</para>
      <para>
        <c>normalize</c> helps solve these problems by transforming text into
            the canonical composed and decomposed forms as shown in the first example
            above. In addition, you can have it perform compatibility decompositions so
            that you can treat compatibility characters the same as their equivalents.
            Finally, <c>normalize</c> rearranges accents into the proper canonical
            order, so that you do not have to worry about accent rearrangement on your
            own.</para>
      <para>Form FCD, "Fast C or D", is also designed for collation.
            It allows to work on strings that are not necessarily normalized
            with an algorithm (like in collation) that works under "canonical closure",
            i.e., it treats precomposed characters and their decomposed equivalents the
            same.</para>
      <para>It is not a normalization form because it does not provide for uniqueness of
            representation. Multiple strings may be canonically equivalent (their NFDs
            are identical) and may all conform to FCD without being identical themselves.</para>
      <para>The form is defined such that the "raw decomposition", the recursive
            canonical decomposition of each character, results in a string that is
            canonically ordered. This means that precomposed characters are allowed for
            as long as their decompositions do not need canonical reordering.</para>
      <para>Its advantage for a process like collation is that all NFD and most NFC texts
            - and many unnormalized texts - already conform to FCD and do not need to be
            normalized (NFD) for such a process. The FCD quick check will return YES for
            most strings in practice.</para>
      <para>normalize(FCD) may be implemented with NFD.</para>
      <para>For more details on FCD see Unicode Technical Note #5 (Canonical Equivalence in Applications):
            http://www.unicode.org/notes/tn5/#FCD</para>
      <para>ICU collation performs either NFD or FCD normalization automatically if
            normalization is turned on for the collator object. Beyond collation and
            string search, normalized strings may be useful for string equivalence
            comparisons, transliteration/transcription, unique representations, etc.</para>
      <para>The W3C generally recommends to exchange texts in NFC.
            Note also that most legacy character encodings use only precomposed forms and
            often do not encode any combining marks by themselves. For conversion to such
            character encodings the Unicode text needs to be normalized to NFC.
            For more usage examples, see the Unicode Standard Annex.</para>
      <para>Note: The Normalizer class also provides API for iterative normalization.
            While the setIndex() and getIndex() refer to indices in the
            underlying Unicode input text, the next() and previous() methods
            iterate through characters in the normalized output.
            This means that there is not necessarily a one-to-one correspondence
            between characters returned by next() and previous() and the indices
            passed to and returned from setIndex() and getIndex().
            It is for this reason that Normalizer does not implement the CharacterIterator interface.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/icu/text/Normalizer" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer.Clone" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; Java.Lang.Object" Usage="normalizer.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clone", "()Ljava/lang/Object;", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clone", "()Ljava/lang/Object;", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clones this <c>Normalizer</c> object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Clones this <c>Normalizer</c> object.  All properties of this
            object are duplicated in the new object, including the cloning of any
            <c>CharacterIterator</c> that was passed in to the constructor
            or to <c>#setText(CharacterIterator) setText</c>.
            However, the text storage underlying
            the <c>CharacterIterator</c> is not duplicated unless the
            iterator's <c>clone</c> method does so.</para>
          <para>This member is deprecated. ICU 56 Use <c>Normalizer2</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer#clone()" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer.clone()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (char[]? s1, char[]? s2, Android.Icu.Text.NormalizerCompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(char[] s1, char[] s2, valuetype Android.Icu.Text.NormalizerCompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer.Compare(System.Char[],System.Char[],Android.Icu.Text.NormalizerCompareOptions)" />
      <MemberSignature Language="F#" Value="static member Compare : char[] * char[] * Android.Icu.Text.NormalizerCompareOptions -&gt; int" Usage="Android.Icu.Text.Normalizer.Compare (s1, s2, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "([C[CI)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "([C[CI)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s1" Type="System.Char[]" />
        <Parameter Name="s2" Type="System.Char[]" />
        <Parameter Name="options" Type="Android.Icu.Text.NormalizerCompareOptions">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="s1">First source string.</param>
        <param name="s2">Second source string.</param>
        <param name="options">A bit set of options:
              - FOLD_CASE_DEFAULT or 0 is used for default options:
                Case-sensitive comparison in code unit order, and the input strings
                are quick-checked for FCD.
            
              - INPUT_IS_FCD
                Set if the caller knows that both s1 and s2 fulfill the FCD
                conditions. If not set, the function will quickCheck for FCD
                and normalize if necessary.
            
              - COMPARE_CODE_POINT_ORDER
                Set to choose code point order instead of code unit order
            
              - COMPARE_IGNORE_CASE
                Set to compare strings case-insensitively using case folding,
                instead of case-sensitively.
                If set, then the following case folding options are used.</param>
        <summary>Compare two strings for canonical equivalence.</summary>
        <returns>&amp;lt;0 or 0 or &amp;gt;0 as usual for string comparisons</returns>
        <remarks>
          <para>Compare two strings for canonical equivalence.
            Further options include case-insensitive comparison and
            code point order (as opposed to code unit order).
            Convenience method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer#compare(char[],%20char[],%20int)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer.compare(char[], char[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (int char32a, int char32b, Android.Icu.Text.NormalizerCompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(int32 char32a, int32 char32b, valuetype Android.Icu.Text.NormalizerCompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer.Compare(System.Int32,System.Int32,Android.Icu.Text.NormalizerCompareOptions)" />
      <MemberSignature Language="F#" Value="static member Compare : int * int * Android.Icu.Text.NormalizerCompareOptions -&gt; int" Usage="Android.Icu.Text.Normalizer.Compare (char32a, char32b, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "(III)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "(III)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="char32a" Type="System.Int32" />
        <Parameter Name="char32b" Type="System.Int32" />
        <Parameter Name="options" Type="Android.Icu.Text.NormalizerCompareOptions">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="char32a">the first code point to be checked against the</param>
        <param name="char32b">the second code point</param>
        <param name="options">A bit set of options</param>
        <summary>Convenience method that can have faster implementation
            by not allocating buffers.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Convenience method that can have faster implementation
            by not allocating buffers.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer#compare(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer.compare(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (int char32a, string? str2, Android.Icu.Text.NormalizerCompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(int32 char32a, string str2, valuetype Android.Icu.Text.NormalizerCompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer.Compare(System.Int32,System.String,Android.Icu.Text.NormalizerCompareOptions)" />
      <MemberSignature Language="F#" Value="static member Compare : int * string * Android.Icu.Text.NormalizerCompareOptions -&gt; int" Usage="Android.Icu.Text.Normalizer.Compare (char32a, str2, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "(ILjava/lang/String;I)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "(ILjava/lang/String;I)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="char32a" Type="System.Int32" />
        <Parameter Name="str2" Type="System.String" />
        <Parameter Name="options" Type="Android.Icu.Text.NormalizerCompareOptions">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="char32a">the first code point to be checked against</param>
        <param name="str2">the second string</param>
        <param name="options">A bit set of options</param>
        <summary>Convenience method that can have faster implementation
            by not allocating buffers.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Convenience method that can have faster implementation
            by not allocating buffers.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer#compare(int,%20java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer.compare(int, java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (string? s1, string? s2, Android.Icu.Text.NormalizerCompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(string s1, string s2, valuetype Android.Icu.Text.NormalizerCompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer.Compare(System.String,System.String,Android.Icu.Text.NormalizerCompareOptions)" />
      <MemberSignature Language="F#" Value="static member Compare : string * string * Android.Icu.Text.NormalizerCompareOptions -&gt; int" Usage="Android.Icu.Text.Normalizer.Compare (s1, s2, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "(Ljava/lang/String;Ljava/lang/String;I)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "(Ljava/lang/String;Ljava/lang/String;I)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s1" Type="System.String" />
        <Parameter Name="s2" Type="System.String" />
        <Parameter Name="options" Type="Android.Icu.Text.NormalizerCompareOptions">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="s1">First source string.</param>
        <param name="s2">Second source string.</param>
        <param name="options">A bit set of options:
              - FOLD_CASE_DEFAULT or 0 is used for default options:
                Case-sensitive comparison in code unit order, and the input strings
                are quick-checked for FCD.
            
              - INPUT_IS_FCD
                Set if the caller knows that both s1 and s2 fulfill the FCD
                conditions. If not set, the function will quickCheck for FCD
                and normalize if necessary.
            
              - COMPARE_CODE_POINT_ORDER
                Set to choose code point order instead of code unit order
            
              - COMPARE_IGNORE_CASE
                Set to compare strings case-insensitively using case folding,
                instead of case-sensitively.
                If set, then the following case folding options are used.</param>
        <summary>Compare two strings for canonical equivalence.</summary>
        <returns>&amp;lt;0 or 0 or &amp;gt;0 as usual for string comparisons</returns>
        <remarks>
          <para>Compare two strings for canonical equivalence.
            Further options include case-insensitive comparison and
            code point order (as opposed to code unit order).</para>
          <para>Canonical equivalence between two strings is defined as their normalized
            forms (NFD or NFC) being identical.
            This function compares strings incrementally instead of normalizing
            (and optionally case-folding) both strings entirely,
            improving performance significantly.</para>
          <para>Bulk normalization is only necessary if the strings do not fulfill the
            FCD conditions. Only in this case, and only if the strings are relatively
            long, is memory allocated temporarily.
            For FCD strings and short non-FCD strings there is no memory allocation.</para>
          <para>Semantically, this is equivalent to
              strcmp[CodePointOrder](foldCase(NFD(s1)), foldCase(NFD(s2)))
            where code point order and foldCase are all optional.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer#compare(java.lang.String,%20java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer.compare(java.lang.String, java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (char[]? s1, int s1Start, int s1Limit, char[]? s2, int s2Start, int s2Limit, Android.Icu.Text.NormalizerCompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(char[] s1, int32 s1Start, int32 s1Limit, char[] s2, int32 s2Start, int32 s2Limit, valuetype Android.Icu.Text.NormalizerCompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer.Compare(System.Char[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,Android.Icu.Text.NormalizerCompareOptions)" />
      <MemberSignature Language="F#" Value="static member Compare : char[] * int * int * char[] * int * int * Android.Icu.Text.NormalizerCompareOptions -&gt; int" Usage="Android.Icu.Text.Normalizer.Compare (s1, s1Start, s1Limit, s2, s2Start, s2Limit, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "([CII[CIII)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "([CII[CIII)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s1" Type="System.Char[]" />
        <Parameter Name="s1Start" Type="System.Int32" />
        <Parameter Name="s1Limit" Type="System.Int32" />
        <Parameter Name="s2" Type="System.Char[]" />
        <Parameter Name="s2Start" Type="System.Int32" />
        <Parameter Name="s2Limit" Type="System.Int32" />
        <Parameter Name="options" Type="Android.Icu.Text.NormalizerCompareOptions">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="s1">First source character array.</param>
        <param name="s1Start">start index of source</param>
        <param name="s1Limit">limit of the source</param>
        <param name="s2">Second source character array.</param>
        <param name="s2Start">start index of the source</param>
        <param name="s2Limit">limit of the source</param>
        <param name="options">A bit set of options:
              - FOLD_CASE_DEFAULT or 0 is used for default options:
                Case-sensitive comparison in code unit order, and the input strings
                are quick-checked for FCD.
            
              - INPUT_IS_FCD
                Set if the caller knows that both s1 and s2 fulfill the FCD
                conditions.If not set, the function will quickCheck for FCD
                and normalize if necessary.
            
              - COMPARE_CODE_POINT_ORDER
                Set to choose code point order instead of code unit order
            
              - COMPARE_IGNORE_CASE
                Set to compare strings case-insensitively using case folding,
                instead of case-sensitively.
                If set, then the following case folding options are used.</param>
        <summary>Compare two strings for canonical equivalence.</summary>
        <returns>&amp;lt;0 or 0 or &amp;gt;0 as usual for string comparisons</returns>
        <remarks>
          <para>Compare two strings for canonical equivalence.
            Further options include case-insensitive comparison and
            code point order (as opposed to code unit order).</para>
          <para>Canonical equivalence between two strings is defined as their normalized
            forms (NFD or NFC) being identical.
            This function compares strings incrementally instead of normalizing
            (and optionally case-folding) both strings entirely,
            improving performance significantly.</para>
          <para>Bulk normalization is only necessary if the strings do not fulfill the
            FCD conditions. Only in this case, and only if the strings are relatively
            long, is memory allocated temporarily.
            For FCD strings and short non-FCD strings there is no memory allocation.</para>
          <para>Semantically, this is equivalent to
              strcmp[CodePointOrder](foldCase(NFD(s1)), foldCase(NFD(s2)))
            where code point order and foldCase are all optional.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer#compare(char[],%20int,%20int,%20char[],%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer.compare(char[], int, int, char[], int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareCodePointOrder">
      <MemberSignature Language="C#" Value="public const Android.Icu.Text.NormalizerCompareOptions CompareCodePointOrder = 32768;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Icu.Text.NormalizerCompareOptions CompareCodePointOrder = (32768)" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Text.Normalizer.CompareCodePointOrder" />
      <MemberSignature Language="F#" Value="val mutable CompareCodePointOrder : Android.Icu.Text.NormalizerCompareOptions" Usage="Android.Icu.Text.Normalizer.CompareCodePointOrder" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("COMPARE_CODE_POINT_ORDER", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("COMPARE_CODE_POINT_ORDER", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Icu.Text.NormalizerCompareOptions enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Icu.Text.NormalizerCompareOptions enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.NormalizerCompareOptions</ReturnType>
      </ReturnValue>
      <MemberValue>32768</MemberValue>
      <Docs>
        <summary>Option bit for compare:
            Compare strings in code point order instead of code unit order.</summary>
        <remarks>
          <para>Option bit for compare:
            Compare strings in code point order instead of code unit order.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer#COMPARE_CODE_POINT_ORDER" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer.COMPARE_CODE_POINT_ORDER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareIgnoreCase">
      <MemberSignature Language="C#" Value="public const Android.Icu.Text.NormalizerCompareOptions CompareIgnoreCase = 65536;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Icu.Text.NormalizerCompareOptions CompareIgnoreCase = (65536)" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Text.Normalizer.CompareIgnoreCase" />
      <MemberSignature Language="F#" Value="val mutable CompareIgnoreCase : Android.Icu.Text.NormalizerCompareOptions" Usage="Android.Icu.Text.Normalizer.CompareIgnoreCase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("COMPARE_IGNORE_CASE", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("COMPARE_IGNORE_CASE", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Icu.Text.NormalizerCompareOptions enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Icu.Text.NormalizerCompareOptions enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.NormalizerCompareOptions</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary>Option bit for compare:
            Perform case-insensitive comparison.</summary>
        <remarks>
          <para>Option bit for compare:
            Perform case-insensitive comparison.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer#COMPARE_IGNORE_CASE" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer.COMPARE_IGNORE_CASE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FoldCaseDefault">
      <MemberSignature Language="C#" Value="public const Android.Icu.Text.NormalizerCompareOptions FoldCaseDefault = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Icu.Text.NormalizerCompareOptions FoldCaseDefault = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Text.Normalizer.FoldCaseDefault" />
      <MemberSignature Language="F#" Value="val mutable FoldCaseDefault : Android.Icu.Text.NormalizerCompareOptions" Usage="Android.Icu.Text.Normalizer.FoldCaseDefault" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FOLD_CASE_DEFAULT", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FOLD_CASE_DEFAULT", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Icu.Text.NormalizerCompareOptions enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Icu.Text.NormalizerCompareOptions enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.NormalizerCompareOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Option bit for compare:
            Case sensitively compare the strings</summary>
        <remarks>
          <para>Option bit for compare:
            Case sensitively compare the strings</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer#FOLD_CASE_DEFAULT" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer.FOLD_CASE_DEFAULT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FoldCaseExcludeSpecialI">
      <MemberSignature Language="C#" Value="public const Android.Icu.Text.NormalizerCompareOptions FoldCaseExcludeSpecialI = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Icu.Text.NormalizerCompareOptions FoldCaseExcludeSpecialI = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Text.Normalizer.FoldCaseExcludeSpecialI" />
      <MemberSignature Language="F#" Value="val mutable FoldCaseExcludeSpecialI : Android.Icu.Text.NormalizerCompareOptions" Usage="Android.Icu.Text.Normalizer.FoldCaseExcludeSpecialI" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FOLD_CASE_EXCLUDE_SPECIAL_I", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FOLD_CASE_EXCLUDE_SPECIAL_I", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Icu.Text.NormalizerCompareOptions enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Icu.Text.NormalizerCompareOptions enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.NormalizerCompareOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Option value for case folding:
            Use the modified set of mappings provided in CaseFolding.</summary>
        <remarks>
          <para>Option value for case folding:
            Use the modified set of mappings provided in CaseFolding.txt to handle dotted I
            and dotless i appropriately for Turkic languages (tr, az).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer#FOLD_CASE_EXCLUDE_SPECIAL_I" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer.FOLD_CASE_EXCLUDE_SPECIAL_I</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputIsFcd">
      <MemberSignature Language="C#" Value="public const Android.Icu.Text.NormalizerCompareOptions InputIsFcd = 131072;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Icu.Text.NormalizerCompareOptions InputIsFcd = (131072)" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Text.Normalizer.InputIsFcd" />
      <MemberSignature Language="F#" Value="val mutable InputIsFcd : Android.Icu.Text.NormalizerCompareOptions" Usage="Android.Icu.Text.Normalizer.InputIsFcd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("INPUT_IS_FCD", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("INPUT_IS_FCD", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Icu.Text.NormalizerCompareOptions enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Icu.Text.NormalizerCompareOptions enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.NormalizerCompareOptions</ReturnType>
      </ReturnValue>
      <MemberValue>131072</MemberValue>
      <Docs>
        <summary>Option bit for compare:
            Both input strings are assumed to fulfill FCD conditions.</summary>
        <remarks>
          <para>Option bit for compare:
            Both input strings are assumed to fulfill FCD conditions.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer#INPUT_IS_FCD" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer.INPUT_IS_FCD</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Java.Interop.IJavaPeerable.UnregisterFromRuntime">
      <MemberSignature Language="C#" Value="void IJavaPeerable.UnregisterFromRuntime ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Java.Interop.IJavaPeerable.UnregisterFromRuntime() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer.Java#Interop#IJavaPeerable#UnregisterFromRuntime" />
      <MemberSignature Language="F#" Value="abstract member Java.Interop.IJavaPeerable.UnregisterFromRuntime : unit -&gt; unit&#xA;override this.Java.Interop.IJavaPeerable.UnregisterFromRuntime : unit -&gt; unit" Usage="normalizer.Java.Interop.IJavaPeerable.UnregisterFromRuntime " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Interop.IJavaPeerable.UnregisterFromRuntime</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.Normalizer.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Icu.Text.Normalizer.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Maybe">
      <MemberSignature Language="C#" Value="public static Android.Icu.Text.Normalizer.QuickCheckResult? Maybe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Icu.Text.Normalizer/QuickCheckResult Maybe" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.Normalizer.Maybe" />
      <MemberSignature Language="F#" Value="static member Maybe : Android.Icu.Text.Normalizer.QuickCheckResult" Usage="Android.Icu.Text.Normalizer.Maybe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MAYBE", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MAYBE", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.Normalizer+QuickCheckResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="No">
      <MemberSignature Language="C#" Value="public static Android.Icu.Text.Normalizer.QuickCheckResult? No { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Icu.Text.Normalizer/QuickCheckResult No" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.Normalizer.No" />
      <MemberSignature Language="F#" Value="static member No : Android.Icu.Text.Normalizer.QuickCheckResult" Usage="Android.Icu.Text.Normalizer.No" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("NO", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("NO", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.Normalizer+QuickCheckResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.Normalizer.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Icu.Text.Normalizer.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.Normalizer.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Icu.Text.Normalizer.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Yes">
      <MemberSignature Language="C#" Value="public static Android.Icu.Text.Normalizer.QuickCheckResult? Yes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Icu.Text.Normalizer/QuickCheckResult Yes" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.Normalizer.Yes" />
      <MemberSignature Language="F#" Value="static member Yes : Android.Icu.Text.Normalizer.QuickCheckResult" Usage="Android.Icu.Text.Normalizer.Yes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("YES", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("YES", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.Normalizer+QuickCheckResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
