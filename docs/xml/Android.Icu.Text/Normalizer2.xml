<Type Name="Normalizer2" FullName="Android.Icu.Text.Normalizer2">
  <TypeSignature Language="C#" Value="public abstract class Normalizer2 : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Normalizer2 extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Icu.Text.Normalizer2" />
  <TypeSignature Language="F#" Value="type Normalizer2 = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/icu/text/Normalizer2", ApiSince=24, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/icu/text/Normalizer2", ApiSince=24, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Unicode normalization functionality for standard Unicode normalization or
            for using custom mapping tables.</summary>
    <remarks>
      <para>Unicode normalization functionality for standard Unicode normalization or
            for using custom mapping tables.
            All instances of this class are unmodifiable/immutable.
            The Normalizer2 class is not intended for public subclassing.</para>
      <para>The primary functions are to produce a normalized string and to detect whether
            a string is already normalized.
            The most commonly used normalization forms are those defined in
            https://www.unicode.org/reports/tr15/
            However, this API supports additional normalization forms for specialized purposes.
            For example, NFKC_Casefold is provided via getInstance("nfkc_cf", COMPOSE)
            and can be used in implementations of UTS #46.</para>
      <para>Not only are the standard compose and decompose modes supplied,
            but additional modes are provided as documented in the Mode enum.</para>
      <para>Some of the functions in this class identify normalization boundaries.
            At a normalization boundary, the portions of the string
            before it and starting from it do not interact and can be handled independently.</para>
      <para>The spanQuickCheckYes() stops at a normalization boundary.
            When the goal is a normalized string, then the text before the boundary
            can be copied, and the remainder can be processed with normalizeSecondAndAppend().</para>
      <para>The hasBoundaryBefore(), hasBoundaryAfter() and isInert() functions test whether
            a character is guaranteed to be at a normalization boundary,
            regardless of context.
            This is used for moving from one normalization boundary to the next
            or preceding boundary, and for performing iterative normalization.</para>
      <para>Iterative normalization is useful when only a small portion of a
            longer string needs to be processed.
            For example, in ICU, iterative normalization is used by the NormalizationTransliterator
            (to avoid replacing already-normalized text) and ucol_nextSortKeyPart()
            (to process only the substring for which sort key bytes are computed).</para>
      <para>The set of normalization boundaries returned by these functions may not be
            complete: There may be more boundaries that could be returned.
            Different functions may return different boundaries.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/icu/text/Normalizer2" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Normalizer2 (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer2.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Icu.Text.Normalizer2 : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Icu.Text.Normalizer2" Usage="new Android.Icu.Text.Normalizer2 (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.StringBuilder? Append (Java.Lang.StringBuilder? first, Java.Lang.ICharSequence? second);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.StringBuilder Append(class Java.Lang.StringBuilder first, class Java.Lang.ICharSequence second) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer2.Append(Java.Lang.StringBuilder,Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member Append : Java.Lang.StringBuilder * Java.Lang.ICharSequence -&gt; Java.Lang.StringBuilder" Usage="normalizer2.Append (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("append", "(Ljava/lang/StringBuilder;Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;", "GetAppend_Ljava_lang_StringBuilder_Ljava_lang_CharSequence_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("append", "(Ljava/lang/StringBuilder;Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;", "GetAppend_Ljava_lang_StringBuilder_Ljava_lang_CharSequence_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="Java.Lang.StringBuilder" />
        <Parameter Name="second" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="first">string, should be normalized</param>
        <param name="second">string, should be normalized</param>
        <summary>Appends the second string to the first string
            (merging them at the boundary) and returns the first string.</summary>
        <returns>first</returns>
        <remarks>
          <para>Appends the second string to the first string
            (merging them at the boundary) and returns the first string.
            The result is normalized if both the strings were normalized.
            The first and second strings must be different objects.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#append(java.lang.StringBuilder,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.append(java.lang.StringBuilder, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public Java.Lang.StringBuilder? Append (Java.Lang.StringBuilder? first, string? second);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.StringBuilder Append(class Java.Lang.StringBuilder first, string second) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer2.Append(Java.Lang.StringBuilder,System.String)" />
      <MemberSignature Language="F#" Value="member this.Append : Java.Lang.StringBuilder * string -&gt; Java.Lang.StringBuilder" Usage="normalizer2.Append (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="Java.Lang.StringBuilder" />
        <Parameter Name="second" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="first">string, should be normalized</param>
        <param name="second">string, should be normalized</param>
        <summary>Appends the second string to the first string
            (merging them at the boundary) and returns the first string.</summary>
        <returns>first</returns>
        <remarks>
          <para>Appends the second string to the first string
            (merging them at the boundary) and returns the first string.
            The result is normalized if both the strings were normalized.
            The first and second strings must be different objects.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#append(java.lang.StringBuilder,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.append(java.lang.StringBuilder, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComposePair">
      <MemberSignature Language="C#" Value="public virtual int ComposePair (int a, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ComposePair(int32 a, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer2.ComposePair(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member ComposePair : int * int -&gt; int&#xA;override this.ComposePair : int * int -&gt; int" Usage="normalizer2.ComposePair (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("composePair", "(II)I", "GetComposePair_IIHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("composePair", "(II)I", "GetComposePair_IIHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">A (normalization starter) code point.</param>
        <param name="b">Another code point.</param>
        <summary>Performs pairwise composition of a &amp;amp; b and returns the composite if there is one.</summary>
        <returns>The non-negative composite code point if there is one; otherwise a negative value.</returns>
        <remarks>
          <para>Performs pairwise composition of a &amp;amp; b and returns the composite if there is one.</para>
          <para>Returns a composite code point c only if c has a two-way mapping to a+b.
            In standard Unicode normalization, this means that
            c has a canonical decomposition to a+b
            and c does not have the Full_Composition_Exclusion property.</para>
          <para>This function is independent of the mode of the Normalizer2.
            The default implementation returns a negative value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#composePair(int,%20int)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.composePair(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCombiningClass">
      <MemberSignature Language="C#" Value="public virtual int GetCombiningClass (int c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCombiningClass(int32 c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer2.GetCombiningClass(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetCombiningClass : int -&gt; int&#xA;override this.GetCombiningClass : int -&gt; int" Usage="normalizer2.GetCombiningClass c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCombiningClass", "(I)I", "GetGetCombiningClass_IHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCombiningClass", "(I)I", "GetGetCombiningClass_IHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="c">code point</param>
        <summary>Gets the combining class of c.</summary>
        <returns>c's combining class</returns>
        <remarks>
          <para>Gets the combining class of c.
            The default implementation returns 0
            but all standard implementations return the Unicode Canonical_Combining_Class value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#getCombiningClass(int)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.getCombiningClass(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDecomposition">
      <MemberSignature Language="C#" Value="public abstract string? GetDecomposition (int c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDecomposition(int32 c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer2.GetDecomposition(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetDecomposition : int -&gt; string" Usage="normalizer2.GetDecomposition c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDecomposition", "(I)Ljava/lang/String;", "GetGetDecomposition_IHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDecomposition", "(I)Ljava/lang/String;", "GetGetDecomposition_IHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="c">code point</param>
        <summary>Gets the decomposition mapping of c.</summary>
        <returns>c's decomposition mapping, if any; otherwise null</returns>
        <remarks>
          <para>Gets the decomposition mapping of c.
            Roughly equivalent to normalizing the String form of c
            on a DECOMPOSE Normalizer2 instance, but much faster, and except that this function
            returns null if c does not have a decomposition mapping in this instance's data.
            This function is independent of the mode of the Normalizer2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#getDecomposition(int)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.getDecomposition(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Android.Icu.Text.Normalizer2? GetInstance (System.IO.Stream? data, string? name, Android.Icu.Text.Normalizer2.Mode? mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Icu.Text.Normalizer2 GetInstance(class System.IO.Stream data, string name, class Android.Icu.Text.Normalizer2/Mode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer2.GetInstance(System.IO.Stream,System.String,Android.Icu.Text.Normalizer2.Mode)" />
      <MemberSignature Language="F#" Value="static member GetInstance : System.IO.Stream * string * Android.Icu.Text.Normalizer2.Mode -&gt; Android.Icu.Text.Normalizer2" Usage="Android.Icu.Text.Normalizer2.GetInstance (data, name, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Ljava/io/InputStream;Ljava/lang/String;Landroid/icu/text/Normalizer2$Mode;)Landroid/icu/text/Normalizer2;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Ljava/io/InputStream;Ljava/lang/String;Landroid/icu/text/Normalizer2$Mode;)Landroid/icu/text/Normalizer2;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.Normalizer2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="mode" Type="Android.Icu.Text.Normalizer2+Mode" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="name">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRawDecomposition">
      <MemberSignature Language="C#" Value="public virtual string? GetRawDecomposition (int c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetRawDecomposition(int32 c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer2.GetRawDecomposition(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetRawDecomposition : int -&gt; string&#xA;override this.GetRawDecomposition : int -&gt; string" Usage="normalizer2.GetRawDecomposition c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getRawDecomposition", "(I)Ljava/lang/String;", "GetGetRawDecomposition_IHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getRawDecomposition", "(I)Ljava/lang/String;", "GetGetRawDecomposition_IHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="c">code point</param>
        <summary>Gets the raw decomposition mapping of c.</summary>
        <returns>c's raw decomposition mapping, if any; otherwise null</returns>
        <remarks>
          <para>Gets the raw decomposition mapping of c.</para>
          <para>This is similar to the getDecomposition() method but returns the
            raw decomposition mapping as specified in UnicodeData.txt or
            (for custom data) in the mapping files processed by the gennorm2 tool.
            By contrast, getDecomposition() returns the processed,
            recursively-decomposed version of this mapping.</para>
          <para>When used on a standard NFKC Normalizer2 instance,
            getRawDecomposition() returns the Unicode Decomposition_Mapping (dm) property.</para>
          <para>When used on a standard NFC Normalizer2 instance,
            it returns the Decomposition_Mapping only if the Decomposition_Type (dt) is Canonical (Can);
            in this case, the result contains either one or two code points (=1..4 Java chars).</para>
          <para>This function is independent of the mode of the Normalizer2.
            The default implementation returns null.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#getRawDecomposition(int)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.getRawDecomposition(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasBoundaryAfter">
      <MemberSignature Language="C#" Value="public abstract bool HasBoundaryAfter (int c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasBoundaryAfter(int32 c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer2.HasBoundaryAfter(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member HasBoundaryAfter : int -&gt; bool" Usage="normalizer2.HasBoundaryAfter c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hasBoundaryAfter", "(I)Z", "GetHasBoundaryAfter_IHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hasBoundaryAfter", "(I)Z", "GetHasBoundaryAfter_IHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="c">character to test</param>
        <summary>Tests if the character always has a normalization boundary after it,
            regardless of context.</summary>
        <returns>true if c has a normalization boundary after it</returns>
        <remarks>
          <para>Tests if the character always has a normalization boundary after it,
            regardless of context.
            If true, then the character does not normalization-interact with
            following characters.
            In other words, a string containing this character can be normalized
            by processing portions up to this character and after this
            character independently.
            This is used for iterative normalization. See the class documentation for details.</para>
          <para>Note that this operation may be significantly slower than hasBoundaryBefore().</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#hasBoundaryAfter(int)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.hasBoundaryAfter(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasBoundaryBefore">
      <MemberSignature Language="C#" Value="public abstract bool HasBoundaryBefore (int c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasBoundaryBefore(int32 c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer2.HasBoundaryBefore(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member HasBoundaryBefore : int -&gt; bool" Usage="normalizer2.HasBoundaryBefore c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hasBoundaryBefore", "(I)Z", "GetHasBoundaryBefore_IHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hasBoundaryBefore", "(I)Z", "GetHasBoundaryBefore_IHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="c">character to test</param>
        <summary>Tests if the character always has a normalization boundary before it,
            regardless of context.</summary>
        <returns>true if c has a normalization boundary before it</returns>
        <remarks>
          <para>Tests if the character always has a normalization boundary before it,
            regardless of context.
            If true, then the character does not normalization-interact with
            preceding characters.
            In other words, a string containing this character can be normalized
            by processing portions before this character and starting from this
            character independently.
            This is used for iterative normalization. See the class documentation for details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#hasBoundaryBefore(int)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.hasBoundaryBefore(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInert">
      <MemberSignature Language="C#" Value="public abstract bool IsInert (int c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInert(int32 c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer2.IsInert(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member IsInert : int -&gt; bool" Usage="normalizer2.IsInert c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isInert", "(I)Z", "GetIsInert_IHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isInert", "(I)Z", "GetIsInert_IHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="c">character to test</param>
        <summary>Tests if the character is normalization-inert.</summary>
        <returns>true if c is normalization-inert</returns>
        <remarks>
          <para>Tests if the character is normalization-inert.
            If true, then the character does not change, nor normalization-interact with
            preceding or following characters.
            In other words, a string containing this character can be normalized
            by processing portions before this character and after this
            character independently.
            This is used for iterative normalization. See the class documentation for details.</para>
          <para>Note that this operation may be significantly slower than hasBoundaryBefore().</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#isInert(int)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.isInert(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNormalized">
      <MemberSignature Language="C#" Value="public abstract bool IsNormalized (Java.Lang.ICharSequence? s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsNormalized(class Java.Lang.ICharSequence s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer2.IsNormalized(Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member IsNormalized : Java.Lang.ICharSequence -&gt; bool" Usage="normalizer2.IsNormalized s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isNormalized", "(Ljava/lang/CharSequence;)Z", "GetIsNormalized_Ljava_lang_CharSequence_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isNormalized", "(Ljava/lang/CharSequence;)Z", "GetIsNormalized_Ljava_lang_CharSequence_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="s">input string</param>
        <summary>Tests if the string is normalized.</summary>
        <returns>true if s is normalized</returns>
        <remarks>
          <para>Tests if the string is normalized.
            Internally, in cases where the quickCheck() method would return "maybe"
            (which is only possible for the two COMPOSE modes) this method
            resolves to "yes" or "no" to provide a definitive result,
            at the cost of doing more work in those cases.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#isNormalized(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.isNormalized(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNormalized">
      <MemberSignature Language="C#" Value="public bool IsNormalized (string? s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNormalized(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer2.IsNormalized(System.String)" />
      <MemberSignature Language="F#" Value="member this.IsNormalized : string -&gt; bool" Usage="normalizer2.IsNormalized s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">input string</param>
        <summary>Tests if the string is normalized.</summary>
        <returns>true if s is normalized</returns>
        <remarks>
          <para>Tests if the string is normalized.
            Internally, in cases where the quickCheck() method would return "maybe"
            (which is only possible for the two COMPOSE modes) this method
            resolves to "yes" or "no" to provide a definitive result,
            at the cost of doing more work in those cases.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#isNormalized(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.isNormalized(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.Normalizer2.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Icu.Text.Normalizer2.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NFCInstance">
      <MemberSignature Language="C#" Value="public static Android.Icu.Text.Normalizer2? NFCInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Icu.Text.Normalizer2 NFCInstance" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.Normalizer2.NFCInstance" />
      <MemberSignature Language="F#" Value="static member NFCInstance : Android.Icu.Text.Normalizer2" Usage="Android.Icu.Text.Normalizer2.NFCInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNFCInstance", "()Landroid/icu/text/Normalizer2;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNFCInstance", "()Landroid/icu/text/Normalizer2;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.Normalizer2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a Normalizer2 instance for Unicode NFC normalization.</summary>
        <value>the requested Normalizer2, if successful</value>
        <remarks>
          <para>Returns a Normalizer2 instance for Unicode NFC normalization.
            Same as getInstance(null, "nfc", Mode.COMPOSE).
            Returns an unmodifiable singleton instance.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#getNFCInstance()" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.getNFCInstance()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NFDInstance">
      <MemberSignature Language="C#" Value="public static Android.Icu.Text.Normalizer2? NFDInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Icu.Text.Normalizer2 NFDInstance" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.Normalizer2.NFDInstance" />
      <MemberSignature Language="F#" Value="static member NFDInstance : Android.Icu.Text.Normalizer2" Usage="Android.Icu.Text.Normalizer2.NFDInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNFDInstance", "()Landroid/icu/text/Normalizer2;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNFDInstance", "()Landroid/icu/text/Normalizer2;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.Normalizer2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a Normalizer2 instance for Unicode NFD normalization.</summary>
        <value>the requested Normalizer2, if successful</value>
        <remarks>
          <para>Returns a Normalizer2 instance for Unicode NFD normalization.
            Same as getInstance(null, "nfc", Mode.DECOMPOSE).
            Returns an unmodifiable singleton instance.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#getNFDInstance()" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.getNFDInstance()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NFKCCasefoldInstance">
      <MemberSignature Language="C#" Value="public static Android.Icu.Text.Normalizer2? NFKCCasefoldInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Icu.Text.Normalizer2 NFKCCasefoldInstance" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.Normalizer2.NFKCCasefoldInstance" />
      <MemberSignature Language="F#" Value="static member NFKCCasefoldInstance : Android.Icu.Text.Normalizer2" Usage="Android.Icu.Text.Normalizer2.NFKCCasefoldInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNFKCCasefoldInstance", "()Landroid/icu/text/Normalizer2;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNFKCCasefoldInstance", "()Landroid/icu/text/Normalizer2;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.Normalizer2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a Normalizer2 instance for Unicode toNFKC_Casefold() normalization
            which is equivalent to applying the NFKC_Casefold mappings and then NFC.</summary>
        <value>the requested Normalizer2, if successful</value>
        <remarks>
          <para>Returns a Normalizer2 instance for Unicode toNFKC_Casefold() normalization
            which is equivalent to applying the NFKC_Casefold mappings and then NFC.
            See https://www.unicode.org/reports/tr44/#NFKC_Casefold</para>
          <para>Same as getInstance(null, "nfkc_cf", Mode.COMPOSE).
            Returns an unmodifiable singleton instance.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#getNFKCCasefoldInstance()" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.getNFKCCasefoldInstance()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NFKCInstance">
      <MemberSignature Language="C#" Value="public static Android.Icu.Text.Normalizer2? NFKCInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Icu.Text.Normalizer2 NFKCInstance" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.Normalizer2.NFKCInstance" />
      <MemberSignature Language="F#" Value="static member NFKCInstance : Android.Icu.Text.Normalizer2" Usage="Android.Icu.Text.Normalizer2.NFKCInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNFKCInstance", "()Landroid/icu/text/Normalizer2;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNFKCInstance", "()Landroid/icu/text/Normalizer2;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.Normalizer2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a Normalizer2 instance for Unicode NFKC normalization.</summary>
        <value>the requested Normalizer2, if successful</value>
        <remarks>
          <para>Returns a Normalizer2 instance for Unicode NFKC normalization.
            Same as getInstance(null, "nfkc", Mode.COMPOSE).
            Returns an unmodifiable singleton instance.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#getNFKCInstance()" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.getNFKCInstance()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NFKCSimpleCasefoldInstance">
      <MemberSignature Language="C#" Value="public static Android.Icu.Text.Normalizer2? NFKCSimpleCasefoldInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Icu.Text.Normalizer2 NFKCSimpleCasefoldInstance" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.Normalizer2.NFKCSimpleCasefoldInstance" />
      <MemberSignature Language="F#" Value="static member NFKCSimpleCasefoldInstance : Android.Icu.Text.Normalizer2" Usage="Android.Icu.Text.Normalizer2.NFKCSimpleCasefoldInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android36.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android36.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-36.0">
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNFKCSimpleCasefoldInstance", "()Landroid/icu/text/Normalizer2;", "", ApiSince=36)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNFKCSimpleCasefoldInstance", "()Landroid/icu/text/Normalizer2;", "", ApiSince=36)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.Normalizer2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a Normalizer2 instance for a variant of Unicode toNFKC_Casefold() normalization
            which is equivalent to applying the NFKC_Simple_Casefold mappings and then NFC.</summary>
        <value>the requested Normalizer2, if successful</value>
        <remarks>
          <para>Returns a Normalizer2 instance for a variant of Unicode toNFKC_Casefold() normalization
            which is equivalent to applying the NFKC_Simple_Casefold mappings and then NFC.
            See https://www.unicode.org/reports/tr44/#NFKC_Simple_Casefold</para>
          <para>Same as getInstance(null, "nfkc_scf", Mode.COMPOSE).
            Returns an unmodifiable singleton instance.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#getNFKCSimpleCasefoldInstance()" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.getNFKCSimpleCasefoldInstance()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NFKDInstance">
      <MemberSignature Language="C#" Value="public static Android.Icu.Text.Normalizer2? NFKDInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Icu.Text.Normalizer2 NFKDInstance" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.Normalizer2.NFKDInstance" />
      <MemberSignature Language="F#" Value="static member NFKDInstance : Android.Icu.Text.Normalizer2" Usage="Android.Icu.Text.Normalizer2.NFKDInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNFKDInstance", "()Landroid/icu/text/Normalizer2;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNFKDInstance", "()Landroid/icu/text/Normalizer2;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.Normalizer2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a Normalizer2 instance for Unicode NFKD normalization.</summary>
        <value>the requested Normalizer2, if successful</value>
        <remarks>
          <para>Returns a Normalizer2 instance for Unicode NFKD normalization.
            Same as getInstance(null, "nfkc", Mode.DECOMPOSE).
            Returns an unmodifiable singleton instance.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#getNFKDInstance()" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.getNFKDInstance()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public virtual string? Normalize (Java.Lang.ICharSequence? src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Normalize(class Java.Lang.ICharSequence src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer2.Normalize(Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member Normalize : Java.Lang.ICharSequence -&gt; string&#xA;override this.Normalize : Java.Lang.ICharSequence -&gt; string" Usage="normalizer2.Normalize src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("normalize", "(Ljava/lang/CharSequence;)Ljava/lang/String;", "GetNormalize_Ljava_lang_CharSequence_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("normalize", "(Ljava/lang/CharSequence;)Ljava/lang/String;", "GetNormalize_Ljava_lang_CharSequence_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="src">source string</param>
        <summary>Returns the normalized form of the source string.</summary>
        <returns>normalized src</returns>
        <remarks>
          <para>Returns the normalized form of the source string.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#normalize(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.normalize(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public string? Normalize (string? src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Normalize(string src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer2.Normalize(System.String)" />
      <MemberSignature Language="F#" Value="member this.Normalize : string -&gt; string" Usage="normalizer2.Normalize src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="src">source string</param>
        <summary>Returns the normalized form of the source string.</summary>
        <returns>normalized src</returns>
        <remarks>
          <para>Returns the normalized form of the source string.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#normalize(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.normalize(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.IAppendable? Normalize (Java.Lang.ICharSequence? src, Java.Lang.IAppendable? dest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.IAppendable Normalize(class Java.Lang.ICharSequence src, class Java.Lang.IAppendable dest) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer2.Normalize(Java.Lang.ICharSequence,Java.Lang.IAppendable)" />
      <MemberSignature Language="F#" Value="abstract member Normalize : Java.Lang.ICharSequence * Java.Lang.IAppendable -&gt; Java.Lang.IAppendable" Usage="normalizer2.Normalize (src, dest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("normalize", "(Ljava/lang/CharSequence;Ljava/lang/Appendable;)Ljava/lang/Appendable;", "GetNormalize_Ljava_lang_CharSequence_Ljava_lang_Appendable_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("normalize", "(Ljava/lang/CharSequence;Ljava/lang/Appendable;)Ljava/lang/Appendable;", "GetNormalize_Ljava_lang_CharSequence_Ljava_lang_Appendable_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.IAppendable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Java.Lang.ICharSequence" />
        <Parameter Name="dest" Type="Java.Lang.IAppendable" />
      </Parameters>
      <Docs>
        <param name="src">source string</param>
        <param name="dest">destination Appendable; gets normalized src appended</param>
        <summary>Writes the normalized form of the source string to the destination Appendable
            and returns the destination Appendable.</summary>
        <returns>dest</returns>
        <remarks>
          <para>Writes the normalized form of the source string to the destination Appendable
            and returns the destination Appendable.
            The source and destination strings must be different objects.</para>
          <para>Any <c>java.io.IOException</c> is wrapped into a <c>android.icu.util.ICUUncheckedIOException</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#normalize(java.lang.CharSequence,%20java.lang.Appendable)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.normalize(java.lang.CharSequence, java.lang.Appendable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.StringBuilder? Normalize (Java.Lang.ICharSequence? src, Java.Lang.StringBuilder? dest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.StringBuilder Normalize(class Java.Lang.ICharSequence src, class Java.Lang.StringBuilder dest) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer2.Normalize(Java.Lang.ICharSequence,Java.Lang.StringBuilder)" />
      <MemberSignature Language="F#" Value="abstract member Normalize : Java.Lang.ICharSequence * Java.Lang.StringBuilder -&gt; Java.Lang.StringBuilder" Usage="normalizer2.Normalize (src, dest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("normalize", "(Ljava/lang/CharSequence;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;", "GetNormalize_Ljava_lang_CharSequence_Ljava_lang_StringBuilder_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("normalize", "(Ljava/lang/CharSequence;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;", "GetNormalize_Ljava_lang_CharSequence_Ljava_lang_StringBuilder_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Java.Lang.ICharSequence" />
        <Parameter Name="dest" Type="Java.Lang.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="src">source string</param>
        <param name="dest">destination string; its contents is replaced with normalized src</param>
        <summary>Writes the normalized form of the source string to the destination string
            (replacing its contents) and returns the destination string.</summary>
        <returns>dest</returns>
        <remarks>
          <para>Writes the normalized form of the source string to the destination string
            (replacing its contents) and returns the destination string.
            The source and destination strings must be different objects.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#normalize(java.lang.CharSequence,%20java.lang.StringBuilder)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.normalize(java.lang.CharSequence, java.lang.StringBuilder)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public Java.Lang.IAppendable? Normalize (string? src, Java.Lang.IAppendable? dest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.IAppendable Normalize(string src, class Java.Lang.IAppendable dest) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer2.Normalize(System.String,Java.Lang.IAppendable)" />
      <MemberSignature Language="F#" Value="member this.Normalize : string * Java.Lang.IAppendable -&gt; Java.Lang.IAppendable" Usage="normalizer2.Normalize (src, dest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.IAppendable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.String" />
        <Parameter Name="dest" Type="Java.Lang.IAppendable" />
      </Parameters>
      <Docs>
        <param name="src">source string</param>
        <param name="dest">destination Appendable; gets normalized src appended</param>
        <summary>Writes the normalized form of the source string to the destination Appendable
            and returns the destination Appendable.</summary>
        <returns>dest</returns>
        <remarks>
          <para>Writes the normalized form of the source string to the destination Appendable
            and returns the destination Appendable.
            The source and destination strings must be different objects.</para>
          <para>Any <c>java.io.IOException</c> is wrapped into a <c>android.icu.util.ICUUncheckedIOException</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#normalize(java.lang.CharSequence,%20java.lang.Appendable)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.normalize(java.lang.CharSequence, java.lang.Appendable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public Java.Lang.StringBuilder? Normalize (string? src, Java.Lang.StringBuilder? dest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.StringBuilder Normalize(string src, class Java.Lang.StringBuilder dest) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer2.Normalize(System.String,Java.Lang.StringBuilder)" />
      <MemberSignature Language="F#" Value="member this.Normalize : string * Java.Lang.StringBuilder -&gt; Java.Lang.StringBuilder" Usage="normalizer2.Normalize (src, dest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.String" />
        <Parameter Name="dest" Type="Java.Lang.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="src">source string</param>
        <param name="dest">destination string; its contents is replaced with normalized src</param>
        <summary>Writes the normalized form of the source string to the destination string
            (replacing its contents) and returns the destination string.</summary>
        <returns>dest</returns>
        <remarks>
          <para>Writes the normalized form of the source string to the destination string
            (replacing its contents) and returns the destination string.
            The source and destination strings must be different objects.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#normalize(java.lang.CharSequence,%20java.lang.StringBuilder)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.normalize(java.lang.CharSequence, java.lang.StringBuilder)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizeSecondAndAppend">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.StringBuilder? NormalizeSecondAndAppend (Java.Lang.StringBuilder? first, Java.Lang.ICharSequence? second);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.StringBuilder NormalizeSecondAndAppend(class Java.Lang.StringBuilder first, class Java.Lang.ICharSequence second) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer2.NormalizeSecondAndAppend(Java.Lang.StringBuilder,Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member NormalizeSecondAndAppend : Java.Lang.StringBuilder * Java.Lang.ICharSequence -&gt; Java.Lang.StringBuilder" Usage="normalizer2.NormalizeSecondAndAppend (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("normalizeSecondAndAppend", "(Ljava/lang/StringBuilder;Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;", "GetNormalizeSecondAndAppend_Ljava_lang_StringBuilder_Ljava_lang_CharSequence_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("normalizeSecondAndAppend", "(Ljava/lang/StringBuilder;Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;", "GetNormalizeSecondAndAppend_Ljava_lang_StringBuilder_Ljava_lang_CharSequence_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="Java.Lang.StringBuilder" />
        <Parameter Name="second" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="first">string, should be normalized</param>
        <param name="second">string, will be normalized</param>
        <summary>Appends the normalized form of the second string to the first string
            (merging them at the boundary) and returns the first string.</summary>
        <returns>first</returns>
        <remarks>
          <para>Appends the normalized form of the second string to the first string
            (merging them at the boundary) and returns the first string.
            The result is normalized if the first string was normalized.
            The first and second strings must be different objects.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#normalizeSecondAndAppend(java.lang.StringBuilder,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.normalizeSecondAndAppend(java.lang.StringBuilder, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizeSecondAndAppend">
      <MemberSignature Language="C#" Value="public Java.Lang.StringBuilder? NormalizeSecondAndAppend (Java.Lang.StringBuilder? first, string? second);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.StringBuilder NormalizeSecondAndAppend(class Java.Lang.StringBuilder first, string second) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer2.NormalizeSecondAndAppend(Java.Lang.StringBuilder,System.String)" />
      <MemberSignature Language="F#" Value="member this.NormalizeSecondAndAppend : Java.Lang.StringBuilder * string -&gt; Java.Lang.StringBuilder" Usage="normalizer2.NormalizeSecondAndAppend (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="Java.Lang.StringBuilder" />
        <Parameter Name="second" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="first">string, should be normalized</param>
        <param name="second">string, will be normalized</param>
        <summary>Appends the normalized form of the second string to the first string
            (merging them at the boundary) and returns the first string.</summary>
        <returns>first</returns>
        <remarks>
          <para>Appends the normalized form of the second string to the first string
            (merging them at the boundary) and returns the first string.
            The result is normalized if the first string was normalized.
            The first and second strings must be different objects.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#normalizeSecondAndAppend(java.lang.StringBuilder,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.normalizeSecondAndAppend(java.lang.StringBuilder, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickCheck">
      <MemberSignature Language="C#" Value="public abstract Android.Icu.Text.Normalizer.QuickCheckResult? QuickCheck (Java.Lang.ICharSequence? s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Icu.Text.Normalizer/QuickCheckResult QuickCheck(class Java.Lang.ICharSequence s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer2.QuickCheck(Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member QuickCheck : Java.Lang.ICharSequence -&gt; Android.Icu.Text.Normalizer.QuickCheckResult" Usage="normalizer2.QuickCheck s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("quickCheck", "(Ljava/lang/CharSequence;)Landroid/icu/text/Normalizer$QuickCheckResult;", "GetQuickCheck_Ljava_lang_CharSequence_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("quickCheck", "(Ljava/lang/CharSequence;)Landroid/icu/text/Normalizer$QuickCheckResult;", "GetQuickCheck_Ljava_lang_CharSequence_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.Normalizer+QuickCheckResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickCheck">
      <MemberSignature Language="C#" Value="public Android.Icu.Text.Normalizer.QuickCheckResult? QuickCheck (string? s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Icu.Text.Normalizer/QuickCheckResult QuickCheck(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer2.QuickCheck(System.String)" />
      <MemberSignature Language="F#" Value="member this.QuickCheck : string -&gt; Android.Icu.Text.Normalizer.QuickCheckResult" Usage="normalizer2.QuickCheck s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.Normalizer+QuickCheckResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpanQuickCheckYes">
      <MemberSignature Language="C#" Value="public abstract int SpanQuickCheckYes (Java.Lang.ICharSequence? s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SpanQuickCheckYes(class Java.Lang.ICharSequence s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer2.SpanQuickCheckYes(Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member SpanQuickCheckYes : Java.Lang.ICharSequence -&gt; int" Usage="normalizer2.SpanQuickCheckYes s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("spanQuickCheckYes", "(Ljava/lang/CharSequence;)I", "GetSpanQuickCheckYes_Ljava_lang_CharSequence_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("spanQuickCheckYes", "(Ljava/lang/CharSequence;)I", "GetSpanQuickCheckYes_Ljava_lang_CharSequence_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="s">input string</param>
        <summary>Returns the end of the normalized substring of the input string.</summary>
        <returns>"yes" span end index</returns>
        <remarks>
          <para>Returns the end of the normalized substring of the input string.
            In other words, with <c>end=spanQuickCheckYes(s);</c>
            the substring <c>s.subSequence(0, end)</c>
            will pass the quick check with a "yes" result.</para>
          <para>The returned end index is usually one or more characters before the
            "no" or "maybe" character: The end index is at a normalization boundary.
            (See the class documentation for more about normalization boundaries.)</para>
          <para>When the goal is a normalized string and most input strings are expected
            to be normalized already, then call this method,
            and if it returns a prefix shorter than the input string,
            copy that prefix and use normalizeSecondAndAppend() for the remainder.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#spanQuickCheckYes(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.spanQuickCheckYes(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpanQuickCheckYes">
      <MemberSignature Language="C#" Value="public int SpanQuickCheckYes (string? s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 SpanQuickCheckYes(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.Normalizer2.SpanQuickCheckYes(System.String)" />
      <MemberSignature Language="F#" Value="member this.SpanQuickCheckYes : string -&gt; int" Usage="normalizer2.SpanQuickCheckYes s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">input string</param>
        <summary>Returns the end of the normalized substring of the input string.</summary>
        <returns>"yes" span end index</returns>
        <remarks>
          <para>Returns the end of the normalized substring of the input string.
            In other words, with <c>end=spanQuickCheckYes(s);</c>
            the substring <c>s.subSequence(0, end)</c>
            will pass the quick check with a "yes" result.</para>
          <para>The returned end index is usually one or more characters before the
            "no" or "maybe" character: The end index is at a normalization boundary.
            (See the class documentation for more about normalization boundaries.)</para>
          <para>When the goal is a normalized string and most input strings are expected
            to be normalized already, then call this method,
            and if it returns a prefix shorter than the input string,
            copy that prefix and use normalizeSecondAndAppend() for the remainder.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/Normalizer2#spanQuickCheckYes(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.icu.text.Normalizer2.spanQuickCheckYes(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.Normalizer2.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Icu.Text.Normalizer2.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.Normalizer2.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Icu.Text.Normalizer2.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
