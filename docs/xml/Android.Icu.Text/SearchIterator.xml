<Type Name="SearchIterator" FullName="Android.Icu.Text.SearchIterator">
  <TypeSignature Language="C#" Value="public abstract class SearchIterator : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SearchIterator extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Icu.Text.SearchIterator" />
  <TypeSignature Language="F#" Value="type SearchIterator = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/icu/text/SearchIterator", ApiSince=24, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/icu/text/SearchIterator", ApiSince=24, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <c>SearchIterator</c> is an abstract base class that provides 
            methods to search for a pattern within a text string.</summary>
    <remarks>
      <para>
        <c>SearchIterator</c> is an abstract base class that provides 
            methods to search for a pattern within a text string. Instances of
            <c>SearchIterator</c> maintain a current position and scan over the 
            target text, returning the indices the pattern is matched and the length 
            of each match.</para>
      <para>
        <c>SearchIterator</c> defines a protocol for text searching. 
            Subclasses provide concrete implementations of various search algorithms. 
            For example, <c>StringSearch</c> implements language-sensitive pattern 
            matching based on the comparison rules defined in a 
            <c>RuleBasedCollator</c> object.</para>
      <para>Other options for searching include using a BreakIterator to restrict 
            the points at which matches are detected.</para>
      <para>
        <c>SearchIterator</c> provides an API that is similar to that of
            other text iteration classes such as <c>BreakIterator</c>. Using 
            this class, it is easy to scan through text looking for all occurrences of 
            a given pattern. The following example uses a <c>StringSearch</c> 
            object to find all instances of "fox" in the target string. Any other 
            subclass of <c>SearchIterator</c> can be used in an identical 
            manner.</para>
      <code lang="text/java">&lt;code&gt;
            String target = "The quick brown fox jumped over the lazy fox";
            String pattern = "fox";
            SearchIterator iter = new StringSearch(pattern, target);
            for (int pos = iter.first(); pos != SearchIterator.DONE;
                    pos = iter.next()) {
                System.out.println("Found match at " + pos +
                        ", length is " + iter.getMatchLength());
            }
            &lt;/code&gt;</code>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/icu/text/SearchIterator" title="Reference documentation">Java documentation for <code>android.icu.text.SearchIterator</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SearchIterator (Java.Text.ICharacterIterator? target, Android.Icu.Text.BreakIterator? breaker);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Java.Text.ICharacterIterator target, class Android.Icu.Text.BreakIterator breaker) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.SearchIterator.#ctor(Java.Text.ICharacterIterator,Android.Icu.Text.BreakIterator)" />
      <MemberSignature Language="F#" Value="new Android.Icu.Text.SearchIterator : Java.Text.ICharacterIterator * Android.Icu.Text.BreakIterator -&gt; Android.Icu.Text.SearchIterator" Usage="new Android.Icu.Text.SearchIterator (target, breaker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/text/CharacterIterator;Landroid/icu/text/BreakIterator;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/text/CharacterIterator;Landroid/icu/text/BreakIterator;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="target" Type="Java.Text.ICharacterIterator" />
        <Parameter Name="breaker" Type="Android.Icu.Text.BreakIterator" />
      </Parameters>
      <Docs>
        <param name="target">The target text to be searched.</param>
        <param name="breaker">A <c>BreakIterator</c> that is used to determine the 
                           boundaries of a logical match. This argument can be null.</param>
        <summary>Protected constructor for use by subclasses.</summary>
        <remarks>
          <para>Protected constructor for use by subclasses.
            Initializes the iterator with the argument target text for searching 
            and sets the BreakIterator.
            See class documentation for more details on the use of the target text
            and <c>BreakIterator</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/SearchIterator#SearchIterator(java.text.CharacterIterator,%20android.icu.text.BreakIterator)" title="Reference documentation">Java documentation for <code>android.icu.text.SearchIterator.SearchIterator(java.text.CharacterIterator, android.icu.text.BreakIterator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SearchIterator (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.SearchIterator.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Icu.Text.SearchIterator : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Icu.Text.SearchIterator" Usage="new Android.Icu.Text.SearchIterator (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakIterator">
      <MemberSignature Language="C#" Value="public virtual Android.Icu.Text.BreakIterator? BreakIterator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Icu.Text.BreakIterator BreakIterator" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.SearchIterator.BreakIterator" />
      <MemberSignature Language="F#" Value="member this.BreakIterator : Android.Icu.Text.BreakIterator with get, set" Usage="Android.Icu.Text.SearchIterator.BreakIterator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBreakIterator", "()Landroid/icu/text/BreakIterator;", "GetGetBreakIteratorHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBreakIterator", "()Landroid/icu/text/BreakIterator;", "GetGetBreakIteratorHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setBreakIterator", "(Landroid/icu/text/BreakIterator;)V", "GetSetBreakIterator_Landroid_icu_text_BreakIterator_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setBreakIterator", "(Landroid/icu/text/BreakIterator;)V", "GetSetBreakIterator_Landroid_icu_text_BreakIterator_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.BreakIterator</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="breakiter">A BreakIterator that will be used to restrict the 
                           points at which matches are detected. If a match is 
                           found, but the match's start or end index is not a 
                           boundary as determined by the <c>BreakIterator</c>, 
                           the match will be rejected and another will be searched 
                           for. If this parameter is <c>null</c>, no break
                           detection is attempted.</param>
        <summary>Returns the BreakIterator that is used to restrict the indexes at which 
            matches are detected. -or- Set the BreakIterator that will be used to restrict the points
            at which matches are detected.</summary>
        <value>the BreakIterator set to restrict logic matches</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the BreakIterator that is used to restrict the indexes at which 
            matches are detected. This will be the same object that was passed to 
            the constructor or to <c>#setBreakIterator</c>.
            If the <c>BreakIterator</c> has not been set, <c>null</c> will be returned.
            See <c>#setBreakIterator</c> for more information.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/SearchIterator#getBreakIterator()" title="Reference documentation">Java documentation for <code>android.icu.text.SearchIterator.getBreakIterator()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the BreakIterator that will be used to restrict the points
            at which matches are detected.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/SearchIterator#setBreakIterator(android.icu.text.BreakIterator)" title="Reference documentation">Java documentation for <code>android.icu.text.SearchIterator.setBreakIterator(android.icu.text.BreakIterator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Done">
      <MemberSignature Language="C#" Value="public const int Done = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Done = (-1)" />
      <MemberSignature Language="DocId" Value="F:Android.Icu.Text.SearchIterator.Done" />
      <MemberSignature Language="F#" Value="val mutable Done : int" Usage="Android.Icu.Text.SearchIterator.Done" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DONE", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DONE", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>DONE is returned by previous() and next() after all valid matches have 
            been returned, and by first() and last() if there are no matches at all.</summary>
        <remarks>
          <para>DONE is returned by previous() and next() after all valid matches have 
            been returned, and by first() and last() if there are no matches at all.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/SearchIterator#DONE" title="Reference documentation">Java documentation for <code>android.icu.text.SearchIterator.DONE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="First">
      <MemberSignature Language="C#" Value="public int First ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 First() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.SearchIterator.First" />
      <MemberSignature Language="F#" Value="member this.First : unit -&gt; int" Usage="searchIterator.First " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("first", "()I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("first", "()I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the first index at which the string text matches the search 
            pattern.</summary>
        <returns>The character index of the first match, or 
                    <c>#DONE</c> if there are no matches.</returns>
        <remarks>
          <para>Returns the first index at which the string text matches the search 
            pattern. The iterator is adjusted so that its current index (as 
            returned by <c>#getIndex()</c>) is the match position if one 
            
            was found.
            If a match is not found, <c>#DONE</c> will be returned and
            the iterator will be adjusted to the index <c>#DONE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/SearchIterator#first()" title="Reference documentation">Java documentation for <code>android.icu.text.SearchIterator.first()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Following">
      <MemberSignature Language="C#" Value="public int Following (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Following(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.SearchIterator.Following(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.Following : int -&gt; int" Usage="searchIterator.Following position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("following", "(I)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("following", "(I)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">where search if to start from.</param>
        <summary>Returns the first index equal or greater than <c>position</c> at which the 
            string text matches the search pattern.</summary>
        <returns>The character index of the first match following 
                    <c>position</c>, or <c>#DONE</c> if there are no matches.</returns>
        <remarks>
          <para>Returns the first index equal or greater than <c>position</c> at which the 
            string text matches the search pattern. The iterator is adjusted so 
            that its current index (as returned by <c>#getIndex()</c>) is the 
            match position if one was found.
            If a match is not found, <c>#DONE</c> will be returned and the
            iterator will be adjusted to the index <c>#DONE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/SearchIterator#following(int)" title="Reference documentation">Java documentation for <code>android.icu.text.SearchIterator.following(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementComparisonType">
      <MemberSignature Language="C#" Value="public virtual Android.Icu.Text.SearchIterator.ElementComparisonType? GetElementComparisonType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Icu.Text.SearchIterator/ElementComparisonType GetElementComparisonType() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.SearchIterator.GetElementComparisonType" />
      <MemberSignature Language="F#" Value="abstract member GetElementComparisonType : unit -&gt; Android.Icu.Text.SearchIterator.ElementComparisonType&#xA;override this.GetElementComparisonType : unit -&gt; Android.Icu.Text.SearchIterator.ElementComparisonType" Usage="searchIterator.GetElementComparisonType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getElementComparisonType", "()Landroid/icu/text/SearchIterator$ElementComparisonType;", "GetGetElementComparisonTypeHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getElementComparisonType", "()Landroid/icu/text/SearchIterator$ElementComparisonType;", "GetGetElementComparisonTypeHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.SearchIterator+ElementComparisonType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleNext">
      <MemberSignature Language="C#" Value="protected abstract int HandleNext (int start);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 HandleNext(int32 start) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.SearchIterator.HandleNext(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member HandleNext : int -&gt; int" Usage="searchIterator.HandleNext start" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("handleNext", "(I)I", "GetHandleNext_IHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("handleNext", "(I)I", "GetHandleNext_IHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">The index in the target text at which the search 
                         should start.</param>
        <summary>Abstract method which subclasses override to provide the mechanism
            for finding the next match in the target text.</summary>
        <returns>index at which the match starts, else if match is not found 
                    <c>#DONE</c> is returned</returns>
        <remarks>
          <para>Abstract method which subclasses override to provide the mechanism
            for finding the next match in the target text. This allows different
            subclasses to provide different search algorithms.</para>
          <para>If a match is found, the implementation should return the index at
            which the match starts and should call 
            <c>#setMatchLength</c> with the number of characters 
            in the target text that make up the match. If no match is found, the 
            method should return <c>#DONE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/SearchIterator#handleNext(int)" title="Reference documentation">Java documentation for <code>android.icu.text.SearchIterator.handleNext(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlePrevious">
      <MemberSignature Language="C#" Value="protected abstract int HandlePrevious (int startAt);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 HandlePrevious(int32 startAt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.SearchIterator.HandlePrevious(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member HandlePrevious : int -&gt; int" Usage="searchIterator.HandlePrevious startAt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("handlePrevious", "(I)I", "GetHandlePrevious_IHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("handlePrevious", "(I)I", "GetHandlePrevious_IHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startAt" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startAt">The index in the target text at which the search 
                             should start.</param>
        <summary>Abstract method which subclasses override to provide the mechanism for
            finding the previous match in the target text.</summary>
        <returns>index at which the match starts, else if match is not found 
                    <c>#DONE</c> is returned</returns>
        <remarks>
          <para>Abstract method which subclasses override to provide the mechanism for
            finding the previous match in the target text. This allows different
            subclasses to provide different search algorithms.</para>
          <para>If a match is found, the implementation should return the index at
            which the match starts and should call 
            <c>#setMatchLength</c> with the number of characters 
            in the target text that make up the match. If no match is found, the 
            method should return <c>#DONE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/SearchIterator#handlePrevious(int)" title="Reference documentation">Java documentation for <code>android.icu.text.SearchIterator.handlePrevious(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public abstract int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.SearchIterator.Index" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="Android.Icu.Text.SearchIterator.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getIndex", "()I", "GetGetIndexHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getIndex", "()I", "GetGetIndexHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.SearchIterator.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Icu.Text.SearchIterator.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Last">
      <MemberSignature Language="C#" Value="public int Last ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Last() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.SearchIterator.Last" />
      <MemberSignature Language="F#" Value="member this.Last : unit -&gt; int" Usage="searchIterator.Last " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("last", "()I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("last", "()I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the last index in the target text at which it matches the
            search pattern.</summary>
        <returns>The index of the first match, or <c>#DONE</c> if 
                    there are no matches.</returns>
        <remarks>
          <para>Returns the last index in the target text at which it matches the
            search pattern. The iterator is adjusted so that its current index
            (as returned by <c>#getIndex</c>) is the match position if one was
            found.
            If a match is not found, <c>#DONE</c> will be returned and
            the iterator will be adjusted to the index <c>#DONE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/SearchIterator#last()" title="Reference documentation">Java documentation for <code>android.icu.text.SearchIterator.last()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchedText">
      <MemberSignature Language="C#" Value="public virtual string? MatchedText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MatchedText" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.SearchIterator.MatchedText" />
      <MemberSignature Language="F#" Value="member this.MatchedText : string" Usage="Android.Icu.Text.SearchIterator.MatchedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMatchedText", "()Ljava/lang/String;", "GetGetMatchedTextHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMatchedText", "()Ljava/lang/String;", "GetGetMatchedTextHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the text that was matched by the most recent call to 
            <c>#first</c>, <c>#next</c>, <c>#previous</c>, or <c>#last</c>.</summary>
        <value>the substring in the target test of the most recent match,
                     or null if there is no match currently.</value>
        <remarks>
          <para>Returns the text that was matched by the most recent call to 
            <c>#first</c>, <c>#next</c>, <c>#previous</c>, or <c>#last</c>.
            If the iterator is not pointing at a valid match (e.g. just after 
            construction or after <c>#DONE</c> has been returned, 
            returns an empty string.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/SearchIterator#getMatchedText()" title="Reference documentation">Java documentation for <code>android.icu.text.SearchIterator.getMatchedText()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchLength">
      <MemberSignature Language="C#" Value="public virtual int MatchLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MatchLength" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.SearchIterator.MatchLength" />
      <MemberSignature Language="F#" Value="member this.MatchLength : int" Usage="Android.Icu.Text.SearchIterator.MatchLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMatchLength", "()I", "GetGetMatchLengthHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMatchLength", "()I", "GetGetMatchLengthHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the length of text in the string which matches the search 
            pattern.</summary>
        <value>The length of the match in the target text, or 0 if there
                    is no match currently.</value>
        <remarks>
          <para>Returns the length of text in the string which matches the search 
            pattern. This call returns a valid result only after a successful call 
            to <c>#first</c>, <c>#next</c>, <c>#previous</c>, or <c>#last</c>.
            Just after construction, or after a searching method returns 
            <c>#DONE</c>, this method will return 0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/SearchIterator#getMatchLength()" title="Reference documentation">Java documentation for <code>android.icu.text.SearchIterator.getMatchLength()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchStart">
      <MemberSignature Language="C#" Value="public virtual int MatchStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MatchStart" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.SearchIterator.MatchStart" />
      <MemberSignature Language="F#" Value="member this.MatchStart : int" Usage="Android.Icu.Text.SearchIterator.MatchStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMatchStart", "()I", "GetGetMatchStartHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMatchStart", "()I", "GetGetMatchStartHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the index to the match in the text string that was searched.</summary>
        <value>index of a substring within the text string that is being 
                    searched.</value>
        <remarks>
          <para>Returns the index to the match in the text string that was searched.
            This call returns a valid result only after a successful call to 
            <c>#first</c>, <c>#next</c>, <c>#previous</c>, or <c>#last</c>.
            Just after construction, or after a searching method returns 
            <c>#DONE</c>, this method will return <c>#DONE</c>.</para>
          <para>Use <c>#getMatchLength</c> to get the matched string length.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/SearchIterator#getMatchStart()" title="Reference documentation">Java documentation for <code>android.icu.text.SearchIterator.getMatchStart()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual int Next ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.SearchIterator.Next" />
      <MemberSignature Language="F#" Value="abstract member Next : unit -&gt; int&#xA;override this.Next : unit -&gt; int" Usage="searchIterator.Next " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("next", "()I", "GetNextHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("next", "()I", "GetNextHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the index of the next point at which the text matches the
            search pattern, starting from the current position
            The iterator is adjusted so that its current index (as returned by 
            <c>#getIndex</c>) is the match position if one was found.</summary>
        <returns>The index of the next match after the current position,
                     or <c>#DONE</c> if there are no more matches.</returns>
        <remarks>
          <para>Returns the index of the next point at which the text matches the
            search pattern, starting from the current position
            The iterator is adjusted so that its current index (as returned by 
            <c>#getIndex</c>) is the match position if one was found.
            If a match is not found, <c>#DONE</c> will be returned and
            the iterator will be adjusted to a position after the end of the text 
            string.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/SearchIterator#next()" title="Reference documentation">Java documentation for <code>android.icu.text.SearchIterator.next()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Overlapping">
      <MemberSignature Language="C#" Value="public virtual bool Overlapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Overlapping" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.SearchIterator.Overlapping" />
      <MemberSignature Language="F#" Value="member this.Overlapping : bool with get, set" Usage="Android.Icu.Text.SearchIterator.Overlapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isOverlapping", "()Z", "GetIsOverlappingHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isOverlapping", "()Z", "GetIsOverlappingHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setOverlapping", "(Z)V", "GetSetOverlapping_ZHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setOverlapping", "(Z)V", "GetSetOverlapping_ZHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="allowOverlap">flag indicator if overlapping matches are allowed</param>
        <summary>Return true if the overlapping property has been set. -or- Determines whether overlapping matches are returned.</summary>
        <value>true if the overlapping property has been set, false otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Return true if the overlapping property has been set.
            See <c>#setOverlapping(boolean)</c> for more information.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/SearchIterator#isOverlapping()" title="Reference documentation">Java documentation for <code>android.icu.text.SearchIterator.isOverlapping()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Determines whether overlapping matches are returned. See the class 
            documentation for more information about overlapping matches.</para>
          <para>The default setting of this property is false</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/SearchIterator#setOverlapping(boolean)" title="Reference documentation">Java documentation for <code>android.icu.text.SearchIterator.setOverlapping(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Preceding">
      <MemberSignature Language="C#" Value="public int Preceding (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Preceding(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.SearchIterator.Preceding(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.Preceding : int -&gt; int" Usage="searchIterator.Preceding position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("preceding", "(I)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("preceding", "(I)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">where search is to start from.</param>
        <summary>Returns the first index less than <c>position</c> at which the string 
            text matches the search pattern.</summary>
        <returns>The character index of the first match preceding 
                    <c>position</c>, or <c>#DONE</c> if there are 
                    no matches.</returns>
        <remarks>
          <para>Returns the first index less than <c>position</c> at which the string 
            text matches the search pattern. The iterator is adjusted so that its 
            current index (as returned by <c>#getIndex</c>) is the match 
            position if one was found. If a match is not found, 
            <c>#DONE</c> will be returned and the iterator will be 
            adjusted to the index <c>#DONE</c></para>
          <para>When the overlapping option (<c>#isOverlapping</c>) is off, the last index of the
            result match is always less than <c>position</c>.
            When the overlapping option is on, the result match may span across
            <c>position</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/SearchIterator#preceding(int)" title="Reference documentation">Java documentation for <code>android.icu.text.SearchIterator.preceding(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public virtual int Previous ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Previous() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.SearchIterator.Previous" />
      <MemberSignature Language="F#" Value="abstract member Previous : unit -&gt; int&#xA;override this.Previous : unit -&gt; int" Usage="searchIterator.Previous " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("previous", "()I", "GetPreviousHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("previous", "()I", "GetPreviousHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the index of the previous point at which the string text 
            matches the search pattern, starting at the current position.</summary>
        <returns>The index of the previous match before the current position,
                     or <c>#DONE</c> if there are no more matches.</returns>
        <remarks>
          <para>Returns the index of the previous point at which the string text 
            matches the search pattern, starting at the current position.
            The iterator is adjusted so that its current index (as returned by 
            <c>#getIndex</c>) is the match position if one was found.
            If a match is not found, <c>#DONE</c> will be returned and
            the iterator will be adjusted to the index <c>#DONE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/SearchIterator#previous()" title="Reference documentation">Java documentation for <code>android.icu.text.SearchIterator.previous()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.SearchIterator.Reset" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="searchIterator.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reset", "()V", "GetResetHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reset", "()V", "GetResetHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets the iteration.</summary>
        <remarks>
          <para>Resets the iteration.
            Search will begin at the start of the text string if a forward
            iteration is initiated before a backwards iteration. Otherwise if a
            backwards iteration is initiated before a forwards iteration, the
            search will begin at the end of the text string.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/SearchIterator#reset()" title="Reference documentation">Java documentation for <code>android.icu.text.SearchIterator.reset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetElementComparisonType">
      <MemberSignature Language="C#" Value="public virtual void SetElementComparisonType (Android.Icu.Text.SearchIterator.ElementComparisonType? type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetElementComparisonType(class Android.Icu.Text.SearchIterator/ElementComparisonType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.SearchIterator.SetElementComparisonType(Android.Icu.Text.SearchIterator.ElementComparisonType)" />
      <MemberSignature Language="F#" Value="abstract member SetElementComparisonType : Android.Icu.Text.SearchIterator.ElementComparisonType -&gt; unit&#xA;override this.SetElementComparisonType : Android.Icu.Text.SearchIterator.ElementComparisonType -&gt; unit" Usage="searchIterator.SetElementComparisonType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setElementComparisonType", "(Landroid/icu/text/SearchIterator$ElementComparisonType;)V", "GetSetElementComparisonType_Landroid_icu_text_SearchIterator_ElementComparisonType_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setElementComparisonType", "(Landroid/icu/text/SearchIterator$ElementComparisonType;)V", "GetSetElementComparisonType_Landroid_icu_text_SearchIterator_ElementComparisonType_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Android.Icu.Text.SearchIterator+ElementComparisonType" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIndex">
      <MemberSignature Language="C#" Value="public virtual void SetIndex (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIndex(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.SearchIterator.SetIndex(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetIndex : int -&gt; unit&#xA;override this.SetIndex : int -&gt; unit" Usage="searchIterator.SetIndex position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setIndex", "(I)V", "GetSetIndex_IHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setIndex", "(I)V", "GetSetIndex_IHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">position from which to start the next search</param>
        <summary>Sets the position in the target text at which the next search will start.</summary>
        <remarks>
          <para>Sets the position in the target text at which the next search will start.
            This method clears any previous match.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/SearchIterator#setIndex(int)" title="Reference documentation">Java documentation for <code>android.icu.text.SearchIterator.setIndex(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMatchLength">
      <MemberSignature Language="C#" Value="protected virtual void SetMatchLength (int length);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetMatchLength(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.SearchIterator.SetMatchLength(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetMatchLength : int -&gt; unit&#xA;override this.SetMatchLength : int -&gt; unit" Usage="searchIterator.SetMatchLength length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setMatchLength", "(I)V", "GetSetMatchLength_IHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setMatchLength", "(I)V", "GetSetMatchLength_IHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">new length to set</param>
        <summary>Sets the length of the most recent match in the target text.</summary>
        <remarks>
          <para>Sets the length of the most recent match in the target text. 
            Subclasses' handleNext() and handlePrevious() methods should call this 
            after they find a match in the target text.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/SearchIterator#setMatchLength(int)" title="Reference documentation">Java documentation for <code>android.icu.text.SearchIterator.setMatchLength(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public virtual Java.Text.ICharacterIterator? Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Text.ICharacterIterator Target" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.SearchIterator.Target" />
      <MemberSignature Language="F#" Value="member this.Target : Java.Text.ICharacterIterator with get, set" Usage="Android.Icu.Text.SearchIterator.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTarget", "()Ljava/text/CharacterIterator;", "GetGetTargetHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTarget", "()Ljava/text/CharacterIterator;", "GetGetTargetHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTarget", "(Ljava/text/CharacterIterator;)V", "GetSetTarget_Ljava_text_CharacterIterator_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTarget", "(Ljava/text/CharacterIterator;)V", "GetSetTarget_Ljava_text_CharacterIterator_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.ICharacterIterator</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="text">new text iterator to look for match,</param>
        <summary>Return the string text to be searched. -or- Set the target text to be searched.</summary>
        <value>text string to be searched.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Return the string text to be searched.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/SearchIterator#getTarget()" title="Reference documentation">Java documentation for <code>android.icu.text.SearchIterator.getTarget()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the target text to be searched. Text iteration will then begin at 
            the start of the text string. This method is useful if you want to 
            reuse an iterator to search within a different body of text.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/SearchIterator#setTarget(java.text.CharacterIterator)" title="Reference documentation">Java documentation for <code>android.icu.text.SearchIterator.setTarget(java.text.CharacterIterator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetText">
      <MemberSignature Language="C#" Value="protected Java.Text.ICharacterIterator? TargetText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Text.ICharacterIterator TargetText" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.SearchIterator.TargetText" />
      <MemberSignature Language="F#" Value="member this.TargetText : Java.Text.ICharacterIterator with get, set" Usage="Android.Icu.Text.SearchIterator.TargetText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("targetText", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("targetText", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.ICharacterIterator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Target text for searching.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Target text for searching.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/SearchIterator#targetText" title="Reference documentation">Java documentation for <code>android.icu.text.SearchIterator.targetText</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.SearchIterator.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Icu.Text.SearchIterator.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.SearchIterator.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Icu.Text.SearchIterator.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
