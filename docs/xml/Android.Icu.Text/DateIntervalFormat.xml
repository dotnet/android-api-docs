<Type Name="DateIntervalFormat" FullName="Android.Icu.Text.DateIntervalFormat">
  <TypeSignature Language="C#" Value="public class DateIntervalFormat : Android.Icu.Text.UFormat" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DateIntervalFormat extends Android.Icu.Text.UFormat" />
  <TypeSignature Language="DocId" Value="T:Android.Icu.Text.DateIntervalFormat" />
  <TypeSignature Language="F#" Value="type DateIntervalFormat = class&#xA;    inherit UFormat" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Icu.Text.UFormat</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/icu/text/DateIntervalFormat", ApiSince=24, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/icu/text/DateIntervalFormat", ApiSince=24, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>DateIntervalFormat is a class for formatting and parsing date
            intervals in a language-independent manner.</summary>
    <remarks>
      <para>DateIntervalFormat is a class for formatting and parsing date
            intervals in a language-independent manner.
            Only formatting is supported. Parsing is not supported.</para>
      <para>Date interval means from one date to another date,
            for example, from "Jan 11, 2008" to "Jan 18, 2008".
            We introduced class DateInterval to represent it.
            DateInterval is a pair of UDate, which is
            the standard milliseconds since 24:00 GMT, Jan 1, 1970.</para>
      <para>DateIntervalFormat formats a DateInterval into
            text as compactly as possible.
            For example, the date interval format from "Jan 11, 2008" to "Jan 18,. 2008"
            is "Jan 11-18, 2008" for English.
            And it parses text into DateInterval,
            although initially, parsing is not supported.</para>
      <para>There is no structural information in date time patterns.
            For any punctuations and string literals inside a date time pattern,
            we do not know whether it is just a separator, or a prefix, or a suffix.
            Without such information, so, it is difficult to generate a sub-pattern
            (or super-pattern) by algorithm.
            So, formatting a DateInterval is pattern-driven. It is very
            similar to formatting in SimpleDateFormat.
            We introduce class DateIntervalInfo to save date interval
            patterns, similar to date time pattern in SimpleDateFormat.</para>
      <para>Logically, the interval patterns are mappings
            from (skeleton, the_largest_different_calendar_field)
            to (date_interval_pattern).</para>
      <para>A skeleton
            &lt;ol&gt;
            &lt;li&gt;
            only keeps the field pattern letter and ignores all other parts
            in a pattern, such as space, punctuations, and string literals.
            &lt;li&gt;
            hides the order of fields.
            &lt;li&gt;
            might hide a field's pattern letter length.
            
            For those non-digit calendar fields, the pattern letter length is
            important, such as MMM, MMMM, and MMMMM; EEE and EEEE,
            and the field's pattern letter length is honored.
            
            For the digit calendar fields,  such as M or MM, d or dd, yy or yyyy,
            the field pattern length is ignored and the best match, which is defined
            in date time patterns, will be returned without honor the field pattern
            letter length in skeleton.
            &lt;/ol&gt;</para>
      <para>The calendar fields we support for interval formatting are:
            year, month, date, day-of-week, am-pm, hour, hour-of-day, minute, and
            second (though we do not currently have specific intervalFormat data for
            skeletons with seconds).
            Those calendar fields can be defined in the following order:
            year &amp;gt; month &amp;gt; date &amp;gt; hour (in day) &amp;gt; minute &amp;gt; second
            
            The largest different calendar fields between 2 calendars is the
            first different calendar field in above order.
            
            For example: the largest different calendar fields between "Jan 10, 2007"
            and "Feb 20, 2008" is year.</para>
      <para>For other calendar fields, the compact interval formatting is not
            supported. And the interval format will be fall back to fall-back
            patterns, which is mostly "{date0} - {date1}".</para>
      <para>There is a set of pre-defined static skeleton strings in DateFormat,
            There are pre-defined interval patterns for those pre-defined skeletons
            in locales' resource files.
            For example, for a skeleton YEAR_ABBR_MONTH_DAY, which is  "yMMMd",
            in  en_US, if the largest different calendar field between date1 and date2
            is "year", the date interval pattern  is "MMM d, yyyy - MMM d, yyyy",
            such as "Jan 10, 2007 - Jan 10, 2008".
            If the largest different calendar field between date1 and date2 is "month",
            the date interval pattern is "MMM d - MMM d, yyyy",
            such as "Jan 10 - Feb 10, 2007".
            If the largest different calendar field between date1 and date2 is "day",
            the date interval pattern is ""MMM d-d, yyyy", such as "Jan 10-20, 2007".
            
            For date skeleton, the interval patterns when year, or month, or date is
            different are defined in resource files.
            For time skeleton, the interval patterns when am/pm, or hour, or minute is
            different are defined in resource files.</para>
      <para>If a skeleton is not found in a locale's DateIntervalInfo, which means
            the interval patterns for the skeleton is not defined in resource file,
            the interval pattern will falls back to the interval "fallback" pattern
            defined in resource file.
            If the interval "fallback" pattern is not defined, the default fall-back
            is "{date0} - {data1}".</para>
      <para>For the combination of date and time,
            The rule to genearte interval patterns are:
            &lt;ol&gt;
            &lt;li&gt;
               when the year, month, or day differs, falls back to fall-back
               interval pattern, which mostly is the concatenate the two original
               expressions with a separator between,
               For example, interval pattern from "Jan 10, 2007 10:10 am"
               to "Jan 11, 2007 10:10am" is
               "Jan 10, 2007 10:10 am - Jan 11, 2007 10:10am"
            &lt;li&gt;
               otherwise, present the date followed by the range expression
               for the time.
               For example, interval pattern from "Jan 10, 2007 10:10 am"
               to "Jan 10, 2007 11:10am" is "Jan 10, 2007 10:10 am - 11:10am"
            &lt;/ol&gt;</para>
      <para>If two dates are the same, the interval pattern is the single date pattern.
            For example, interval pattern from "Jan 10, 2007" to "Jan 10, 2007" is
            "Jan 10, 2007".
            
            Or if the presenting fields between 2 dates have the exact same values,
            the interval pattern is the  single date pattern.
            For example, if user only requests year and month,
            the interval pattern from "Jan 10, 2007" to "Jan 20, 2007" is "Jan 2007".</para>
      <para>DateIntervalFormat needs the following information for correct
            formatting: time zone, calendar type, pattern, date format symbols,
            and date interval patterns.
            It can be instantiated in several ways:
            &lt;ol&gt;
            &lt;li&gt;
               create an instance using default or given locale plus given skeleton.
               Users are encouraged to created date interval formatter this way and
               to use the pre-defined skeleton macros, such as
               YEAR_NUM_MONTH, which consists the calendar fields and
               the format style.
            &lt;/li&gt;
            &lt;li&gt;
               create an instance using default or given locale plus given skeleton
               plus a given DateIntervalInfo.
               This factory method is for powerful users who want to provide their own
               interval patterns.
               Locale provides the timezone, calendar, and format symbols information.
               Local plus skeleton provides full pattern information.
               DateIntervalInfo provides the date interval patterns.
            &lt;/li&gt;
            &lt;/ol&gt;</para>
      <para>For the calendar field pattern letter, such as G, y, M, d, a, h, H, m, s etc.
            DateIntervalFormat uses the same syntax as that of
            DateTime format.</para>
      <para>Code Sample: general usage</para>
      <code lang="text/java">// the date interval object which the DateIntervalFormat formats on
              // and parses into
              DateInterval dtInterval = new DateInterval(1000*3600*24L, 1000*3600*24*2L);
              DateIntervalFormat dtIntervalFmt = DateIntervalFormat.getInstance(
                      DateFormat.YEAR_MONTH_DAY, new Locale("en", "GB", ""));
              StringBuffer result = new StringBuffer("");
              FieldPosition pos = new FieldPosition(-1);
              // formatting
              dtIntervalFmt.format(dtInterval, result, pos);
              assertEquals("interval", "1–2 January 1970", result.toString());
            
            </code>
      <para>Code Sample: for powerful users who wants to use their own interval pattern</para>
      <code lang="text/java">import android.icu.text.DateIntervalInfo;
                import android.icu.text.DateIntervalFormat;
                ....................
            
                // Get DateIntervalFormat instance using default locale
                DateIntervalFormat dtitvfmt = DateIntervalFormat.getInstance(YEAR_MONTH_DAY);
            
                // Create an empty DateIntervalInfo object, which does not have any interval patterns inside.
                dtitvinf = new DateIntervalInfo();
            
                // a series of set interval patterns.
                // Only ERA, YEAR, MONTH, DATE,  DAY_OF_MONTH, DAY_OF_WEEK, AM_PM,  HOUR, HOUR_OF_DAY,
                MINUTE, SECOND and MILLISECOND are supported.
                dtitvinf.setIntervalPattern("yMMMd", Calendar.YEAR, "'y ~ y'");
                dtitvinf.setIntervalPattern("yMMMd", Calendar.MONTH, "yyyy 'diff' MMM d - MMM d");
                dtitvinf.setIntervalPattern("yMMMd", Calendar.DATE, "yyyy MMM d ~ d");
                dtitvinf.setIntervalPattern("yMMMd", Calendar.HOUR_OF_DAY, "yyyy MMM d HH:mm ~ HH:mm");
            
                // Set fallback interval pattern. Fallback pattern is used when interval pattern is not found.
                // If the fall-back pattern is not set,  falls back to {date0} - {date1} if interval pattern is not found.
                dtitvinf.setFallbackIntervalPattern("{0} - {1}");
            
                // Set above DateIntervalInfo object as the interval patterns of date interval formatter
                dtitvfmt.setDateIntervalInfo(dtitvinf);
            
                // Prepare to format
                pos = new FieldPosition(0);
                str = new StringBuffer("");
            
                // The 2 calendars should be equivalent, otherwise,  IllegalArgumentException will be thrown by format()
                Calendar fromCalendar = (Calendar) dtfmt.getCalendar().clone();
                Calendar toCalendar = (Calendar) dtfmt.getCalendar().clone();
                fromCalendar.setTimeInMillis(....);
                toCalendar.setTimeInMillis(...);
            
                //Formatting given 2 calendars
                dtitvfmt.format(fromCalendar, toCalendar, str, pos);
            
            
            </code>
      <para>&lt;h3&gt;Synchronization&lt;/h3&gt;
            
            The format methods of DateIntervalFormat may be used concurrently from multiple threads.
            Functions that alter the state of a DateIntervalFormat object (setters)
            may not be used concurrently with any other functions.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/icu/text/DateIntervalFormat" title="Reference documentation">Java documentation for <code>android.icu.text.DateIntervalFormat</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DateIntervalFormat (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.DateIntervalFormat.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Icu.Text.DateIntervalFormat : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Icu.Text.DateIntervalFormat" Usage="new Android.Icu.Text.DateIntervalFormat (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateFormat">
      <MemberSignature Language="C#" Value="public virtual Android.Icu.Text.DateFormat? DateFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Icu.Text.DateFormat DateFormat" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.DateIntervalFormat.DateFormat" />
      <MemberSignature Language="F#" Value="member this.DateFormat : Android.Icu.Text.DateFormat" Usage="Android.Icu.Text.DateIntervalFormat.DateFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDateFormat", "()Landroid/icu/text/DateFormat;", "GetGetDateFormatHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDateFormat", "()Landroid/icu/text/DateFormat;", "GetGetDateFormatHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.DateFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the date formatter</summary>
        <value>a copy of the date formatter associated with
            this date interval formatter.</value>
        <remarks>
          <para>Gets the date formatter</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/DateIntervalFormat#getDateFormat()" title="Reference documentation">Java documentation for <code>android.icu.text.DateIntervalFormat.getDateFormat()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateIntervalInfo">
      <MemberSignature Language="C#" Value="public virtual Android.Icu.Text.DateIntervalInfo? DateIntervalInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Icu.Text.DateIntervalInfo DateIntervalInfo" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.DateIntervalFormat.DateIntervalInfo" />
      <MemberSignature Language="F#" Value="member this.DateIntervalInfo : Android.Icu.Text.DateIntervalInfo with get, set" Usage="Android.Icu.Text.DateIntervalFormat.DateIntervalInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDateIntervalInfo", "()Landroid/icu/text/DateIntervalInfo;", "GetGetDateIntervalInfoHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDateIntervalInfo", "()Landroid/icu/text/DateIntervalInfo;", "GetGetDateIntervalInfoHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setDateIntervalInfo", "(Landroid/icu/text/DateIntervalInfo;)V", "GetSetDateIntervalInfo_Landroid_icu_text_DateIntervalInfo_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setDateIntervalInfo", "(Landroid/icu/text/DateIntervalInfo;)V", "GetSetDateIntervalInfo_Landroid_icu_text_DateIntervalInfo_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.DateIntervalInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="newItvPattern">the given interval patterns to copy.</param>
        <summary>Gets the date time interval patterns. -or- Set the date time interval patterns.</summary>
        <value>a copy of the date time interval patterns associated with
            this date interval formatter.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the date time interval patterns.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/DateIntervalFormat#getDateIntervalInfo()" title="Reference documentation">Java documentation for <code>android.icu.text.DateIntervalFormat.getDateIntervalInfo()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the date time interval patterns.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/DateIntervalFormat#setDateIntervalInfo(android.icu.text.DateIntervalInfo)" title="Reference documentation">Java documentation for <code>android.icu.text.DateIntervalFormat.setDateIntervalInfo(android.icu.text.DateIntervalInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Java.Lang.StringBuffer? Format (Android.Icu.Util.DateInterval? dtInterval, Java.Lang.StringBuffer? appendTo, Java.Text.FieldPosition? fieldPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.StringBuffer Format(class Android.Icu.Util.DateInterval dtInterval, class Java.Lang.StringBuffer appendTo, class Java.Text.FieldPosition fieldPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.DateIntervalFormat.Format(Android.Icu.Util.DateInterval,Java.Lang.StringBuffer,Java.Text.FieldPosition)" />
      <MemberSignature Language="F#" Value="override this.Format : Android.Icu.Util.DateInterval * Java.Lang.StringBuffer * Java.Text.FieldPosition -&gt; Java.Lang.StringBuffer" Usage="dateIntervalFormat.Format (dtInterval, appendTo, fieldPosition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("format", "(Landroid/icu/util/DateInterval;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("format", "(Landroid/icu/util/DateInterval;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.StringBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dtInterval" Type="Android.Icu.Util.DateInterval" />
        <Parameter Name="appendTo" Type="Java.Lang.StringBuffer" />
        <Parameter Name="fieldPosition" Type="Java.Text.FieldPosition" />
      </Parameters>
      <Docs>
        <param name="dtInterval">DateInterval to be formatted.</param>
        <param name="appendTo">Output parameter to receive result.
                                     Result is appended to existing contents.</param>
        <param name="fieldPosition">On input: an alignment field, if desired.
                                     On output: the offsets of the alignment field.
                                     There may be multiple instances of a given field type
                                     in an interval format; in this case the fieldPosition
                                     offsets refer to the first instance.</param>
        <summary>Format a DateInterval to produce a string.</summary>
        <returns>Reference to 'appendTo' parameter.</returns>
        <remarks>
          <para>Format a DateInterval to produce a string.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/DateIntervalFormat#format(android.icu.util.DateInterval,%20java.lang.StringBuffer,%20java.text.FieldPosition)" title="Reference documentation">Java documentation for <code>android.icu.text.DateIntervalFormat.format(android.icu.util.DateInterval, java.lang.StringBuffer, java.text.FieldPosition)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public override sealed Java.Lang.StringBuffer? Format (Java.Lang.Object? obj, Java.Lang.StringBuffer? appendTo, Java.Text.FieldPosition? fieldPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.StringBuffer Format(class Java.Lang.Object obj, class Java.Lang.StringBuffer appendTo, class Java.Text.FieldPosition fieldPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.DateIntervalFormat.Format(Java.Lang.Object,Java.Lang.StringBuffer,Java.Text.FieldPosition)" />
      <MemberSignature Language="F#" Value="override this.Format : Java.Lang.Object * Java.Lang.StringBuffer * Java.Text.FieldPosition -&gt; Java.Lang.StringBuffer" Usage="dateIntervalFormat.Format (obj, appendTo, fieldPosition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("format", "(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("format", "(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.StringBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
        <Parameter Name="appendTo" Type="Java.Lang.StringBuffer" />
        <Parameter Name="fieldPosition" Type="Java.Text.FieldPosition" />
      </Parameters>
      <Docs>
        <param name="obj">The object to format.
                                     Must be a DateInterval.</param>
        <param name="appendTo">Output parameter to receive result.
                                     Result is appended to existing contents.</param>
        <param name="fieldPosition">On input: an alignment field, if desired.
                                     On output: the offsets of the alignment field.
                                     There may be multiple instances of a given field type
                                     in an interval format; in this case the fieldPosition
                                     offsets refer to the first instance.</param>
        <summary>Format an object to produce a string.</summary>
        <returns>Reference to 'appendTo' parameter.</returns>
        <remarks>
          <para>Format an object to produce a string. This method handles Formattable
            objects with a DateInterval type.
            If a the Formattable object type is not a DateInterval,
            IllegalArgumentException is thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/DateIntervalFormat#format(java.lang.Object,%20java.lang.StringBuffer,%20java.text.FieldPosition)" title="Reference documentation">Java documentation for <code>android.icu.text.DateIntervalFormat.format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Java.Lang.StringBuffer? Format (Android.Icu.Util.Calendar? fromCalendar, Android.Icu.Util.Calendar? toCalendar, Java.Lang.StringBuffer? appendTo, Java.Text.FieldPosition? pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.StringBuffer Format(class Android.Icu.Util.Calendar fromCalendar, class Android.Icu.Util.Calendar toCalendar, class Java.Lang.StringBuffer appendTo, class Java.Text.FieldPosition pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.DateIntervalFormat.Format(Android.Icu.Util.Calendar,Android.Icu.Util.Calendar,Java.Lang.StringBuffer,Java.Text.FieldPosition)" />
      <MemberSignature Language="F#" Value="override this.Format : Android.Icu.Util.Calendar * Android.Icu.Util.Calendar * Java.Lang.StringBuffer * Java.Text.FieldPosition -&gt; Java.Lang.StringBuffer" Usage="dateIntervalFormat.Format (fromCalendar, toCalendar, appendTo, pos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("format", "(Landroid/icu/util/Calendar;Landroid/icu/util/Calendar;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("format", "(Landroid/icu/util/Calendar;Landroid/icu/util/Calendar;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.StringBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromCalendar" Type="Android.Icu.Util.Calendar" />
        <Parameter Name="toCalendar" Type="Android.Icu.Util.Calendar" />
        <Parameter Name="appendTo" Type="Java.Lang.StringBuffer" />
        <Parameter Name="pos" Type="Java.Text.FieldPosition" />
      </Parameters>
      <Docs>
        <param name="fromCalendar">calendar set to the from date in date interval
                                     to be formatted into date interval string</param>
        <param name="toCalendar">calendar set to the to date in date interval
                                     to be formatted into date interval string</param>
        <param name="appendTo">Output parameter to receive result.
                                     Result is appended to existing contents.</param>
        <param name="pos">On input: an alignment field, if desired.
                                     On output: the offsets of the alignment field.
                                     There may be multiple instances of a given field type
                                     in an interval format; in this case the fieldPosition
                                     offsets refer to the first instance.</param>
        <summary>Format 2 Calendars to produce a string.</summary>
        <returns>Reference to 'appendTo' parameter.</returns>
        <remarks>
          <para>Format 2 Calendars to produce a string.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/DateIntervalFormat#format(android.icu.util.Calendar,%20android.icu.util.Calendar,%20java.lang.StringBuffer,%20java.text.FieldPosition)" title="Reference documentation">Java documentation for <code>android.icu.text.DateIntervalFormat.format(android.icu.util.Calendar, android.icu.util.Calendar, java.lang.StringBuffer, java.text.FieldPosition)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatToValue">
      <MemberSignature Language="C#" Value="public virtual Android.Icu.Text.DateIntervalFormat.FormattedDateInterval? FormatToValue (Android.Icu.Util.DateInterval? dtInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Icu.Text.DateIntervalFormat/FormattedDateInterval FormatToValue(class Android.Icu.Util.DateInterval dtInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.DateIntervalFormat.FormatToValue(Android.Icu.Util.DateInterval)" />
      <MemberSignature Language="F#" Value="abstract member FormatToValue : Android.Icu.Util.DateInterval -&gt; Android.Icu.Text.DateIntervalFormat.FormattedDateInterval&#xA;override this.FormatToValue : Android.Icu.Util.DateInterval -&gt; Android.Icu.Text.DateIntervalFormat.FormattedDateInterval" Usage="dateIntervalFormat.FormatToValue dtInterval" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("formatToValue", "(Landroid/icu/util/DateInterval;)Landroid/icu/text/DateIntervalFormat$FormattedDateInterval;", "GetFormatToValue_Landroid_icu_util_DateInterval_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("formatToValue", "(Landroid/icu/util/DateInterval;)Landroid/icu/text/DateIntervalFormat$FormattedDateInterval;", "GetFormatToValue_Landroid_icu_util_DateInterval_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.DateIntervalFormat+FormattedDateInterval</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dtInterval" Type="Android.Icu.Util.DateInterval" />
      </Parameters>
      <Docs>
        <param name="dtInterval">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatToValue">
      <MemberSignature Language="C#" Value="public virtual Android.Icu.Text.DateIntervalFormat.FormattedDateInterval? FormatToValue (Android.Icu.Util.Calendar? fromCalendar, Android.Icu.Util.Calendar? toCalendar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Icu.Text.DateIntervalFormat/FormattedDateInterval FormatToValue(class Android.Icu.Util.Calendar fromCalendar, class Android.Icu.Util.Calendar toCalendar) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.DateIntervalFormat.FormatToValue(Android.Icu.Util.Calendar,Android.Icu.Util.Calendar)" />
      <MemberSignature Language="F#" Value="abstract member FormatToValue : Android.Icu.Util.Calendar * Android.Icu.Util.Calendar -&gt; Android.Icu.Text.DateIntervalFormat.FormattedDateInterval&#xA;override this.FormatToValue : Android.Icu.Util.Calendar * Android.Icu.Util.Calendar -&gt; Android.Icu.Text.DateIntervalFormat.FormattedDateInterval" Usage="dateIntervalFormat.FormatToValue (fromCalendar, toCalendar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("formatToValue", "(Landroid/icu/util/Calendar;Landroid/icu/util/Calendar;)Landroid/icu/text/DateIntervalFormat$FormattedDateInterval;", "GetFormatToValue_Landroid_icu_util_Calendar_Landroid_icu_util_Calendar_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("formatToValue", "(Landroid/icu/util/Calendar;Landroid/icu/util/Calendar;)Landroid/icu/text/DateIntervalFormat$FormattedDateInterval;", "GetFormatToValue_Landroid_icu_util_Calendar_Landroid_icu_util_Calendar_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.DateIntervalFormat+FormattedDateInterval</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromCalendar" Type="Android.Icu.Util.Calendar" />
        <Parameter Name="toCalendar" Type="Android.Icu.Util.Calendar" />
      </Parameters>
      <Docs>
        <param name="fromCalendar">To be added.</param>
        <param name="toCalendar">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public virtual Android.Icu.Text.DisplayContext? GetContext (Android.Icu.Text.DisplayContext.Type? type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Icu.Text.DisplayContext GetContext(class Android.Icu.Text.DisplayContext/Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.DateIntervalFormat.GetContext(Android.Icu.Text.DisplayContext.Type)" />
      <MemberSignature Language="F#" Value="abstract member GetContext : Android.Icu.Text.DisplayContext.Type -&gt; Android.Icu.Text.DisplayContext&#xA;override this.GetContext : Android.Icu.Text.DisplayContext.Type -&gt; Android.Icu.Text.DisplayContext" Usage="dateIntervalFormat.GetContext type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getContext", "(Landroid/icu/text/DisplayContext$Type;)Landroid/icu/text/DisplayContext;", "GetGetContext_Landroid_icu_text_DisplayContext_Type_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getContext", "(Landroid/icu/text/DisplayContext$Type;)Landroid/icu/text/DisplayContext;", "GetGetContext_Landroid_icu_text_DisplayContext_Type_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.DisplayContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Android.Icu.Text.DisplayContext+Type" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Android.Icu.Text.DateIntervalFormat? GetInstance (string? skeleton);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Icu.Text.DateIntervalFormat GetInstance(string skeleton) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.DateIntervalFormat.GetInstance(System.String)" />
      <MemberSignature Language="F#" Value="static member GetInstance : string -&gt; Android.Icu.Text.DateIntervalFormat" Usage="Android.Icu.Text.DateIntervalFormat.GetInstance skeleton" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Ljava/lang/String;)Landroid/icu/text/DateIntervalFormat;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Ljava/lang/String;)Landroid/icu/text/DateIntervalFormat;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.DateIntervalFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skeleton" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="skeleton">the skeleton on which interval format based.</param>
        <summary>Construct a DateIntervalFormat from skeleton and  the default <c>FORMAT</c> locale.</summary>
        <returns>a date time interval formatter.</returns>
        <remarks>
          <para>Construct a DateIntervalFormat from skeleton and  the default <c>FORMAT</c> locale.
            
            This is a convenient override of
            getInstance(String skeleton, ULocale locale)
            with the value of locale as default <c>FORMAT</c> locale.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/DateIntervalFormat#getInstance(java.lang.String)" title="Reference documentation">Java documentation for <code>android.icu.text.DateIntervalFormat.getInstance(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Android.Icu.Text.DateIntervalFormat? GetInstance (string? skeleton, Android.Icu.Text.DateIntervalInfo? dtitvinf);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Icu.Text.DateIntervalFormat GetInstance(string skeleton, class Android.Icu.Text.DateIntervalInfo dtitvinf) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.DateIntervalFormat.GetInstance(System.String,Android.Icu.Text.DateIntervalInfo)" />
      <MemberSignature Language="F#" Value="static member GetInstance : string * Android.Icu.Text.DateIntervalInfo -&gt; Android.Icu.Text.DateIntervalFormat" Usage="Android.Icu.Text.DateIntervalFormat.GetInstance (skeleton, dtitvinf)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Ljava/lang/String;Landroid/icu/text/DateIntervalInfo;)Landroid/icu/text/DateIntervalFormat;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Ljava/lang/String;Landroid/icu/text/DateIntervalInfo;)Landroid/icu/text/DateIntervalFormat;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.DateIntervalFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skeleton" Type="System.String" />
        <Parameter Name="dtitvinf" Type="Android.Icu.Text.DateIntervalInfo" />
      </Parameters>
      <Docs>
        <param name="skeleton">the skeleton on which interval format based.</param>
        <param name="dtitvinf">the DateIntervalInfo object to be adopted.</param>
        <summary>Construct a DateIntervalFormat from skeleton
             DateIntervalInfo, and the default <c>FORMAT</c> locale.</summary>
        <returns>a date time interval formatter.</returns>
        <remarks>
          <para>Construct a DateIntervalFormat from skeleton
             DateIntervalInfo, and the default <c>FORMAT</c> locale.
            
            This is a convenient override of
            getInstance(String skeleton, ULocale locale, DateIntervalInfo dtitvinf)
            with the locale value as default <c>FORMAT</c> locale.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/DateIntervalFormat#getInstance(java.lang.String,%20android.icu.text.DateIntervalInfo)" title="Reference documentation">Java documentation for <code>android.icu.text.DateIntervalFormat.getInstance(java.lang.String, android.icu.text.DateIntervalInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Android.Icu.Text.DateIntervalFormat? GetInstance (string? skeleton, Android.Icu.Util.ULocale? locale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Icu.Text.DateIntervalFormat GetInstance(string skeleton, class Android.Icu.Util.ULocale locale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.DateIntervalFormat.GetInstance(System.String,Android.Icu.Util.ULocale)" />
      <MemberSignature Language="F#" Value="static member GetInstance : string * Android.Icu.Util.ULocale -&gt; Android.Icu.Text.DateIntervalFormat" Usage="Android.Icu.Text.DateIntervalFormat.GetInstance (skeleton, locale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Ljava/lang/String;Landroid/icu/util/ULocale;)Landroid/icu/text/DateIntervalFormat;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Ljava/lang/String;Landroid/icu/util/ULocale;)Landroid/icu/text/DateIntervalFormat;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.DateIntervalFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skeleton" Type="System.String" />
        <Parameter Name="locale" Type="Android.Icu.Util.ULocale" />
      </Parameters>
      <Docs>
        <param name="skeleton">the skeleton on which interval format based.</param>
        <param name="locale">the given locale</param>
        <summary>Construct a DateIntervalFormat from skeleton and a given locale.</summary>
        <returns>a date time interval formatter.</returns>
        <remarks>
          <para>Construct a DateIntervalFormat from skeleton and a given locale.</para>
          <para>In this factory method,
            the date interval pattern information is load from resource files.
            Users are encouraged to created date interval formatter this way and
            to use the pre-defined skeleton macros.</para>
          <para>There are pre-defined skeletons in DateFormat,
            such as MONTH_DAY, YEAR_MONTH_WEEKDAY_DAY etc.
            
            Those skeletons have pre-defined interval patterns in resource files.
            Users are encouraged to use them.
            For example:
            DateIntervalFormat.getInstance(DateFormat.MONTH_DAY, false, loc);
            
            The given Locale provides the interval patterns.
            For example, for en_GB, if skeleton is YEAR_ABBR_MONTH_WEEKDAY_DAY,
            which is "yMMMEEEd",
            the interval patterns defined in resource file to above skeleton are:
            "EEE, d MMM, yyyy - EEE, d MMM, yyyy" for year differs,
            "EEE, d MMM - EEE, d MMM, yyyy" for month differs,
            "EEE, d - EEE, d MMM, yyyy" for day differs,</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/DateIntervalFormat#getInstance(java.lang.String,%20android.icu.util.ULocale)" title="Reference documentation">Java documentation for <code>android.icu.text.DateIntervalFormat.getInstance(java.lang.String, android.icu.util.ULocale)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Android.Icu.Text.DateIntervalFormat? GetInstance (string? skeleton, Java.Util.Locale? locale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Icu.Text.DateIntervalFormat GetInstance(string skeleton, class Java.Util.Locale locale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.DateIntervalFormat.GetInstance(System.String,Java.Util.Locale)" />
      <MemberSignature Language="F#" Value="static member GetInstance : string * Java.Util.Locale -&gt; Android.Icu.Text.DateIntervalFormat" Usage="Android.Icu.Text.DateIntervalFormat.GetInstance (skeleton, locale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/util/Locale;)Landroid/icu/text/DateIntervalFormat;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/util/Locale;)Landroid/icu/text/DateIntervalFormat;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.DateIntervalFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skeleton" Type="System.String" />
        <Parameter Name="locale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="skeleton">the skeleton on which interval format based.</param>
        <param name="locale">the given locale</param>
        <summary>Construct a DateIntervalFormat from skeleton and a given locale.</summary>
        <returns>a date time interval formatter.</returns>
        <remarks>
          <para>Construct a DateIntervalFormat from skeleton and a given locale.</para>
          <para>This is a convenient override of
            getInstance(String skeleton, ULocale locale)</para>
          <para>Example code:{</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/DateIntervalFormat#getInstance(java.lang.String,%20java.util.Locale)" title="Reference documentation">Java documentation for <code>android.icu.text.DateIntervalFormat.getInstance(java.lang.String, java.util.Locale)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Android.Icu.Text.DateIntervalFormat? GetInstance (string? skeleton, Android.Icu.Util.ULocale? locale, Android.Icu.Text.DateIntervalInfo? dtitvinf);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Icu.Text.DateIntervalFormat GetInstance(string skeleton, class Android.Icu.Util.ULocale locale, class Android.Icu.Text.DateIntervalInfo dtitvinf) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.DateIntervalFormat.GetInstance(System.String,Android.Icu.Util.ULocale,Android.Icu.Text.DateIntervalInfo)" />
      <MemberSignature Language="F#" Value="static member GetInstance : string * Android.Icu.Util.ULocale * Android.Icu.Text.DateIntervalInfo -&gt; Android.Icu.Text.DateIntervalFormat" Usage="Android.Icu.Text.DateIntervalFormat.GetInstance (skeleton, locale, dtitvinf)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Ljava/lang/String;Landroid/icu/util/ULocale;Landroid/icu/text/DateIntervalInfo;)Landroid/icu/text/DateIntervalFormat;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Ljava/lang/String;Landroid/icu/util/ULocale;Landroid/icu/text/DateIntervalInfo;)Landroid/icu/text/DateIntervalFormat;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.DateIntervalFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skeleton" Type="System.String" />
        <Parameter Name="locale" Type="Android.Icu.Util.ULocale" />
        <Parameter Name="dtitvinf" Type="Android.Icu.Text.DateIntervalInfo" />
      </Parameters>
      <Docs>
        <param name="skeleton">the skeleton on which interval format based.</param>
        <param name="locale">the given locale</param>
        <param name="dtitvinf">the DateIntervalInfo object to be adopted.</param>
        <summary>Construct a DateIntervalFormat from skeleton
            a DateIntervalInfo, and the given locale.</summary>
        <returns>a date time interval formatter.</returns>
        <remarks>
          <para>Construct a DateIntervalFormat from skeleton
            a DateIntervalInfo, and the given locale.</para>
          <para>In this factory method, user provides its own date interval pattern
            information, instead of using those pre-defined data in resource file.
            This factory method is for powerful users who want to provide their own
            interval patterns.</para>
          <para>There are pre-defined skeleton in DateFormat,
            such as MONTH_DAY, YEAR_MONTH_WEEKDAY_DAY etc.
            
            Those skeletons have pre-defined interval patterns in resource files.
            Users are encouraged to use them.
            For example:
            DateIntervalFormat.getInstance(DateFormat.MONTH_DAY, false, loc,itvinf);
            
            the DateIntervalInfo provides the interval patterns.
            
            User are encouraged to set default interval pattern in DateIntervalInfo
            as well, if they want to set other interval patterns ( instead of
            reading the interval patterns from resource files).
            When the corresponding interval pattern for a largest calendar different
            field is not found ( if user not set it ), interval format fallback to
            the default interval pattern.
            If user does not provide default interval pattern, it fallback to
            "{date0} - {date1}"</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/DateIntervalFormat#getInstance(java.lang.String,%20android.icu.util.ULocale,%20android.icu.text.DateIntervalInfo)" title="Reference documentation">Java documentation for <code>android.icu.text.DateIntervalFormat.getInstance(java.lang.String, android.icu.util.ULocale, android.icu.text.DateIntervalInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Android.Icu.Text.DateIntervalFormat? GetInstance (string? skeleton, Java.Util.Locale? locale, Android.Icu.Text.DateIntervalInfo? dtitvinf);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Icu.Text.DateIntervalFormat GetInstance(string skeleton, class Java.Util.Locale locale, class Android.Icu.Text.DateIntervalInfo dtitvinf) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.DateIntervalFormat.GetInstance(System.String,Java.Util.Locale,Android.Icu.Text.DateIntervalInfo)" />
      <MemberSignature Language="F#" Value="static member GetInstance : string * Java.Util.Locale * Android.Icu.Text.DateIntervalInfo -&gt; Android.Icu.Text.DateIntervalFormat" Usage="Android.Icu.Text.DateIntervalFormat.GetInstance (skeleton, locale, dtitvinf)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/util/Locale;Landroid/icu/text/DateIntervalInfo;)Landroid/icu/text/DateIntervalFormat;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/util/Locale;Landroid/icu/text/DateIntervalInfo;)Landroid/icu/text/DateIntervalFormat;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Text.DateIntervalFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skeleton" Type="System.String" />
        <Parameter Name="locale" Type="Java.Util.Locale" />
        <Parameter Name="dtitvinf" Type="Android.Icu.Text.DateIntervalInfo" />
      </Parameters>
      <Docs>
        <param name="skeleton">the skeleton on which interval format based.</param>
        <param name="locale">the given locale</param>
        <param name="dtitvinf">the DateIntervalInfo object to be adopted.</param>
        <summary>Construct a DateIntervalFormat from skeleton
            a DateIntervalInfo, and the given locale.</summary>
        <returns>a date time interval formatter.</returns>
        <remarks>
          <para>Construct a DateIntervalFormat from skeleton
            a DateIntervalInfo, and the given locale.</para>
          <para>This is a convenient override of
            getInstance(String skeleton, ULocale locale, DateIntervalInfo dtitvinf)</para>
          <para>Example code:{</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/DateIntervalFormat#getInstance(java.lang.String,%20java.util.Locale,%20android.icu.text.DateIntervalInfo)" title="Reference documentation">Java documentation for <code>android.icu.text.DateIntervalFormat.getInstance(java.lang.String, java.util.Locale, android.icu.text.DateIntervalInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.DateIntervalFormat.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Icu.Text.DateIntervalFormat.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseObject">
      <MemberSignature Language="C#" Value="public override Java.Lang.Object? ParseObject (string? source, Java.Text.ParsePosition? parse_pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.Object ParseObject(string source, class Java.Text.ParsePosition parse_pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.DateIntervalFormat.ParseObject(System.String,Java.Text.ParsePosition)" />
      <MemberSignature Language="F#" Value="override this.ParseObject : string * Java.Text.ParsePosition -&gt; Java.Lang.Object" Usage="dateIntervalFormat.ParseObject (source, parse_pos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parseObject", "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;", "GetParseObject_Ljava_lang_String_Ljava_text_ParsePosition_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parseObject", "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;", "GetParseObject_Ljava_lang_String_Ljava_text_ParsePosition_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="parse_pos" Type="Java.Text.ParsePosition" />
      </Parameters>
      <Docs>
        <param name="source">The string to be parsed into an object.</param>
        <param name="parse_pos">The position to start parsing at. Since no parsing
                             is supported, upon return this param is unchanged.</param>
        <summary>Date interval parsing is not supported.</summary>
        <returns>A newly created <c>Formattable</c> object, or NULL
                             on failure.</returns>
        <remarks>
          <para>Date interval parsing is not supported.</para>
          <para>This method should handle parsing of
            date time interval strings into Formattable objects with
            DateInterval type, which is a pair of UDate.</para>
          <para>Before calling, set parse_pos.index to the offset you want to start
            parsing at in the source. After calling, parse_pos.index is the end of
            the text you parsed. If error occurs, index is unchanged.</para>
          <para>When parsing, leading whitespace is discarded (with a successful parse),
            while trailing whitespace is left as is.</para>
          <para>See Format.parseObject() for more.</para>
          <para>This member is deprecated. This API is ICU internal only.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/DateIntervalFormat#parseObject(java.lang.String,%20java.text.ParsePosition)" title="Reference documentation">Java documentation for <code>android.icu.text.DateIntervalFormat.parseObject(java.lang.String, java.text.ParsePosition)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public virtual void SetContext (Android.Icu.Text.DisplayContext? context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContext(class Android.Icu.Text.DisplayContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Icu.Text.DateIntervalFormat.SetContext(Android.Icu.Text.DisplayContext)" />
      <MemberSignature Language="F#" Value="abstract member SetContext : Android.Icu.Text.DisplayContext -&gt; unit&#xA;override this.SetContext : Android.Icu.Text.DisplayContext -&gt; unit" Usage="dateIntervalFormat.SetContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setContext", "(Landroid/icu/text/DisplayContext;)V", "GetSetContext_Landroid_icu_text_DisplayContext_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setContext", "(Landroid/icu/text/DisplayContext;)V", "GetSetContext_Landroid_icu_text_DisplayContext_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Icu.Text.DisplayContext" />
      </Parameters>
      <Docs>
        <param name="context">The DisplayContext value to set.</param>
        <summary>&lt;strong&gt;[icu]&lt;/strong&gt; Set a particular DisplayContext value in the formatter,
            such as CAPITALIZATION_FOR_STANDALONE.</summary>
        <remarks>
          <para>&lt;strong&gt;[icu]&lt;/strong&gt; Set a particular DisplayContext value in the formatter,
            such as CAPITALIZATION_FOR_STANDALONE. This causes the formatted
            result to be capitalized appropriately for the context in which
            it is intended to be used, considering both the locale and the
            type of field at the beginning of the formatted result.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/DateIntervalFormat#setContext(android.icu.text.DisplayContext)" title="Reference documentation">Java documentation for <code>android.icu.text.DateIntervalFormat.setContext(android.icu.text.DisplayContext)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.DateIntervalFormat.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Icu.Text.DateIntervalFormat.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.DateIntervalFormat.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Icu.Text.DateIntervalFormat.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeZone">
      <MemberSignature Language="C#" Value="public virtual Android.Icu.Util.TimeZone? TimeZone { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Icu.Util.TimeZone TimeZone" />
      <MemberSignature Language="DocId" Value="P:Android.Icu.Text.DateIntervalFormat.TimeZone" />
      <MemberSignature Language="F#" Value="member this.TimeZone : Android.Icu.Util.TimeZone with get, set" Usage="Android.Icu.Text.DateIntervalFormat.TimeZone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTimeZone", "()Landroid/icu/util/TimeZone;", "GetGetTimeZoneHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTimeZone", "()Landroid/icu/util/TimeZone;", "GetGetTimeZoneHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTimeZone", "(Landroid/icu/util/TimeZone;)V", "GetSetTimeZone_Landroid_icu_util_TimeZone_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTimeZone", "(Landroid/icu/util/TimeZone;)V", "GetSetTimeZone_Landroid_icu_util_TimeZone_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Icu.Util.TimeZone</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="zone">The new TimeZone, will be cloned for use by this DateIntervalFormat.</param>
        <summary>Get the TimeZone -or- Set the TimeZone for the calendar used by this DateIntervalFormat object.</summary>
        <value>A copy of the TimeZone associated with this date interval formatter.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Get the TimeZone</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/DateIntervalFormat#getTimeZone()" title="Reference documentation">Java documentation for <code>android.icu.text.DateIntervalFormat.getTimeZone()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the TimeZone for the calendar used by this DateIntervalFormat object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/icu/text/DateIntervalFormat#setTimeZone(android.icu.util.TimeZone)" title="Reference documentation">Java documentation for <code>android.icu.text.DateIntervalFormat.setTimeZone(android.icu.util.TimeZone)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
