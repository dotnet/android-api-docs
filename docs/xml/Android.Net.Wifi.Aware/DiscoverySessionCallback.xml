<Type Name="DiscoverySessionCallback" FullName="Android.Net.Wifi.Aware.DiscoverySessionCallback">
  <TypeSignature Language="C#" Value="public class DiscoverySessionCallback : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DiscoverySessionCallback extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Net.Wifi.Aware.DiscoverySessionCallback" />
  <TypeSignature Language="F#" Value="type DiscoverySessionCallback = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/net/wifi/aware/DiscoverySessionCallback", ApiSince=26, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/net/wifi/aware/DiscoverySessionCallback", ApiSince=26, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Base class for Aware session events callbacks.</summary>
    <remarks>
      <para>Base class for Aware session events callbacks. Should be extended by
            applications wanting notifications. The callbacks are set when a
            publish or subscribe session is created using
            <c>WifiAwareSession#publish(PublishConfig, DiscoverySessionCallback,
            android.os.Handler)</c> or
            <c>WifiAwareSession#subscribe(SubscribeConfig, DiscoverySessionCallback,
            android.os.Handler)</c>.</para>
      <para>A single callback is set at session creation - it cannot be replaced.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySessionCallback" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySessionCallback</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DiscoverySessionCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySessionCallback.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DiscoverySessionCallback (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySessionCallback.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Net.Wifi.Aware.DiscoverySessionCallback : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Net.Wifi.Aware.DiscoverySessionCallback" Usage="new Android.Net.Wifi.Aware.DiscoverySessionCallback (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Net.Wifi.Aware.DiscoverySessionCallback.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Net.Wifi.Aware.DiscoverySessionCallback.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBootstrappingFailed">
      <MemberSignature Language="C#" Value="public virtual void OnBootstrappingFailed (Android.Net.Wifi.Aware.PeerHandle peerHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnBootstrappingFailed(class Android.Net.Wifi.Aware.PeerHandle peerHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySessionCallback.OnBootstrappingFailed(Android.Net.Wifi.Aware.PeerHandle)" />
      <MemberSignature Language="F#" Value="abstract member OnBootstrappingFailed : Android.Net.Wifi.Aware.PeerHandle -&gt; unit&#xA;override this.OnBootstrappingFailed : Android.Net.Wifi.Aware.PeerHandle -&gt; unit" Usage="discoverySessionCallback.OnBootstrappingFailed peerHandle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onBootstrappingFailed", "(Landroid/net/wifi/aware/PeerHandle;)V", "GetOnBootstrappingFailed_Landroid_net_wifi_aware_PeerHandle_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onBootstrappingFailed", "(Landroid/net/wifi/aware/PeerHandle;)V", "GetOnBootstrappingFailed_Landroid_net_wifi_aware_PeerHandle_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerHandle" Type="Android.Net.Wifi.Aware.PeerHandle" />
      </Parameters>
      <Docs>
        <param name="peerHandle">The bootstrapping peer handle</param>
        <summary>Callback indicating that a Bootstrapping method negotiation failed.</summary>
        <remarks>
          <para>Callback indicating that a Bootstrapping method negotiation failed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySessionCallback#onBootstrappingFailed(android.net.wifi.aware.PeerHandle)" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySessionCallback.onBootstrappingFailed(android.net.wifi.aware.PeerHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBootstrappingSucceeded">
      <MemberSignature Language="C#" Value="public virtual void OnBootstrappingSucceeded (Android.Net.Wifi.Aware.PeerHandle peerHandle, Android.Net.Wifi.Aware.AwarePairingBootstrappingMethods method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnBootstrappingSucceeded(class Android.Net.Wifi.Aware.PeerHandle peerHandle, valuetype Android.Net.Wifi.Aware.AwarePairingBootstrappingMethods method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySessionCallback.OnBootstrappingSucceeded(Android.Net.Wifi.Aware.PeerHandle,Android.Net.Wifi.Aware.AwarePairingBootstrappingMethods)" />
      <MemberSignature Language="F#" Value="abstract member OnBootstrappingSucceeded : Android.Net.Wifi.Aware.PeerHandle * Android.Net.Wifi.Aware.AwarePairingBootstrappingMethods -&gt; unit&#xA;override this.OnBootstrappingSucceeded : Android.Net.Wifi.Aware.PeerHandle * Android.Net.Wifi.Aware.AwarePairingBootstrappingMethods -&gt; unit" Usage="discoverySessionCallback.OnBootstrappingSucceeded (peerHandle, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onBootstrappingSucceeded", "(Landroid/net/wifi/aware/PeerHandle;I)V", "GetOnBootstrappingSucceeded_Landroid_net_wifi_aware_PeerHandle_IHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onBootstrappingSucceeded", "(Landroid/net/wifi/aware/PeerHandle;I)V", "GetOnBootstrappingSucceeded_Landroid_net_wifi_aware_PeerHandle_IHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerHandle" Type="Android.Net.Wifi.Aware.PeerHandle" />
        <Parameter Name="method" Type="Android.Net.Wifi.Aware.AwarePairingBootstrappingMethods">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="peerHandle">The bootstrapping peer handle</param>
        <param name="method">The bootstrapping method accept by the peer</param>
        <summary>Callback indicating that a Bootstrapping method negotiation succeeded.</summary>
        <remarks>
          <para>Callback indicating that a Bootstrapping method negotiation succeeded.
            The follow-up out-of-band bootstrapping can start</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySessionCallback#onBootstrappingSucceeded(android.net.wifi.aware.PeerHandle,%20int)" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySessionCallback.onBootstrappingSucceeded(android.net.wifi.aware.PeerHandle, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessageReceived">
      <MemberSignature Language="C#" Value="public virtual void OnMessageReceived (Android.Net.Wifi.Aware.PeerHandle? peerHandle, byte[]? message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnMessageReceived(class Android.Net.Wifi.Aware.PeerHandle peerHandle, unsigned int8[] message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySessionCallback.OnMessageReceived(Android.Net.Wifi.Aware.PeerHandle,System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member OnMessageReceived : Android.Net.Wifi.Aware.PeerHandle * byte[] -&gt; unit&#xA;override this.OnMessageReceived : Android.Net.Wifi.Aware.PeerHandle * byte[] -&gt; unit" Usage="discoverySessionCallback.OnMessageReceived (peerHandle, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onMessageReceived", "(Landroid/net/wifi/aware/PeerHandle;[B)V", "GetOnMessageReceived_Landroid_net_wifi_aware_PeerHandle_arrayBHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onMessageReceived", "(Landroid/net/wifi/aware/PeerHandle;[B)V", "GetOnMessageReceived_Landroid_net_wifi_aware_PeerHandle_arrayBHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerHandle" Type="Android.Net.Wifi.Aware.PeerHandle" />
        <Parameter Name="message" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="peerHandle">An opaque handle to the peer matching our discovery operation.</param>
        <param name="message">A byte array containing the message.</param>
        <summary>Called when a message is received from a discovery session peer - in response to the
            peer's <c>DiscoverySession#sendMessage(PeerHandle, int, byte[])</c>.</summary>
        <remarks>
          <para>Called when a message is received from a discovery session peer - in response to the
            peer's <c>DiscoverySession#sendMessage(PeerHandle, int, byte[])</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySessionCallback#onMessageReceived(android.net.wifi.aware.PeerHandle,%20byte[])" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySessionCallback.onMessageReceived(android.net.wifi.aware.PeerHandle, byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessageSendFailed">
      <MemberSignature Language="C#" Value="public virtual void OnMessageSendFailed (int messageId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnMessageSendFailed(int32 messageId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySessionCallback.OnMessageSendFailed(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnMessageSendFailed : int -&gt; unit&#xA;override this.OnMessageSendFailed : int -&gt; unit" Usage="discoverySessionCallback.OnMessageSendFailed messageId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onMessageSendFailed", "(I)V", "GetOnMessageSendFailed_IHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onMessageSendFailed", "(I)V", "GetOnMessageSendFailed_IHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="messageId">The arbitrary message ID specified when sending the message.</param>
        <summary>Called when message transmission initiated with
            <c>DiscoverySession#sendMessage(PeerHandle, int, byte[])</c> fails.</summary>
        <remarks>
          <para>Called when message transmission initiated with
            <c>DiscoverySession#sendMessage(PeerHandle, int, byte[])</c> fails. E.g. when no ACK is
            received from the peer.</para>
          <para>Note that either this callback or
            <c>DiscoverySessionCallback#onMessageSendSucceeded(int)</c> will be received
            - never both.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySessionCallback#onMessageSendFailed(int)" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySessionCallback.onMessageSendFailed(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessageSendSucceeded">
      <MemberSignature Language="C#" Value="public virtual void OnMessageSendSucceeded (int messageId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnMessageSendSucceeded(int32 messageId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySessionCallback.OnMessageSendSucceeded(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnMessageSendSucceeded : int -&gt; unit&#xA;override this.OnMessageSendSucceeded : int -&gt; unit" Usage="discoverySessionCallback.OnMessageSendSucceeded messageId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onMessageSendSucceeded", "(I)V", "GetOnMessageSendSucceeded_IHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onMessageSendSucceeded", "(I)V", "GetOnMessageSendSucceeded_IHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="messageId">The arbitrary message ID specified when sending the message.</param>
        <summary>Called in response to
            <c>DiscoverySession#sendMessage(PeerHandle, int, byte[])</c>
            when a message is transmitted successfully - i.</summary>
        <remarks>
          <para>Called in response to
            <c>DiscoverySession#sendMessage(PeerHandle, int, byte[])</c>
            when a message is transmitted successfully - i.e. when it was received successfully by the
            peer (corresponds to an ACK being received).</para>
          <para>Note that either this callback or
            <c>DiscoverySessionCallback#onMessageSendFailed(int)</c> will be
            received - never both.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySessionCallback#onMessageSendSucceeded(int)" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySessionCallback.onMessageSendSucceeded(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPairingSetupFailed">
      <MemberSignature Language="C#" Value="public virtual void OnPairingSetupFailed (Android.Net.Wifi.Aware.PeerHandle peerHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPairingSetupFailed(class Android.Net.Wifi.Aware.PeerHandle peerHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySessionCallback.OnPairingSetupFailed(Android.Net.Wifi.Aware.PeerHandle)" />
      <MemberSignature Language="F#" Value="abstract member OnPairingSetupFailed : Android.Net.Wifi.Aware.PeerHandle -&gt; unit&#xA;override this.OnPairingSetupFailed : Android.Net.Wifi.Aware.PeerHandle -&gt; unit" Usage="discoverySessionCallback.OnPairingSetupFailed peerHandle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPairingSetupFailed", "(Landroid/net/wifi/aware/PeerHandle;)V", "GetOnPairingSetupFailed_Landroid_net_wifi_aware_PeerHandle_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPairingSetupFailed", "(Landroid/net/wifi/aware/PeerHandle;)V", "GetOnPairingSetupFailed_Landroid_net_wifi_aware_PeerHandle_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerHandle" Type="Android.Net.Wifi.Aware.PeerHandle" />
      </Parameters>
      <Docs>
        <param name="peerHandle">The pairing peer handle.</param>
        <summary>Callback indicating that a pairing setup process failed.</summary>
        <remarks>
          <para>Callback indicating that a pairing setup process failed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySessionCallback#onPairingSetupFailed(android.net.wifi.aware.PeerHandle)" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySessionCallback.onPairingSetupFailed(android.net.wifi.aware.PeerHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPairingSetupRequestReceived">
      <MemberSignature Language="C#" Value="public virtual void OnPairingSetupRequestReceived (Android.Net.Wifi.Aware.PeerHandle peerHandle, int requestId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPairingSetupRequestReceived(class Android.Net.Wifi.Aware.PeerHandle peerHandle, int32 requestId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySessionCallback.OnPairingSetupRequestReceived(Android.Net.Wifi.Aware.PeerHandle,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnPairingSetupRequestReceived : Android.Net.Wifi.Aware.PeerHandle * int -&gt; unit&#xA;override this.OnPairingSetupRequestReceived : Android.Net.Wifi.Aware.PeerHandle * int -&gt; unit" Usage="discoverySessionCallback.OnPairingSetupRequestReceived (peerHandle, requestId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPairingSetupRequestReceived", "(Landroid/net/wifi/aware/PeerHandle;I)V", "GetOnPairingSetupRequestReceived_Landroid_net_wifi_aware_PeerHandle_IHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPairingSetupRequestReceived", "(Landroid/net/wifi/aware/PeerHandle;I)V", "GetOnPairingSetupRequestReceived_Landroid_net_wifi_aware_PeerHandle_IHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerHandle" Type="Android.Net.Wifi.Aware.PeerHandle" />
        <Parameter Name="requestId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerHandle">The peer's handle where the request is from</param>
        <param name="requestId">The ID of the Aware pairing session</param>
        <summary>Callback indicating that a pairing request is received from peer.</summary>
        <remarks>
          <para>Callback indicating that a pairing request is received from peer.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySessionCallback#onPairingSetupRequestReceived(android.net.wifi.aware.PeerHandle,%20int)" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySessionCallback.onPairingSetupRequestReceived(android.net.wifi.aware.PeerHandle, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPairingSetupSucceeded">
      <MemberSignature Language="C#" Value="public virtual void OnPairingSetupSucceeded (Android.Net.Wifi.Aware.PeerHandle peerHandle, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPairingSetupSucceeded(class Android.Net.Wifi.Aware.PeerHandle peerHandle, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySessionCallback.OnPairingSetupSucceeded(Android.Net.Wifi.Aware.PeerHandle,System.String)" />
      <MemberSignature Language="F#" Value="abstract member OnPairingSetupSucceeded : Android.Net.Wifi.Aware.PeerHandle * string -&gt; unit&#xA;override this.OnPairingSetupSucceeded : Android.Net.Wifi.Aware.PeerHandle * string -&gt; unit" Usage="discoverySessionCallback.OnPairingSetupSucceeded (peerHandle, alias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPairingSetupSucceeded", "(Landroid/net/wifi/aware/PeerHandle;Ljava/lang/String;)V", "GetOnPairingSetupSucceeded_Landroid_net_wifi_aware_PeerHandle_Ljava_lang_String_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPairingSetupSucceeded", "(Landroid/net/wifi/aware/PeerHandle;Ljava/lang/String;)V", "GetOnPairingSetupSucceeded_Landroid_net_wifi_aware_PeerHandle_Ljava_lang_String_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerHandle" Type="Android.Net.Wifi.Aware.PeerHandle" />
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="peerHandle">The pairing peer handle.</param>
        <param name="alias">This is the paired device alias set by the caller.
                              <c>DiscoverySession#initiatePairingRequest(PeerHandle, String, int, String)</c>
                              or
                              <c>DiscoverySession#acceptPairingRequest(int, PeerHandle, String, int, String)</c></param>
        <summary>Callback indicating that a pairing setup process succeeded.</summary>
        <remarks>
          <para>Callback indicating that a pairing setup process succeeded.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySessionCallback#onPairingSetupSucceeded(android.net.wifi.aware.PeerHandle,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySessionCallback.onPairingSetupSucceeded(android.net.wifi.aware.PeerHandle, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPairingVerificationFailed">
      <MemberSignature Language="C#" Value="public virtual void OnPairingVerificationFailed (Android.Net.Wifi.Aware.PeerHandle peerHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPairingVerificationFailed(class Android.Net.Wifi.Aware.PeerHandle peerHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySessionCallback.OnPairingVerificationFailed(Android.Net.Wifi.Aware.PeerHandle)" />
      <MemberSignature Language="F#" Value="abstract member OnPairingVerificationFailed : Android.Net.Wifi.Aware.PeerHandle -&gt; unit&#xA;override this.OnPairingVerificationFailed : Android.Net.Wifi.Aware.PeerHandle -&gt; unit" Usage="discoverySessionCallback.OnPairingVerificationFailed peerHandle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPairingVerificationFailed", "(Landroid/net/wifi/aware/PeerHandle;)V", "GetOnPairingVerificationFailed_Landroid_net_wifi_aware_PeerHandle_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPairingVerificationFailed", "(Landroid/net/wifi/aware/PeerHandle;)V", "GetOnPairingVerificationFailed_Landroid_net_wifi_aware_PeerHandle_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerHandle" Type="Android.Net.Wifi.Aware.PeerHandle" />
      </Parameters>
      <Docs>
        <param name="peerHandle">The pairing peer handle</param>
        <summary>Callback indicating that a pairing verification process failed.</summary>
        <remarks>
          <para>Callback indicating that a pairing verification process failed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySessionCallback#onPairingVerificationFailed(android.net.wifi.aware.PeerHandle)" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySessionCallback.onPairingVerificationFailed(android.net.wifi.aware.PeerHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPairingVerificationSucceed">
      <MemberSignature Language="C#" Value="public virtual void OnPairingVerificationSucceed (Android.Net.Wifi.Aware.PeerHandle peerHandle, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPairingVerificationSucceed(class Android.Net.Wifi.Aware.PeerHandle peerHandle, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySessionCallback.OnPairingVerificationSucceed(Android.Net.Wifi.Aware.PeerHandle,System.String)" />
      <MemberSignature Language="F#" Value="abstract member OnPairingVerificationSucceed : Android.Net.Wifi.Aware.PeerHandle * string -&gt; unit&#xA;override this.OnPairingVerificationSucceed : Android.Net.Wifi.Aware.PeerHandle * string -&gt; unit" Usage="discoverySessionCallback.OnPairingVerificationSucceed (peerHandle, alias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPairingVerificationSucceed", "(Landroid/net/wifi/aware/PeerHandle;Ljava/lang/String;)V", "GetOnPairingVerificationSucceed_Landroid_net_wifi_aware_PeerHandle_Ljava_lang_String_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPairingVerificationSucceed", "(Landroid/net/wifi/aware/PeerHandle;Ljava/lang/String;)V", "GetOnPairingVerificationSucceed_Landroid_net_wifi_aware_PeerHandle_Ljava_lang_String_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerHandle" Type="Android.Net.Wifi.Aware.PeerHandle" />
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="peerHandle">The pairing peer handle</param>
        <param name="alias">This is the paired device alias set by the caller.
                              <c>DiscoverySession#initiatePairingRequest(PeerHandle, String, int, String)</c>
                              or
                              <c>DiscoverySession#acceptPairingRequest(int, PeerHandle, String, int, String)</c></param>
        <summary>Callback indicating that a pairing verification process succeeded.</summary>
        <remarks>
          <para>Callback indicating that a pairing verification process succeeded.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySessionCallback#onPairingVerificationSucceed(android.net.wifi.aware.PeerHandle,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySessionCallback.onPairingVerificationSucceed(android.net.wifi.aware.PeerHandle, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPublishStarted">
      <MemberSignature Language="C#" Value="public virtual void OnPublishStarted (Android.Net.Wifi.Aware.PublishDiscoverySession session);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPublishStarted(class Android.Net.Wifi.Aware.PublishDiscoverySession session) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySessionCallback.OnPublishStarted(Android.Net.Wifi.Aware.PublishDiscoverySession)" />
      <MemberSignature Language="F#" Value="abstract member OnPublishStarted : Android.Net.Wifi.Aware.PublishDiscoverySession -&gt; unit&#xA;override this.OnPublishStarted : Android.Net.Wifi.Aware.PublishDiscoverySession -&gt; unit" Usage="discoverySessionCallback.OnPublishStarted session" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPublishStarted", "(Landroid/net/wifi/aware/PublishDiscoverySession;)V", "GetOnPublishStarted_Landroid_net_wifi_aware_PublishDiscoverySession_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPublishStarted", "(Landroid/net/wifi/aware/PublishDiscoverySession;)V", "GetOnPublishStarted_Landroid_net_wifi_aware_PublishDiscoverySession_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="Android.Net.Wifi.Aware.PublishDiscoverySession" />
      </Parameters>
      <Docs>
        <param name="session">The <c>PublishDiscoverySession</c> used to control the
                       discovery session.</param>
        <summary>Called when a publish operation is started successfully in response to a
            <c>WifiAwareSession#publish(PublishConfig, DiscoverySessionCallback,
            android.os.Handler)</c> operation.</summary>
        <remarks>
          <para>Called when a publish operation is started successfully in response to a
            <c>WifiAwareSession#publish(PublishConfig, DiscoverySessionCallback,
            android.os.Handler)</c> operation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySessionCallback#onPublishStarted(android.net.wifi.aware.PublishDiscoverySession)" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySessionCallback.onPublishStarted(android.net.wifi.aware.PublishDiscoverySession)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnServiceDiscovered">
      <MemberSignature Language="C#" Value="public virtual void OnServiceDiscovered (Android.Net.Wifi.Aware.ServiceDiscoveryInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnServiceDiscovered(class Android.Net.Wifi.Aware.ServiceDiscoveryInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySessionCallback.OnServiceDiscovered(Android.Net.Wifi.Aware.ServiceDiscoveryInfo)" />
      <MemberSignature Language="F#" Value="abstract member OnServiceDiscovered : Android.Net.Wifi.Aware.ServiceDiscoveryInfo -&gt; unit&#xA;override this.OnServiceDiscovered : Android.Net.Wifi.Aware.ServiceDiscoveryInfo -&gt; unit" Usage="discoverySessionCallback.OnServiceDiscovered info" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onServiceDiscovered", "(Landroid/net/wifi/aware/ServiceDiscoveryInfo;)V", "GetOnServiceDiscovered_Landroid_net_wifi_aware_ServiceDiscoveryInfo_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onServiceDiscovered", "(Landroid/net/wifi/aware/ServiceDiscoveryInfo;)V", "GetOnServiceDiscovered_Landroid_net_wifi_aware_ServiceDiscoveryInfo_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Net.Wifi.Aware.ServiceDiscoveryInfo" />
      </Parameters>
      <Docs>
        <param name="info">A <c>ServiceDiscoveryInfo</c> structure containing information on the discovery
                        session and the discovered peer.</param>
        <summary>Called when a subscribe operation results in a service discovery.</summary>
        <remarks>
          <para>Called when a subscribe operation results in a service discovery.</para>
          <para>Note: This method supersedes <c>#onServiceDiscovered(PeerHandle, byte[], List)</c> and
            provides additional information - including cipher suite type and security context of the
            peer. Both the legacy and the new callback will be triggered on discovery.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySessionCallback#onServiceDiscovered(android.net.wifi.aware.ServiceDiscoveryInfo)" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySessionCallback.onServiceDiscovered(android.net.wifi.aware.ServiceDiscoveryInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnServiceDiscovered">
      <MemberSignature Language="C#" Value="public virtual void OnServiceDiscovered (Android.Net.Wifi.Aware.PeerHandle? peerHandle, byte[]? serviceSpecificInfo, System.Collections.Generic.IList&lt;byte[]&gt;? matchFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnServiceDiscovered(class Android.Net.Wifi.Aware.PeerHandle peerHandle, unsigned int8[] serviceSpecificInfo, class System.Collections.Generic.IList`1&lt;unsigned int8[]&gt; matchFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySessionCallback.OnServiceDiscovered(Android.Net.Wifi.Aware.PeerHandle,System.Byte[],System.Collections.Generic.IList{System.Byte[]})" />
      <MemberSignature Language="F#" Value="abstract member OnServiceDiscovered : Android.Net.Wifi.Aware.PeerHandle * byte[] * System.Collections.Generic.IList&lt;byte[]&gt; -&gt; unit&#xA;override this.OnServiceDiscovered : Android.Net.Wifi.Aware.PeerHandle * byte[] * System.Collections.Generic.IList&lt;byte[]&gt; -&gt; unit" Usage="discoverySessionCallback.OnServiceDiscovered (peerHandle, serviceSpecificInfo, matchFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onServiceDiscovered", "(Landroid/net/wifi/aware/PeerHandle;[BLjava/util/List;)V", "GetOnServiceDiscovered_Landroid_net_wifi_aware_PeerHandle_arrayBLjava_util_List_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onServiceDiscovered", "(Landroid/net/wifi/aware/PeerHandle;[BLjava/util/List;)V", "GetOnServiceDiscovered_Landroid_net_wifi_aware_PeerHandle_arrayBLjava_util_List_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerHandle" Type="Android.Net.Wifi.Aware.PeerHandle" />
        <Parameter Name="serviceSpecificInfo" Type="System.Byte[]" />
        <Parameter Name="matchFilter" Type="System.Collections.Generic.IList&lt;System.Byte[]&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="peerHandle">An opaque handle to the peer matching our discovery operation.</param>
        <param name="serviceSpecificInfo">The service specific information (arbitrary
                       byte array) provided by the peer as part of its discovery
                       configuration.</param>
        <param name="matchFilter">The filter which resulted in this service discovery. For
            <c>PublishConfig#PUBLISH_TYPE_UNSOLICITED</c>,
            <c>SubscribeConfig#SUBSCRIBE_TYPE_PASSIVE</c> discovery sessions this is the publisher's
                               match filter. For <c>PublishConfig#PUBLISH_TYPE_SOLICITED</c>,
                               <c>SubscribeConfig#SUBSCRIBE_TYPE_ACTIVE</c> discovery sessions this
                               is the subscriber's match filter.</param>
        <summary>Called when a subscribe operation results in a service discovery.</summary>
        <remarks>
          <para>Called when a subscribe operation results in a service discovery.</para>
          <para>Note that this method and
            <c>#onServiceDiscoveredWithinRange(PeerHandle, byte[], List, int)</c> may be called
            multiple times per service discovery.</para>
          <para>Note: This method is superseded by <c>#onServiceDiscovered(ServiceDiscoveryInfo)</c> which
            returns more information. Note that both legacy and new callback will be triggered on
            discovery.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySessionCallback#onServiceDiscovered(android.net.wifi.aware.PeerHandle,%20byte[],%20java.util.List%3Cbyte[]%3E)" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySessionCallback.onServiceDiscovered(android.net.wifi.aware.PeerHandle, byte[], java.util.List&lt;byte[]&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnServiceDiscoveredWithinRange">
      <MemberSignature Language="C#" Value="public virtual void OnServiceDiscoveredWithinRange (Android.Net.Wifi.Aware.ServiceDiscoveryInfo info, int distanceMm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnServiceDiscoveredWithinRange(class Android.Net.Wifi.Aware.ServiceDiscoveryInfo info, int32 distanceMm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySessionCallback.OnServiceDiscoveredWithinRange(Android.Net.Wifi.Aware.ServiceDiscoveryInfo,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnServiceDiscoveredWithinRange : Android.Net.Wifi.Aware.ServiceDiscoveryInfo * int -&gt; unit&#xA;override this.OnServiceDiscoveredWithinRange : Android.Net.Wifi.Aware.ServiceDiscoveryInfo * int -&gt; unit" Usage="discoverySessionCallback.OnServiceDiscoveredWithinRange (info, distanceMm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onServiceDiscoveredWithinRange", "(Landroid/net/wifi/aware/ServiceDiscoveryInfo;I)V", "GetOnServiceDiscoveredWithinRange_Landroid_net_wifi_aware_ServiceDiscoveryInfo_IHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onServiceDiscoveredWithinRange", "(Landroid/net/wifi/aware/ServiceDiscoveryInfo;I)V", "GetOnServiceDiscoveredWithinRange_Landroid_net_wifi_aware_ServiceDiscoveryInfo_IHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Net.Wifi.Aware.ServiceDiscoveryInfo" />
        <Parameter Name="distanceMm" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="info">A <c>ServiceDiscoveryInfo</c> which indicate service config of the descovery
                        sessions.</param>
        <param name="distanceMm">The measured distance to the Publisher in mm. Note: the measured distance
                              may be negative for very close devices.</param>
        <summary>Called when a subscribe operation results in a
            service discovery.</summary>
        <remarks>
          <para>Called when a subscribe operation results in a
            service discovery. Called when a Subscribe service was configured with a range requirement
            <c>SubscribeConfig.Builder#setMinDistanceMm(int)</c> and/or
            <c>SubscribeConfig.Builder#setMaxDistanceMm(int)</c> and the Publish service was configured
            with <c>PublishConfig.Builder#setRangingEnabled(boolean)</c>.</para>
          <para>If either Publisher or Subscriber does not enable Ranging, or if Ranging is temporarily
            disabled by the underlying device, service discovery proceeds without ranging and the
            <c>#onServiceDiscovered(PeerHandle, byte[], List)</c> is called.</para>
          <para>Note: This method supersedes
            <c>#onServiceDiscoveredWithinRange(PeerHandle, byte[], List, int)</c> and provides
            additional information - including cipher suite type and security context of the peer. Both
            the legacy and the new callback will be triggered on discovery.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySessionCallback#onServiceDiscoveredWithinRange(android.net.wifi.aware.ServiceDiscoveryInfo,%20int)" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySessionCallback.onServiceDiscoveredWithinRange(android.net.wifi.aware.ServiceDiscoveryInfo, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnServiceDiscoveredWithinRange">
      <MemberSignature Language="C#" Value="public virtual void OnServiceDiscoveredWithinRange (Android.Net.Wifi.Aware.PeerHandle? peerHandle, byte[]? serviceSpecificInfo, System.Collections.Generic.IList&lt;byte[]&gt;? matchFilter, int distanceMm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnServiceDiscoveredWithinRange(class Android.Net.Wifi.Aware.PeerHandle peerHandle, unsigned int8[] serviceSpecificInfo, class System.Collections.Generic.IList`1&lt;unsigned int8[]&gt; matchFilter, int32 distanceMm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySessionCallback.OnServiceDiscoveredWithinRange(Android.Net.Wifi.Aware.PeerHandle,System.Byte[],System.Collections.Generic.IList{System.Byte[]},System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnServiceDiscoveredWithinRange : Android.Net.Wifi.Aware.PeerHandle * byte[] * System.Collections.Generic.IList&lt;byte[]&gt; * int -&gt; unit&#xA;override this.OnServiceDiscoveredWithinRange : Android.Net.Wifi.Aware.PeerHandle * byte[] * System.Collections.Generic.IList&lt;byte[]&gt; * int -&gt; unit" Usage="discoverySessionCallback.OnServiceDiscoveredWithinRange (peerHandle, serviceSpecificInfo, matchFilter, distanceMm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onServiceDiscoveredWithinRange", "(Landroid/net/wifi/aware/PeerHandle;[BLjava/util/List;I)V", "GetOnServiceDiscoveredWithinRange_Landroid_net_wifi_aware_PeerHandle_arrayBLjava_util_List_IHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onServiceDiscoveredWithinRange", "(Landroid/net/wifi/aware/PeerHandle;[BLjava/util/List;I)V", "GetOnServiceDiscoveredWithinRange_Landroid_net_wifi_aware_PeerHandle_arrayBLjava_util_List_IHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerHandle" Type="Android.Net.Wifi.Aware.PeerHandle" />
        <Parameter Name="serviceSpecificInfo" Type="System.Byte[]" />
        <Parameter Name="matchFilter" Type="System.Collections.Generic.IList&lt;System.Byte[]&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="distanceMm" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerHandle">An opaque handle to the peer matching our discovery operation.</param>
        <param name="serviceSpecificInfo">The service specific information (arbitrary
                       byte array) provided by the peer as part of its discovery
                       configuration.</param>
        <param name="matchFilter">The filter which resulted in this service discovery. For
            <c>PublishConfig#PUBLISH_TYPE_UNSOLICITED</c>,
            <c>SubscribeConfig#SUBSCRIBE_TYPE_PASSIVE</c> discovery sessions this is the publisher's
                               match filter. For <c>PublishConfig#PUBLISH_TYPE_SOLICITED</c>,
                               <c>SubscribeConfig#SUBSCRIBE_TYPE_ACTIVE</c> discovery sessions this
                               is the subscriber's match filter.</param>
        <param name="distanceMm">The measured distance to the Publisher in mm. Note: the measured distance
                              may be negative for very close devices.</param>
        <summary>Called when a subscribe operation results in a
            service discovery.</summary>
        <remarks>
          <para>Called when a subscribe operation results in a
            service discovery. Called when a Subscribe service was configured with a range requirement
            <c>SubscribeConfig.Builder#setMinDistanceMm(int)</c> and/or
            <c>SubscribeConfig.Builder#setMaxDistanceMm(int)</c> and the Publish service was configured
            with <c>PublishConfig.Builder#setRangingEnabled(boolean)</c>.</para>
          <para>If either Publisher or Subscriber does not enable Ranging, or if Ranging is temporarily
            disabled by the underlying device, service discovery proceeds without ranging and the
            <c>#onServiceDiscovered(PeerHandle, byte[], List)</c> is called.</para>
          <para>Note that this method and <c>#onServiceDiscovered(PeerHandle, byte[], List)</c> may be
            called multiple times per service discovery.</para>
          <para>Note: This method is superseded by
            <c>#onServiceDiscoveredWithinRange(ServiceDiscoveryInfo, int)</c> which returns more
            information. Note that both legacy and new callback will be triggered on discovery.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySessionCallback#onServiceDiscoveredWithinRange(android.net.wifi.aware.PeerHandle,%20byte[],%20java.util.List%3Cbyte[]%3E,%20int)" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySessionCallback.onServiceDiscoveredWithinRange(android.net.wifi.aware.PeerHandle, byte[], java.util.List&lt;byte[]&gt;, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnServiceLost">
      <MemberSignature Language="C#" Value="public virtual void OnServiceLost (Android.Net.Wifi.Aware.PeerHandle peerHandle, int reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnServiceLost(class Android.Net.Wifi.Aware.PeerHandle peerHandle, int32 reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySessionCallback.OnServiceLost(Android.Net.Wifi.Aware.PeerHandle,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnServiceLost : Android.Net.Wifi.Aware.PeerHandle * int -&gt; unit&#xA;override this.OnServiceLost : Android.Net.Wifi.Aware.PeerHandle * int -&gt; unit" Usage="discoverySessionCallback.OnServiceLost (peerHandle, reason)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onServiceLost", "(Landroid/net/wifi/aware/PeerHandle;I)V", "GetOnServiceLost_Landroid_net_wifi_aware_PeerHandle_IHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onServiceLost", "(Landroid/net/wifi/aware/PeerHandle;I)V", "GetOnServiceLost_Landroid_net_wifi_aware_PeerHandle_IHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerHandle" Type="Android.Net.Wifi.Aware.PeerHandle" />
        <Parameter Name="reason" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "WifiAwareDiscoveryLostReasonUnknown", "WifiAwareDiscoveryLostReasonPeerNotVisible" }, Type="Android.Net.Wifi.Aware.WifiAwareManager")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "WifiAwareDiscoveryLostReasonUnknown", "WifiAwareDiscoveryLostReasonPeerNotVisible" }, Type="Android.Net.Wifi.Aware.WifiAwareManager")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="peerHandle">An opaque handle to the peer matching our discovery operation.</param>
        <param name="reason">Discovered service lost reason code. One of
                          <c>WifiAwareManager#WIFI_AWARE_DISCOVERY_LOST_REASON_PEER_NOT_VISIBLE</c>,
                          WifiAwareManager#WIFI_AWARE_DISCOVERY_LOST_REASON_UNKNOWN</param>
        <summary>Called when the discovered service is not available.</summary>
        <remarks>
          <para>Called when the discovered service is not available. All further operations on this
            discovery session will fail. If the service is available again,
            <c>#onServiceDiscovered(PeerHandle, byte[], List)</c> or
            <c>#onServiceDiscoveredWithinRange(PeerHandle, byte[], List, int)</c> will be called.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySessionCallback#onServiceLost(android.net.wifi.aware.PeerHandle,%20int)" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySessionCallback.onServiceLost(android.net.wifi.aware.PeerHandle, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSessionConfigFailed">
      <MemberSignature Language="C#" Value="public virtual void OnSessionConfigFailed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSessionConfigFailed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySessionCallback.OnSessionConfigFailed" />
      <MemberSignature Language="F#" Value="abstract member OnSessionConfigFailed : unit -&gt; unit&#xA;override this.OnSessionConfigFailed : unit -&gt; unit" Usage="discoverySessionCallback.OnSessionConfigFailed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSessionConfigFailed", "()V", "GetOnSessionConfigFailedHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSessionConfigFailed", "()V", "GetOnSessionConfigFailedHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when a publish or subscribe discovery session cannot be created:
            <c>WifiAwareSession#publish(PublishConfig, DiscoverySessionCallback,
            android.os.Handler)</c> or
            <c>WifiAwareSession#subscribe(SubscribeConfig, DiscoverySessionCallback,
            android.os.Handler)</c>, or when a configuration update fails:
            <c>PublishDiscoverySession#updatePublish(PublishConfig)</c> or
            <c>SubscribeDiscoverySession#updateSubscribe(SubscribeConfig)</c>.</summary>
        <remarks>
          <para>Called when a publish or subscribe discovery session cannot be created:
            <c>WifiAwareSession#publish(PublishConfig, DiscoverySessionCallback,
            android.os.Handler)</c> or
            <c>WifiAwareSession#subscribe(SubscribeConfig, DiscoverySessionCallback,
            android.os.Handler)</c>, or when a configuration update fails:
            <c>PublishDiscoverySession#updatePublish(PublishConfig)</c> or
            <c>SubscribeDiscoverySession#updateSubscribe(SubscribeConfig)</c>.</para>
          <para>For discovery session updates failure leaves the session running with its previous
                configuration - the discovery session is not terminated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySessionCallback#onSessionConfigFailed()" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySessionCallback.onSessionConfigFailed()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSessionConfigUpdated">
      <MemberSignature Language="C#" Value="public virtual void OnSessionConfigUpdated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSessionConfigUpdated() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySessionCallback.OnSessionConfigUpdated" />
      <MemberSignature Language="F#" Value="abstract member OnSessionConfigUpdated : unit -&gt; unit&#xA;override this.OnSessionConfigUpdated : unit -&gt; unit" Usage="discoverySessionCallback.OnSessionConfigUpdated " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSessionConfigUpdated", "()V", "GetOnSessionConfigUpdatedHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSessionConfigUpdated", "()V", "GetOnSessionConfigUpdatedHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when a publish or subscribe discovery session configuration update request
            succeeds.</summary>
        <remarks>
          <para>Called when a publish or subscribe discovery session configuration update request
            succeeds. Called in response to
            <c>PublishDiscoverySession#updatePublish(PublishConfig)</c> or
            <c>SubscribeDiscoverySession#updateSubscribe(SubscribeConfig)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySessionCallback#onSessionConfigUpdated()" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySessionCallback.onSessionConfigUpdated()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSessionTerminated">
      <MemberSignature Language="C#" Value="public virtual void OnSessionTerminated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSessionTerminated() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySessionCallback.OnSessionTerminated" />
      <MemberSignature Language="F#" Value="abstract member OnSessionTerminated : unit -&gt; unit&#xA;override this.OnSessionTerminated : unit -&gt; unit" Usage="discoverySessionCallback.OnSessionTerminated " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSessionTerminated", "()V", "GetOnSessionTerminatedHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSessionTerminated", "()V", "GetOnSessionTerminatedHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when a discovery session (publish or subscribe) terminates.</summary>
        <remarks>
          <para>Called when a discovery session (publish or subscribe) terminates. Termination may be due
            to user-request (either directly through <c>DiscoverySession#close()</c> or
            application-specified expiration, e.g. <c>PublishConfig.Builder#setTtlSec(int)</c>
            or <c>SubscribeConfig.Builder#setTtlSec(int)</c>).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySessionCallback#onSessionTerminated()" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySessionCallback.onSessionTerminated()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSubscribeStarted">
      <MemberSignature Language="C#" Value="public virtual void OnSubscribeStarted (Android.Net.Wifi.Aware.SubscribeDiscoverySession session);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSubscribeStarted(class Android.Net.Wifi.Aware.SubscribeDiscoverySession session) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySessionCallback.OnSubscribeStarted(Android.Net.Wifi.Aware.SubscribeDiscoverySession)" />
      <MemberSignature Language="F#" Value="abstract member OnSubscribeStarted : Android.Net.Wifi.Aware.SubscribeDiscoverySession -&gt; unit&#xA;override this.OnSubscribeStarted : Android.Net.Wifi.Aware.SubscribeDiscoverySession -&gt; unit" Usage="discoverySessionCallback.OnSubscribeStarted session" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSubscribeStarted", "(Landroid/net/wifi/aware/SubscribeDiscoverySession;)V", "GetOnSubscribeStarted_Landroid_net_wifi_aware_SubscribeDiscoverySession_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSubscribeStarted", "(Landroid/net/wifi/aware/SubscribeDiscoverySession;)V", "GetOnSubscribeStarted_Landroid_net_wifi_aware_SubscribeDiscoverySession_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="Android.Net.Wifi.Aware.SubscribeDiscoverySession" />
      </Parameters>
      <Docs>
        <param name="session">The <c>SubscribeDiscoverySession</c> used to control the
                       discovery session.</param>
        <summary>Called when a subscribe operation is started successfully in response to a
            <c>WifiAwareSession#subscribe(SubscribeConfig, DiscoverySessionCallback,
            android.os.Handler)</c> operation.</summary>
        <remarks>
          <para>Called when a subscribe operation is started successfully in response to a
            <c>WifiAwareSession#subscribe(SubscribeConfig, DiscoverySessionCallback,
            android.os.Handler)</c> operation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySessionCallback#onSubscribeStarted(android.net.wifi.aware.SubscribeDiscoverySession)" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySessionCallback.onSubscribeStarted(android.net.wifi.aware.SubscribeDiscoverySession)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Net.Wifi.Aware.DiscoverySessionCallback.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Net.Wifi.Aware.DiscoverySessionCallback.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Net.Wifi.Aware.DiscoverySessionCallback.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Net.Wifi.Aware.DiscoverySessionCallback.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
