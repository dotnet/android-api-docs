<Type Name="DiscoverySession" FullName="Android.Net.Wifi.Aware.DiscoverySession">
  <TypeSignature Language="C#" Value="public class DiscoverySession : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.IAutoCloseable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DiscoverySession extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.IAutoCloseable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Net.Wifi.Aware.DiscoverySession" />
  <TypeSignature Language="F#" Value="type DiscoverySession = class&#xA;    inherit Object&#xA;    interface IAutoCloseable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IAutoCloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/net/wifi/aware/DiscoverySession", ApiSince=26, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/net/wifi/aware/DiscoverySession", ApiSince=26, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A class representing a single publish or subscribe Aware session.</summary>
    <remarks>
      <para>A class representing a single publish or subscribe Aware session. This object
            will not be created directly - only its child classes are available:
            <c>PublishDiscoverySession</c> and <c>SubscribeDiscoverySession</c>. This
            class provides functionality common to both publish and subscribe discovery sessions:
            &lt;ul&gt;
                 &lt;li&gt;Sending messages: <c>#sendMessage(PeerHandle, int, byte[])</c> method.
                 &lt;li&gt;Creating a network-specifier when requesting a Aware connection using
                 <c>WifiAwareNetworkSpecifier.Builder</c>.
            &lt;/ul&gt;</para>
      <para>The <c>#close()</c> method must be called to destroy discovery sessions once they are
            no longer needed.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySession" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySession</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DiscoverySession (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySession.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Net.Wifi.Aware.DiscoverySession : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Net.Wifi.Aware.DiscoverySession" Usage="new Android.Net.Wifi.Aware.DiscoverySession (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptPairingRequest">
      <MemberSignature Language="C#" Value="public virtual void AcceptPairingRequest (int requestId, Android.Net.Wifi.Aware.PeerHandle peerHandle, string peerDeviceAlias, Android.Net.Wifi.Aware.WifiAwareCipherSuite cipherSuite, string? password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptPairingRequest(int32 requestId, class Android.Net.Wifi.Aware.PeerHandle peerHandle, string peerDeviceAlias, valuetype Android.Net.Wifi.Aware.WifiAwareCipherSuite cipherSuite, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySession.AcceptPairingRequest(System.Int32,Android.Net.Wifi.Aware.PeerHandle,System.String,Android.Net.Wifi.Aware.WifiAwareCipherSuite,System.String)" />
      <MemberSignature Language="F#" Value="abstract member AcceptPairingRequest : int * Android.Net.Wifi.Aware.PeerHandle * string * Android.Net.Wifi.Aware.WifiAwareCipherSuite * string -&gt; unit&#xA;override this.AcceptPairingRequest : int * Android.Net.Wifi.Aware.PeerHandle * string * Android.Net.Wifi.Aware.WifiAwareCipherSuite * string -&gt; unit" Usage="discoverySession.AcceptPairingRequest (requestId, peerHandle, peerDeviceAlias, cipherSuite, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("acceptPairingRequest", "(ILandroid/net/wifi/aware/PeerHandle;Ljava/lang/String;ILjava/lang/String;)V", "GetAcceptPairingRequest_ILandroid_net_wifi_aware_PeerHandle_Ljava_lang_String_ILjava_lang_String_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("acceptPairingRequest", "(ILandroid/net/wifi/aware/PeerHandle;Ljava/lang/String;ILjava/lang/String;)V", "GetAcceptPairingRequest_ILandroid_net_wifi_aware_PeerHandle_Ljava_lang_String_ILjava_lang_String_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestId" Type="System.Int32" />
        <Parameter Name="peerHandle" Type="Android.Net.Wifi.Aware.PeerHandle" />
        <Parameter Name="peerDeviceAlias" Type="System.String" />
        <Parameter Name="cipherSuite" Type="Android.Net.Wifi.Aware.WifiAwareCipherSuite">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="password" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="requestId">Id to identify the received pairing session, obtained by
                                   <c>DiscoverySessionCallback#onPairingSetupRequestReceived(PeerHandle,
                                   int)</c></param>
        <param name="peerHandle">The peer's handle for the pairing request. Must be a result of a
                                   <c>DiscoverySessionCallback#onServiceDiscovered(ServiceDiscoveryInfo)</c>
                                   or
                                   <c>DiscoverySessionCallback#onMessageReceived(PeerHandle, byte[])</c>
                                   events.</param>
        <param name="peerDeviceAlias">The alias of paired device set by caller, will help caller to identify
                                   the paired device.</param>
        <param name="cipherSuite">The cipher suite to be used to encrypt the link.</param>
        <param name="password">The password is used for the pairing setup. If set to empty or null,
                                   opportunistic pairing will be used.</param>
        <summary>Accept and respond to a Wi-Fi Aware Pairing setup request received from peer.</summary>
        <remarks>
          <para>Accept and respond to a Wi-Fi Aware Pairing setup request received from peer. This is the
            response to the
            <c>DiscoverySessionCallback#onPairingSetupRequestReceived(PeerHandle, int)</c>
            When the Aware Pairing setup is finished, both sides will receive
            <c>DiscoverySessionCallback#onPairingSetupSucceeded(PeerHandle, String)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySession#acceptPairingRequest(int,%20android.net.wifi.aware.PeerHandle,%20java.lang.String,%20int,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySession.acceptPairingRequest(int, android.net.wifi.aware.PeerHandle, java.lang.String, int, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySession.Close" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="discoverySession.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IAutoCloseable.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("close", "()V", "GetCloseHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("close", "()V", "GetCloseHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Destroy the publish or subscribe session - free any resources, and stop
            transmitting packets on-air (for an active session) or listening for
            matches (for a passive session).</summary>
        <remarks>
          <para>Destroy the publish or subscribe session - free any resources, and stop
            transmitting packets on-air (for an active session) or listening for
            matches (for a passive session). The session may not be used for any
            additional operations after its destruction.</para>
          <para>This operation must be done on a session which is no longer needed. Otherwise system
                resources will continue to be utilized until the application exits. The only
                exception is a session for which we received a termination callback,
                <c>DiscoverySessionCallback#onSessionTerminated()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySession#close()" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySession.close()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNetworkSpecifierOpen">
      <MemberSignature Language="C#" Value="public virtual Android.Net.NetworkSpecifier? CreateNetworkSpecifierOpen (Android.Net.Wifi.Aware.PeerHandle peerHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.NetworkSpecifier CreateNetworkSpecifierOpen(class Android.Net.Wifi.Aware.PeerHandle peerHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySession.CreateNetworkSpecifierOpen(Android.Net.Wifi.Aware.PeerHandle)" />
      <MemberSignature Language="F#" Value="abstract member CreateNetworkSpecifierOpen : Android.Net.Wifi.Aware.PeerHandle -&gt; Android.Net.NetworkSpecifier&#xA;override this.CreateNetworkSpecifierOpen : Android.Net.Wifi.Aware.PeerHandle -&gt; Android.Net.NetworkSpecifier" Usage="discoverySession.CreateNetworkSpecifierOpen peerHandle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createNetworkSpecifierOpen", "(Landroid/net/wifi/aware/PeerHandle;)Landroid/net/NetworkSpecifier;", "GetCreateNetworkSpecifierOpen_Landroid_net_wifi_aware_PeerHandle_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createNetworkSpecifierOpen", "(Landroid/net/wifi/aware/PeerHandle;)Landroid/net/NetworkSpecifier;", "GetCreateNetworkSpecifierOpen_Landroid_net_wifi_aware_PeerHandle_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.NetworkSpecifier</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-android-34.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerHandle" Type="Android.Net.Wifi.Aware.PeerHandle" />
      </Parameters>
      <Docs>
        <param name="peerHandle">The peer's handle obtained through
            <c>DiscoverySessionCallback#onServiceDiscovered(PeerHandle, byte[], java.util.List)</c>
                              or
                              <c>DiscoverySessionCallback#onMessageReceived(PeerHandle, byte[])</c>.
                              On a RESPONDER this value is used to gate the acceptance of a connection
                              request from only that peer.</param>
        <summary>Create a <c>android.net.NetworkRequest.Builder#setNetworkSpecifier(NetworkSpecifier)</c> for
            an unencrypted WiFi Aware connection (link) to the specified peer.</summary>
        <returns>A <c>NetworkSpecifier</c> to be used to construct
            <c>android.net.NetworkRequest.Builder#setNetworkSpecifier(NetworkSpecifier)</c> to pass to
            <c>android.net.ConnectivityManager#requestNetwork(android.net.NetworkRequest,
            android.net.ConnectivityManager.NetworkCallback)</c>
            [or other varieties of that API].</returns>
        <remarks>
          <para>Create a <c>android.net.NetworkRequest.Builder#setNetworkSpecifier(NetworkSpecifier)</c> for
            an unencrypted WiFi Aware connection (link) to the specified peer. The
            <c>android.net.NetworkRequest.Builder#addTransportType(int)</c> should be set to
            <c>android.net.NetworkCapabilities#TRANSPORT_WIFI_AWARE</c>.</para>
          <para>This method should be used when setting up a connection with a peer discovered through Aware
            discovery or communication (in such scenarios the MAC address of the peer is shielded by
            an opaque peer ID handle). If an Aware connection is needed to a peer discovered using other
            OOB (out-of-band) mechanism then use the alternative
            <c>WifiAwareSession#createNetworkSpecifierOpen(int, byte[])</c> method - which uses the
            peer's MAC address.</para>
          <para>Note: per the Wi-Fi Aware specification the roles are fixed - a Subscriber is an INITIATOR
            and a Publisher is a RESPONDER.</para>
          <para>To set up an encrypted link use the
            <c>#createNetworkSpecifierPassphrase(PeerHandle, String)</c> API.</para>
          <para>This member is deprecated. Use the replacement <c>WifiAwareNetworkSpecifier.Builder</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySession#createNetworkSpecifierOpen(android.net.wifi.aware.PeerHandle)" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySession.createNetworkSpecifierOpen(android.net.wifi.aware.PeerHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNetworkSpecifierPassphrase">
      <MemberSignature Language="C#" Value="public virtual Android.Net.NetworkSpecifier? CreateNetworkSpecifierPassphrase (Android.Net.Wifi.Aware.PeerHandle peerHandle, string passphrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.NetworkSpecifier CreateNetworkSpecifierPassphrase(class Android.Net.Wifi.Aware.PeerHandle peerHandle, string passphrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySession.CreateNetworkSpecifierPassphrase(Android.Net.Wifi.Aware.PeerHandle,System.String)" />
      <MemberSignature Language="F#" Value="abstract member CreateNetworkSpecifierPassphrase : Android.Net.Wifi.Aware.PeerHandle * string -&gt; Android.Net.NetworkSpecifier&#xA;override this.CreateNetworkSpecifierPassphrase : Android.Net.Wifi.Aware.PeerHandle * string -&gt; Android.Net.NetworkSpecifier" Usage="discoverySession.CreateNetworkSpecifierPassphrase (peerHandle, passphrase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createNetworkSpecifierPassphrase", "(Landroid/net/wifi/aware/PeerHandle;Ljava/lang/String;)Landroid/net/NetworkSpecifier;", "GetCreateNetworkSpecifierPassphrase_Landroid_net_wifi_aware_PeerHandle_Ljava_lang_String_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createNetworkSpecifierPassphrase", "(Landroid/net/wifi/aware/PeerHandle;Ljava/lang/String;)Landroid/net/NetworkSpecifier;", "GetCreateNetworkSpecifierPassphrase_Landroid_net_wifi_aware_PeerHandle_Ljava_lang_String_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.NetworkSpecifier</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-android-34.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerHandle" Type="Android.Net.Wifi.Aware.PeerHandle" />
        <Parameter Name="passphrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="peerHandle">The peer's handle obtained through
            <c>DiscoverySessionCallback#onServiceDiscovered(PeerHandle,
            byte[], java.util.List)</c> or
            <c>DiscoverySessionCallback#onMessageReceived(PeerHandle,
            byte[])</c>. On a RESPONDER this value is used to gate the acceptance of a connection request
                              from only that peer.</param>
        <param name="passphrase">The passphrase to be used to encrypt the link. The PMK is generated from
                              the passphrase. Use the
                              <c>#createNetworkSpecifierOpen(PeerHandle)</c> API to
                              specify an open (unencrypted) link.</param>
        <summary>Create a <c>android.net.NetworkRequest.Builder#setNetworkSpecifier(NetworkSpecifier)</c> for
            an encrypted WiFi Aware connection (link) to the specified peer.</summary>
        <returns>A <c>NetworkSpecifier</c> to be used to construct
            <c>android.net.NetworkRequest.Builder#setNetworkSpecifier(NetworkSpecifier)</c> to pass to
            <c>android.net.ConnectivityManager#requestNetwork(android.net.NetworkRequest,
            android.net.ConnectivityManager.NetworkCallback)</c>
            [or other varieties of that API].</returns>
        <remarks>
          <para>Create a <c>android.net.NetworkRequest.Builder#setNetworkSpecifier(NetworkSpecifier)</c> for
            an encrypted WiFi Aware connection (link) to the specified peer. The
            <c>android.net.NetworkRequest.Builder#addTransportType(int)</c> should be set to
            <c>android.net.NetworkCapabilities#TRANSPORT_WIFI_AWARE</c>.</para>
          <para>This method should be used when setting up a connection with a peer discovered through Aware
            discovery or communication (in such scenarios the MAC address of the peer is shielded by
            an opaque peer ID handle). If an Aware connection is needed to a peer discovered using other
            OOB (out-of-band) mechanism then use the alternative
            <c>WifiAwareSession#createNetworkSpecifierPassphrase(int, byte[], String)</c> method -
            which uses the peer's MAC address.</para>
          <para>Note: per the Wi-Fi Aware specification the roles are fixed - a Subscriber is an INITIATOR
            and a Publisher is a RESPONDER.</para>
          <para>This member is deprecated. Use the replacement <c>WifiAwareNetworkSpecifier.Builder</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySession#createNetworkSpecifierPassphrase(android.net.wifi.aware.PeerHandle,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySession.createNetworkSpecifierPassphrase(android.net.wifi.aware.PeerHandle, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitiateBootstrappingRequest">
      <MemberSignature Language="C#" Value="public virtual void InitiateBootstrappingRequest (Android.Net.Wifi.Aware.PeerHandle peerHandle, Android.Net.Wifi.Aware.AwarePairingBootstrappingMethods method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitiateBootstrappingRequest(class Android.Net.Wifi.Aware.PeerHandle peerHandle, valuetype Android.Net.Wifi.Aware.AwarePairingBootstrappingMethods method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySession.InitiateBootstrappingRequest(Android.Net.Wifi.Aware.PeerHandle,Android.Net.Wifi.Aware.AwarePairingBootstrappingMethods)" />
      <MemberSignature Language="F#" Value="abstract member InitiateBootstrappingRequest : Android.Net.Wifi.Aware.PeerHandle * Android.Net.Wifi.Aware.AwarePairingBootstrappingMethods -&gt; unit&#xA;override this.InitiateBootstrappingRequest : Android.Net.Wifi.Aware.PeerHandle * Android.Net.Wifi.Aware.AwarePairingBootstrappingMethods -&gt; unit" Usage="discoverySession.InitiateBootstrappingRequest (peerHandle, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("initiateBootstrappingRequest", "(Landroid/net/wifi/aware/PeerHandle;I)V", "GetInitiateBootstrappingRequest_Landroid_net_wifi_aware_PeerHandle_IHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("initiateBootstrappingRequest", "(Landroid/net/wifi/aware/PeerHandle;I)V", "GetInitiateBootstrappingRequest_Landroid_net_wifi_aware_PeerHandle_IHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerHandle" Type="Android.Net.Wifi.Aware.PeerHandle" />
        <Parameter Name="method" Type="Android.Net.Wifi.Aware.AwarePairingBootstrappingMethods">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="peerHandle">The peer's handle for the pairing request. Must be a result of an
            <c>DiscoverySessionCallback#onServiceDiscovered(ServiceDiscoveryInfo)</c> or
            <c>DiscoverySessionCallback#onMessageReceived(PeerHandle, byte[])</c> events.</param>
        <param name="method">one of the AwarePairingConfig#PAIRING_BOOTSTRAPPING_ values, should be one of
                          the methods received from <c>ServiceDiscoveryInfo#getPairingConfig()</c><c>AwarePairingConfig#getBootstrappingMethods()</c></param>
        <summary>Initiate a Wi-Fi Aware bootstrapping setup request to create a pairing with the target peer.</summary>
        <remarks>
          <para>Initiate a Wi-Fi Aware bootstrapping setup request to create a pairing with the target peer.
            The Aware bootstrapping request should be done in the context of a discovery session -
            after a publish/subscribe
            <c>DiscoverySessionCallback#onServiceDiscovered(ServiceDiscoveryInfo)</c> event is received.
            The peer will check if the method can be fulfilled by
            <c>AwarePairingConfig.Builder#setBootstrappingMethods(int)</c>
            When the Aware Bootstrapping setup finished, both side will receive
            <c>DiscoverySessionCallback#onBootstrappingSucceeded(PeerHandle, int)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySession#initiateBootstrappingRequest(android.net.wifi.aware.PeerHandle,%20int)" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySession.initiateBootstrappingRequest(android.net.wifi.aware.PeerHandle, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitiatePairingRequest">
      <MemberSignature Language="C#" Value="public virtual void InitiatePairingRequest (Android.Net.Wifi.Aware.PeerHandle peerHandle, string peerDeviceAlias, Android.Net.Wifi.Aware.WifiAwareCipherSuite cipherSuite, string? password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitiatePairingRequest(class Android.Net.Wifi.Aware.PeerHandle peerHandle, string peerDeviceAlias, valuetype Android.Net.Wifi.Aware.WifiAwareCipherSuite cipherSuite, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySession.InitiatePairingRequest(Android.Net.Wifi.Aware.PeerHandle,System.String,Android.Net.Wifi.Aware.WifiAwareCipherSuite,System.String)" />
      <MemberSignature Language="F#" Value="abstract member InitiatePairingRequest : Android.Net.Wifi.Aware.PeerHandle * string * Android.Net.Wifi.Aware.WifiAwareCipherSuite * string -&gt; unit&#xA;override this.InitiatePairingRequest : Android.Net.Wifi.Aware.PeerHandle * string * Android.Net.Wifi.Aware.WifiAwareCipherSuite * string -&gt; unit" Usage="discoverySession.InitiatePairingRequest (peerHandle, peerDeviceAlias, cipherSuite, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("initiatePairingRequest", "(Landroid/net/wifi/aware/PeerHandle;Ljava/lang/String;ILjava/lang/String;)V", "GetInitiatePairingRequest_Landroid_net_wifi_aware_PeerHandle_Ljava_lang_String_ILjava_lang_String_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("initiatePairingRequest", "(Landroid/net/wifi/aware/PeerHandle;Ljava/lang/String;ILjava/lang/String;)V", "GetInitiatePairingRequest_Landroid_net_wifi_aware_PeerHandle_Ljava_lang_String_ILjava_lang_String_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerHandle" Type="Android.Net.Wifi.Aware.PeerHandle" />
        <Parameter Name="peerDeviceAlias" Type="System.String" />
        <Parameter Name="cipherSuite" Type="Android.Net.Wifi.Aware.WifiAwareCipherSuite">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="password" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="peerHandle">The peer's handle for the pairing request. Must be a result of a
                                   <c>DiscoverySessionCallback#onServiceDiscovered(ServiceDiscoveryInfo)</c>
                                   or
                                   <c>DiscoverySessionCallback#onMessageReceived(PeerHandle, byte[])</c>
                                   events.</param>
        <param name="peerDeviceAlias">The alias of paired device set by caller, will help caller to identify
                                   the paired device.</param>
        <param name="cipherSuite">The cipher suite to be used to encrypt the link.</param>
        <param name="password">The password used for the pairing setup. If set to empty or null,
                                   opportunistic pairing will be used.</param>
        <summary>Initiate a Wi-Fi Aware Pairing setup request to create a pairing with the target peer.</summary>
        <remarks>
          <para>Initiate a Wi-Fi Aware Pairing setup request to create a pairing with the target peer.
            The Aware pairing request should be done in the context of a discovery session -
            after a publish/subscribe
            <c>DiscoverySessionCallback#onServiceDiscovered(ServiceDiscoveryInfo)</c> event is received.
            The peer will get a callback indicating a message was received using
            <c>DiscoverySessionCallback#onPairingSetupRequestReceived(PeerHandle, int)</c>.
            When the Aware Pairing setup is finished, both sides will receive
            <c>DiscoverySessionCallback#onPairingSetupSucceeded(PeerHandle, String)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySession#initiatePairingRequest(android.net.wifi.aware.PeerHandle,%20java.lang.String,%20int,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySession.initiatePairingRequest(android.net.wifi.aware.PeerHandle, java.lang.String, int, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Net.Wifi.Aware.DiscoverySession.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Net.Wifi.Aware.DiscoverySession.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RejectPairingRequest">
      <MemberSignature Language="C#" Value="public virtual void RejectPairingRequest (int requestId, Android.Net.Wifi.Aware.PeerHandle peerHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RejectPairingRequest(int32 requestId, class Android.Net.Wifi.Aware.PeerHandle peerHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySession.RejectPairingRequest(System.Int32,Android.Net.Wifi.Aware.PeerHandle)" />
      <MemberSignature Language="F#" Value="abstract member RejectPairingRequest : int * Android.Net.Wifi.Aware.PeerHandle -&gt; unit&#xA;override this.RejectPairingRequest : int * Android.Net.Wifi.Aware.PeerHandle -&gt; unit" Usage="discoverySession.RejectPairingRequest (requestId, peerHandle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("rejectPairingRequest", "(ILandroid/net/wifi/aware/PeerHandle;)V", "GetRejectPairingRequest_ILandroid_net_wifi_aware_PeerHandle_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("rejectPairingRequest", "(ILandroid/net/wifi/aware/PeerHandle;)V", "GetRejectPairingRequest_ILandroid_net_wifi_aware_PeerHandle_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestId" Type="System.Int32" />
        <Parameter Name="peerHandle" Type="Android.Net.Wifi.Aware.PeerHandle" />
      </Parameters>
      <Docs>
        <param name="requestId">Id to identify the received pairing session, get by
                                   <c>DiscoverySessionCallback#onPairingSetupRequestReceived(PeerHandle,
                                   int)</c></param>
        <param name="peerHandle">The peer's handle for the pairing request. Must be a result of a
                                   <c>DiscoverySessionCallback#onServiceDiscovered(ServiceDiscoveryInfo)</c>
                                   or
                                   <c>DiscoverySessionCallback#onMessageReceived(PeerHandle, byte[])</c>
                                   events.</param>
        <summary>Reject a Wi-Fi Aware Pairing setup request received from peer.</summary>
        <remarks>
          <para>Reject a Wi-Fi Aware Pairing setup request received from peer. This is the
            response to the
            <c>DiscoverySessionCallback#onPairingSetupRequestReceived(PeerHandle, int)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySession#rejectPairingRequest(int,%20android.net.wifi.aware.PeerHandle)" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySession.rejectPairingRequest(int, android.net.wifi.aware.PeerHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMessage">
      <MemberSignature Language="C#" Value="public virtual void SendMessage (Android.Net.Wifi.Aware.PeerHandle peerHandle, int messageId, byte[]? message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendMessage(class Android.Net.Wifi.Aware.PeerHandle peerHandle, int32 messageId, unsigned int8[] message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.DiscoverySession.SendMessage(Android.Net.Wifi.Aware.PeerHandle,System.Int32,System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member SendMessage : Android.Net.Wifi.Aware.PeerHandle * int * byte[] -&gt; unit&#xA;override this.SendMessage : Android.Net.Wifi.Aware.PeerHandle * int * byte[] -&gt; unit" Usage="discoverySession.SendMessage (peerHandle, messageId, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendMessage", "(Landroid/net/wifi/aware/PeerHandle;I[B)V", "GetSendMessage_Landroid_net_wifi_aware_PeerHandle_IarrayBHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sendMessage", "(Landroid/net/wifi/aware/PeerHandle;I[B)V", "GetSendMessage_Landroid_net_wifi_aware_PeerHandle_IarrayBHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerHandle" Type="Android.Net.Wifi.Aware.PeerHandle" />
        <Parameter Name="messageId" Type="System.Int32" />
        <Parameter Name="message" Type="System.Byte[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="peerHandle">The peer's handle for the message. Must be a result of an
            <c>DiscoverySessionCallback#onServiceDiscovered(PeerHandle,
            byte[], java.util.List)</c> or
            <c>DiscoverySessionCallback#onMessageReceived(PeerHandle,
            byte[])</c> events.</param>
        <param name="messageId">An arbitrary integer used by the caller to identify the message. The same
                       integer ID will be returned in the callbacks indicating message send success or
                       failure. The <c>messageId</c> is not used internally by the Aware service - it
                             can be arbitrary and non-unique.</param>
        <param name="message">The message to be transmitted.</param>
        <summary>Sends a message to the specified destination.</summary>
        <remarks>
          <para>Sends a message to the specified destination. Aware messages are transmitted in the context
            of a discovery session - executed subsequent to a publish/subscribe
            <c>DiscoverySessionCallback#onServiceDiscovered(PeerHandle,
            byte[], java.util.List)</c> event.</para>
          <para>Aware messages are not guaranteed delivery. Callbacks on
                <c>DiscoverySessionCallback</c> indicate message was transmitted successfully,
                <c>DiscoverySessionCallback#onMessageSendSucceeded(int)</c>, or transmission
                failed (possibly after several retries) -
                <c>DiscoverySessionCallback#onMessageSendFailed(int)</c>.</para>
          <para>The peer will get a callback indicating a message was received using
            <c>DiscoverySessionCallback#onMessageReceived(PeerHandle,
            byte[])</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/DiscoverySession#sendMessage(android.net.wifi.aware.PeerHandle,%20int,%20byte[])" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.DiscoverySession.sendMessage(android.net.wifi.aware.PeerHandle, int, byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Net.Wifi.Aware.DiscoverySession.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Net.Wifi.Aware.DiscoverySession.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Net.Wifi.Aware.DiscoverySession.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Net.Wifi.Aware.DiscoverySession.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
