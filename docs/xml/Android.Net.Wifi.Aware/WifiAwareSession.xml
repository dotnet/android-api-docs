<Type Name="WifiAwareSession" FullName="Android.Net.Wifi.Aware.WifiAwareSession">
  <TypeSignature Language="C#" Value="public class WifiAwareSession : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.IAutoCloseable" FrameworkAlternate="net-android-34.0;net-android-35.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WifiAwareSession extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.IAutoCloseable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Net.Wifi.Aware.WifiAwareSession" />
  <TypeSignature Language="F#" Value="type WifiAwareSession = class&#xA;    inherit Object&#xA;    interface IAutoCloseable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <TypeSignature Language="C#" Value="public class WifiAwareSession : Java.Lang.Object, IDisposable, Java.Lang.IAutoCloseable" FrameworkAlternate="net-android-36.0" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IAutoCloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/net/wifi/aware/WifiAwareSession", ApiSince=26, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/net/wifi/aware/WifiAwareSession", ApiSince=26, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This class represents a Wi-Fi Aware session - an attachment to the Wi-Fi Aware service through
            which the app can execute discovery operations.</summary>
    <remarks>
      <para>This class represents a Wi-Fi Aware session - an attachment to the Wi-Fi Aware service through
            which the app can execute discovery operations.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/net/wifi/aware/WifiAwareSession" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.WifiAwareSession</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WifiAwareSession (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.WifiAwareSession.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Net.Wifi.Aware.WifiAwareSession : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Net.Wifi.Aware.WifiAwareSession" Usage="new Android.Net.Wifi.Aware.WifiAwareSession (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.WifiAwareSession.Close" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="wifiAwareSession.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IAutoCloseable.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("close", "()V", "GetCloseHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("close", "()V", "GetCloseHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Destroy the Wi-Fi Aware service session and, if no other applications are attached to Aware,
            also disable Aware.</summary>
        <remarks>
          <para>Destroy the Wi-Fi Aware service session and, if no other applications are attached to Aware,
            also disable Aware. This method destroys all outstanding operations - i.e. all publish and
            subscribes are terminated, and any outstanding data-links are shut-down. However, it is
            good practice to destroy these discovery sessions and connections explicitly before a
            session-wide destroy.</para>
          <para>An application may re-attach after a destroy using
            <c>WifiAwareManager#attach(AttachCallback, Handler)</c> .</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/WifiAwareSession#close()" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.WifiAwareSession.close()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNetworkSpecifierOpen">
      <MemberSignature Language="C#" Value="public virtual Android.Net.NetworkSpecifier? CreateNetworkSpecifierOpen (Android.Net.Wifi.Aware.WifiAwareDataPathRole role, byte[] peer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.NetworkSpecifier CreateNetworkSpecifierOpen(valuetype Android.Net.Wifi.Aware.WifiAwareDataPathRole role, unsigned int8[] peer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.WifiAwareSession.CreateNetworkSpecifierOpen(Android.Net.Wifi.Aware.WifiAwareDataPathRole,System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member CreateNetworkSpecifierOpen : Android.Net.Wifi.Aware.WifiAwareDataPathRole * byte[] -&gt; Android.Net.NetworkSpecifier&#xA;override this.CreateNetworkSpecifierOpen : Android.Net.Wifi.Aware.WifiAwareDataPathRole * byte[] -&gt; Android.Net.NetworkSpecifier" Usage="wifiAwareSession.CreateNetworkSpecifierOpen (role, peer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createNetworkSpecifierOpen", "(I[B)Landroid/net/NetworkSpecifier;", "GetCreateNetworkSpecifierOpen_IarrayBHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createNetworkSpecifierOpen", "(I[B)Landroid/net/NetworkSpecifier;", "GetCreateNetworkSpecifierOpen_IarrayBHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.NetworkSpecifier</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-android-34.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Android.Net.Wifi.Aware.WifiAwareDataPathRole">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="peer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="role">The role of this device:
                         <c>WifiAwareManager#WIFI_AWARE_DATA_PATH_ROLE_INITIATOR</c> or
                         <c>WifiAwareManager#WIFI_AWARE_DATA_PATH_ROLE_RESPONDER</c></param>
        <param name="peer">The MAC address of the peer's Aware discovery interface. On a RESPONDER this
                         value is used to gate the acceptance of a connection request from only that
                         peer.</param>
        <summary>Create a <c>android.net.NetworkRequest.Builder#setNetworkSpecifier(NetworkSpecifier)</c> for
            an unencrypted WiFi Aware connection (link) to the specified peer.</summary>
        <returns>A <c>NetworkSpecifier</c> to be used to construct
            <c>android.net.NetworkRequest.Builder#setNetworkSpecifier(NetworkSpecifier)</c> to pass to
            <c>android.net.ConnectivityManager#requestNetwork(android.net.NetworkRequest,
            android.net.ConnectivityManager.NetworkCallback)</c>
            [or other varieties of that API].</returns>
        <remarks>
          <para>Create a <c>android.net.NetworkRequest.Builder#setNetworkSpecifier(NetworkSpecifier)</c> for
            an unencrypted WiFi Aware connection (link) to the specified peer. The
            <c>android.net.NetworkRequest.Builder#addTransportType(int)</c> should be set to
            <c>android.net.NetworkCapabilities#TRANSPORT_WIFI_AWARE</c>.</para>
          <para>This API is targeted for applications which can obtain the peer MAC address using OOB
                (out-of-band) discovery. Aware discovery does not provide the MAC address of the peer -
                when using Aware discovery use the alternative network specifier method -
                <c>android.net.wifi.aware.WifiAwareNetworkSpecifier.Builder</c>.</para>
          <para>To set up an encrypted link use the
            <c>#createNetworkSpecifierPassphrase(int, byte[], String)</c> API.</para>
          <para>This member is deprecated. Please use in-band data-path setup, refer to
            <c>WifiAwareNetworkSpecifier.Builder</c>,
            <c>#publish(PublishConfig, DiscoverySessionCallback, Handler)</c> and
            <c>#subscribe(SubscribeConfig, DiscoverySessionCallback, Handler)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/WifiAwareSession#createNetworkSpecifierOpen(int,%20byte[])" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.WifiAwareSession.createNetworkSpecifierOpen(int, byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNetworkSpecifierPassphrase">
      <MemberSignature Language="C#" Value="public virtual Android.Net.NetworkSpecifier? CreateNetworkSpecifierPassphrase (Android.Net.Wifi.Aware.WifiAwareDataPathRole role, byte[] peer, string passphrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.NetworkSpecifier CreateNetworkSpecifierPassphrase(valuetype Android.Net.Wifi.Aware.WifiAwareDataPathRole role, unsigned int8[] peer, string passphrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.WifiAwareSession.CreateNetworkSpecifierPassphrase(Android.Net.Wifi.Aware.WifiAwareDataPathRole,System.Byte[],System.String)" />
      <MemberSignature Language="F#" Value="abstract member CreateNetworkSpecifierPassphrase : Android.Net.Wifi.Aware.WifiAwareDataPathRole * byte[] * string -&gt; Android.Net.NetworkSpecifier&#xA;override this.CreateNetworkSpecifierPassphrase : Android.Net.Wifi.Aware.WifiAwareDataPathRole * byte[] * string -&gt; Android.Net.NetworkSpecifier" Usage="wifiAwareSession.CreateNetworkSpecifierPassphrase (role, peer, passphrase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createNetworkSpecifierPassphrase", "(I[BLjava/lang/String;)Landroid/net/NetworkSpecifier;", "GetCreateNetworkSpecifierPassphrase_IarrayBLjava_lang_String_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createNetworkSpecifierPassphrase", "(I[BLjava/lang/String;)Landroid/net/NetworkSpecifier;", "GetCreateNetworkSpecifierPassphrase_IarrayBLjava_lang_String_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.NetworkSpecifier</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-android-34.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Android.Net.Wifi.Aware.WifiAwareDataPathRole">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="peer" Type="System.Byte[]" />
        <Parameter Name="passphrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">The role of this device:
                         <c>WifiAwareManager#WIFI_AWARE_DATA_PATH_ROLE_INITIATOR</c> or
                         <c>WifiAwareManager#WIFI_AWARE_DATA_PATH_ROLE_RESPONDER</c></param>
        <param name="peer">The MAC address of the peer's Aware discovery interface. On a RESPONDER this
                         value is used to gate the acceptance of a connection request from only that
                         peer.</param>
        <param name="passphrase">The passphrase to be used to encrypt the link. The PMK is generated from
                              the passphrase. Use <c>#createNetworkSpecifierOpen(int, byte[])</c> to
                              specify an open (unencrypted) link.</param>
        <summary>Create a <c>android.net.NetworkRequest.Builder#setNetworkSpecifier(NetworkSpecifier)</c> for
            an encrypted WiFi Aware connection (link) to the specified peer.</summary>
        <returns>A <c>NetworkSpecifier</c> to be used to construct
            <c>android.net.NetworkRequest.Builder#setNetworkSpecifier(NetworkSpecifier)</c> to pass to
            <c>android.net.ConnectivityManager#requestNetwork(android.net.NetworkRequest,
            android.net.ConnectivityManager.NetworkCallback)</c>
            [or other varieties of that API].</returns>
        <remarks>
          <para>Create a <c>android.net.NetworkRequest.Builder#setNetworkSpecifier(NetworkSpecifier)</c> for
            an encrypted WiFi Aware connection (link) to the specified peer. The
            <c>android.net.NetworkRequest.Builder#addTransportType(int)</c> should be set to
            <c>android.net.NetworkCapabilities#TRANSPORT_WIFI_AWARE</c>.</para>
          <para>This API is targeted for applications which can obtain the peer MAC address using OOB
                (out-of-band) discovery. Aware discovery does not provide the MAC address of the peer -
                when using Aware discovery use the alternative network specifier method -
                <c>android.net.wifi.aware.WifiAwareNetworkSpecifier.Builder</c>.</para>
          <para>This member is deprecated. Please use in-band data-path setup, refer to
            <c>WifiAwareNetworkSpecifier.Builder</c>,
            <c>#publish(PublishConfig, DiscoverySessionCallback, Handler)</c> and
            <c>#subscribe(SubscribeConfig, DiscoverySessionCallback, Handler)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/WifiAwareSession#createNetworkSpecifierPassphrase(int,%20byte[],%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.WifiAwareSession.createNetworkSpecifierPassphrase(int, byte[], java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Java.Interop.IJavaPeerable.UnregisterFromRuntime">
      <MemberSignature Language="C#" Value="void IJavaPeerable.UnregisterFromRuntime ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Java.Interop.IJavaPeerable.UnregisterFromRuntime() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.WifiAwareSession.Java#Interop#IJavaPeerable#UnregisterFromRuntime" />
      <MemberSignature Language="F#" Value="abstract member Java.Interop.IJavaPeerable.UnregisterFromRuntime : unit -&gt; unit&#xA;override this.Java.Interop.IJavaPeerable.UnregisterFromRuntime : unit -&gt; unit" Usage="wifiAwareSession.Java.Interop.IJavaPeerable.UnregisterFromRuntime " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Interop.IJavaPeerable.UnregisterFromRuntime</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Net.Wifi.Aware.WifiAwareSession.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Net.Wifi.Aware.WifiAwareSession.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Publish">
      <MemberSignature Language="C#" Value="public virtual void Publish (Android.Net.Wifi.Aware.PublishConfig publishConfig, Android.Net.Wifi.Aware.DiscoverySessionCallback callback, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Publish(class Android.Net.Wifi.Aware.PublishConfig publishConfig, class Android.Net.Wifi.Aware.DiscoverySessionCallback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.WifiAwareSession.Publish(Android.Net.Wifi.Aware.PublishConfig,Android.Net.Wifi.Aware.DiscoverySessionCallback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member Publish : Android.Net.Wifi.Aware.PublishConfig * Android.Net.Wifi.Aware.DiscoverySessionCallback * Android.OS.Handler -&gt; unit&#xA;override this.Publish : Android.Net.Wifi.Aware.PublishConfig * Android.Net.Wifi.Aware.DiscoverySessionCallback * Android.OS.Handler -&gt; unit" Usage="wifiAwareSession.Publish (publishConfig, callback, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("publish", "(Landroid/net/wifi/aware/PublishConfig;Landroid/net/wifi/aware/DiscoverySessionCallback;Landroid/os/Handler;)V", "GetPublish_Landroid_net_wifi_aware_PublishConfig_Landroid_net_wifi_aware_DiscoverySessionCallback_Landroid_os_Handler_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("publish", "(Landroid/net/wifi/aware/PublishConfig;Landroid/net/wifi/aware/DiscoverySessionCallback;Landroid/os/Handler;)V", "GetPublish_Landroid_net_wifi_aware_PublishConfig_Landroid_net_wifi_aware_DiscoverySessionCallback_Landroid_os_Handler_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publishConfig" Type="Android.Net.Wifi.Aware.PublishConfig" />
        <Parameter Name="callback" Type="Android.Net.Wifi.Aware.DiscoverySessionCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="publishConfig">The <c>PublishConfig</c> specifying the
                       configuration of the requested publish session.</param>
        <param name="callback">A <c>DiscoverySessionCallback</c> derived object to be used for
                            session event callbacks.</param>
        <param name="handler">The Handler on whose thread to execute the callbacks of the <c>callback</c> object. If a null is provided then the application's main thread will be used.</param>
        <summary>Issue a request to the Aware service to create a new Aware publish discovery session, using
            the specified <c>publishConfig</c> configuration.</summary>
        <remarks>
          <para>Issue a request to the Aware service to create a new Aware publish discovery session, using
            the specified <c>publishConfig</c> configuration. The results of the publish operation
            are routed to the callbacks of <c>DiscoverySessionCallback</c>:
            &lt;ul&gt;
                &lt;li&gt;
                <c>DiscoverySessionCallback#onPublishStarted(
            PublishDiscoverySession)</c>
                is called when the publish session is created and provides a handle to the session.
                Further operations on the publish session can be executed on that object.
                &lt;li&gt;<c>DiscoverySessionCallback#onSessionConfigFailed()</c> is called if the
                publish operation failed.
            &lt;/ul&gt;</para>
          <para>Other results of the publish session operations will also be routed to callbacks
            on the <c>callback</c> object. The resulting publish session can be modified using
            <c>PublishDiscoverySession#updatePublish(PublishConfig)</c>.</para>
          <para>The total count of currently available Wi-Fi Aware publish sessions is limited and is
            available via the <c>AwareResources#getAvailablePublishSessionsCount()</c> method.</para>
          <para>An application must use the <c>DiscoverySession#close()</c> to
                 terminate the publish discovery session once it isn't needed. This will free
                 resources as well terminate any on-air transmissions.</para>
          <para>If targeting <c>android.os.Build.VERSION_CODES#TIRAMISU</c> or later, the application must
            have <c>android.Manifest.permission#NEARBY_WIFI_DEVICES</c> with
            android:usesPermissionFlags="neverForLocation". If the application does not declare
            android:usesPermissionFlags="neverForLocation", then it must also have
            <c>android.Manifest.permission#ACCESS_FINE_LOCATION</c>.
            
            If targeting an earlier release than <c>android.os.Build.VERSION_CODES#TIRAMISU</c>, the
            application must have <c>android.Manifest.permission#ACCESS_FINE_LOCATION</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/WifiAwareSession#publish(android.net.wifi.aware.PublishConfig,%20android.net.wifi.aware.DiscoverySessionCallback,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.WifiAwareSession.publish(android.net.wifi.aware.PublishConfig, android.net.wifi.aware.DiscoverySessionCallback, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public virtual void Subscribe (Android.Net.Wifi.Aware.SubscribeConfig subscribeConfig, Android.Net.Wifi.Aware.DiscoverySessionCallback callback, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subscribe(class Android.Net.Wifi.Aware.SubscribeConfig subscribeConfig, class Android.Net.Wifi.Aware.DiscoverySessionCallback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Wifi.Aware.WifiAwareSession.Subscribe(Android.Net.Wifi.Aware.SubscribeConfig,Android.Net.Wifi.Aware.DiscoverySessionCallback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member Subscribe : Android.Net.Wifi.Aware.SubscribeConfig * Android.Net.Wifi.Aware.DiscoverySessionCallback * Android.OS.Handler -&gt; unit&#xA;override this.Subscribe : Android.Net.Wifi.Aware.SubscribeConfig * Android.Net.Wifi.Aware.DiscoverySessionCallback * Android.OS.Handler -&gt; unit" Usage="wifiAwareSession.Subscribe (subscribeConfig, callback, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("subscribe", "(Landroid/net/wifi/aware/SubscribeConfig;Landroid/net/wifi/aware/DiscoverySessionCallback;Landroid/os/Handler;)V", "GetSubscribe_Landroid_net_wifi_aware_SubscribeConfig_Landroid_net_wifi_aware_DiscoverySessionCallback_Landroid_os_Handler_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("subscribe", "(Landroid/net/wifi/aware/SubscribeConfig;Landroid/net/wifi/aware/DiscoverySessionCallback;Landroid/os/Handler;)V", "GetSubscribe_Landroid_net_wifi_aware_SubscribeConfig_Landroid_net_wifi_aware_DiscoverySessionCallback_Landroid_os_Handler_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscribeConfig" Type="Android.Net.Wifi.Aware.SubscribeConfig" />
        <Parameter Name="callback" Type="Android.Net.Wifi.Aware.DiscoverySessionCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="subscribeConfig">The <c>SubscribeConfig</c> specifying the
                       configuration of the requested subscribe session.</param>
        <param name="callback">A <c>DiscoverySessionCallback</c> derived object to be used for
                            session event callbacks.</param>
        <param name="handler">The Handler on whose thread to execute the callbacks of the <c>callback</c> object. If a null is provided then the application's main thread will be used.</param>
        <summary>Issue a request to the Aware service to create a new Aware subscribe discovery session, using
            the specified <c>subscribeConfig</c> configuration.</summary>
        <remarks>
          <para>Issue a request to the Aware service to create a new Aware subscribe discovery session, using
            the specified <c>subscribeConfig</c> configuration. The results of the subscribe
            operation are routed to the callbacks of <c>DiscoverySessionCallback</c>:
            &lt;ul&gt;
                &lt;li&gt;
             <c>DiscoverySessionCallback#onSubscribeStarted(
            SubscribeDiscoverySession)</c>
                is called when the subscribe session is created and provides a handle to the session.
                Further operations on the subscribe session can be executed on that object.
                &lt;li&gt;<c>DiscoverySessionCallback#onSessionConfigFailed()</c> is called if the
                subscribe operation failed.
            &lt;/ul&gt;</para>
          <para>Other results of the subscribe session operations will also be routed to callbacks
            on the <c>callback</c> object. The resulting subscribe session can be modified using
            <c>SubscribeDiscoverySession#updateSubscribe(SubscribeConfig)</c>.</para>
          <para>The total count of currently available Wi-Fi Aware subscribe sessions is limited and is
            available via the <c>AwareResources#getAvailableSubscribeSessionsCount()</c> method.</para>
          <para>An application must use the <c>DiscoverySession#close()</c> to
                 terminate the subscribe discovery session once it isn't needed. This will free
                 resources as well terminate any on-air transmissions.</para>
          <para>If targeting <c>android.os.Build.VERSION_CODES#TIRAMISU</c> or later, the application must
            have <c>android.Manifest.permission#NEARBY_WIFI_DEVICES</c> with
            android:usesPermissionFlags="neverForLocation". If the application does not declare
            android:usesPermissionFlags="neverForLocation", then it must also have
            <c>android.Manifest.permission#ACCESS_FINE_LOCATION</c>.
            
            If targeting an earlier release than <c>android.os.Build.VERSION_CODES#TIRAMISU</c>, the
            application must have <c>android.Manifest.permission#ACCESS_FINE_LOCATION</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/wifi/aware/WifiAwareSession#subscribe(android.net.wifi.aware.SubscribeConfig,%20android.net.wifi.aware.DiscoverySessionCallback,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.net.wifi.aware.WifiAwareSession.subscribe(android.net.wifi.aware.SubscribeConfig, android.net.wifi.aware.DiscoverySessionCallback, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Net.Wifi.Aware.WifiAwareSession.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Net.Wifi.Aware.WifiAwareSession.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Net.Wifi.Aware.WifiAwareSession.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Net.Wifi.Aware.WifiAwareSession.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
