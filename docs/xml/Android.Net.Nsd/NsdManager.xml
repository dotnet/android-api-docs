<Type Name="NsdManager" FullName="Android.Net.Nsd.NsdManager">
  <TypeSignature Language="C#" Value="public sealed class NsdManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NsdManager extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Net.Nsd.NsdManager" />
  <TypeSignature Language="F#" Value="type NsdManager = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/net/nsd/NsdManager", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/net/nsd/NsdManager", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="16">
    <summary>The Network Service Discovery Manager class provides the API to discover services
            on a network.</summary>
    <remarks>
      <para>The Network Service Discovery Manager class provides the API to discover services
            on a network. As an example, if device A and device B are connected over a Wi-Fi
            network, a game registered on device A can be discovered by a game on device
            B. Another example use case is an application discovering printers on the network.</para>
      <para>The API currently supports DNS based service discovery and discovery is currently
            limited to a local network over Multicast DNS. DNS service discovery is described at
            http://files.dns-sd.org/draft-cheshire-dnsext-dns-sd.txt</para>
      <para>The API is asynchronous, and responses to requests from an application are on listener
            callbacks on a separate internal thread.</para>
      <para>There are three main operations the API supports - registration, discovery and resolution.</para>
      <code lang="text/java">Application start
                                            |
                                            |
                                            |                  onServiceRegistered()
                                Register any local services  /
                                 to be advertised with       \
                                  registerService()            onRegistrationFailed()
                                            |
                                            |
                                     discoverServices()
                                            |
                                 Maintain a list to track
                                   discovered services
                                            |
                                            |---------&gt;
                                            |          |
                                            |      onServiceFound()
                                            |          |
                                            |     add service to list
                                            |          |
                                            |&lt;----------
                                            |
                                            |---------&gt;
                                            |          |
                                            |      onServiceLost()
                                            |          |
                                            |   remove service from list
                                            |          |
                                            |&lt;----------
                                            |
                                            |
                                            | Connect to a service
                                            | from list ?
                                            |
                                     resolveService()
                                            |
                                    onServiceResolved()
                                            |
                                Establish connection to service
                                with the host and port information
            
            </code>
      <para>An application that needs to advertise itself over a network for other applications to
            discover it can do so with a call to <c>#registerService</c>. If Example is a http based
            application that can provide HTML data to peer services, it can register a name "Example"
            with service type "_http._tcp". A successful registration is notified with a callback to
            <c>RegistrationListener#onServiceRegistered</c> and a failure to register is notified
            over <c>RegistrationListener#onRegistrationFailed</c></para>
      <para>A peer application looking for http services can initiate a discovery for "_http._tcp"
            with a call to <c>#discoverServices</c>. A service found is notified with a callback
            to <c>DiscoveryListener#onServiceFound</c> and a service lost is notified on
            <c>DiscoveryListener#onServiceLost</c>.</para>
      <para>Once the peer application discovers the "Example" http service, and either needs to read the
            attributes of the service or wants to receive data from the "Example" application, it can
            initiate a resolve with <c>#resolveService</c> to resolve the attributes, host, and port
            details. A successful resolve is notified on <c>ResolveListener#onServiceResolved</c> and a
            failure is notified on <c>ResolveListener#onResolveFailed</c>.
            
            Applications can reserve for a service type at
            http://www.iana.org/form/ports-service. Existing services can be found at
            http://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xml</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/net/nsd/NsdManager" title="Reference documentation">Java documentation for <code>android.net.nsd.NsdManager</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 16" />
  </Docs>
  <Members>
    <Member MemberName="ActionNsdStateChanged">
      <MemberSignature Language="C#" Value="public const string ActionNsdStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionNsdStateChanged" />
      <MemberSignature Language="DocId" Value="F:Android.Net.Nsd.NsdManager.ActionNsdStateChanged" />
      <MemberSignature Language="F#" Value="val mutable ActionNsdStateChanged : string" Usage="Android.Net.Nsd.NsdManager.ActionNsdStateChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_NSD_STATE_CHANGED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_NSD_STATE_CHANGED")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-34.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast intent action to indicate whether network service discovery is
            enabled or disabled.</summary>
        <remarks>
          <para>Broadcast intent action to indicate whether network service discovery is
            enabled or disabled. An extra <c>#EXTRA_NSD_STATE</c> provides the state
            information as int.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/nsd/NsdManager#ACTION_NSD_STATE_CHANGED" title="Reference documentation">Java documentation for <code>android.net.nsd.NsdManager.ACTION_NSD_STATE_CHANGED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="F:Android.Net.Nsd.NsdManager.ExtraNsdState" />
      </Docs>
    </Member>
    <Member MemberName="DiscoverServices">
      <MemberSignature Language="C#" Value="public void DiscoverServices (Android.Net.Nsd.DiscoveryRequest discoveryRequest, Java.Util.Concurrent.IExecutor executor, Android.Net.Nsd.NsdManager.IDiscoveryListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DiscoverServices(class Android.Net.Nsd.DiscoveryRequest discoveryRequest, class Java.Util.Concurrent.IExecutor executor, class Android.Net.Nsd.NsdManager/IDiscoveryListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Nsd.NsdManager.DiscoverServices(Android.Net.Nsd.DiscoveryRequest,Java.Util.Concurrent.IExecutor,Android.Net.Nsd.NsdManager.IDiscoveryListener)" />
      <MemberSignature Language="F#" Value="member this.DiscoverServices : Android.Net.Nsd.DiscoveryRequest * Java.Util.Concurrent.IExecutor * Android.Net.Nsd.NsdManager.IDiscoveryListener -&gt; unit" Usage="nsdManager.DiscoverServices (discoveryRequest, executor, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[Android.Runtime.Register("discoverServices", "(Landroid/net/nsd/DiscoveryRequest;Ljava/util/concurrent/Executor;Landroid/net/nsd/NsdManager$DiscoveryListener;)V", "", ApiSince=35)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("discoverServices", "(Landroid/net/nsd/DiscoveryRequest;Ljava/util/concurrent/Executor;Landroid/net/nsd/NsdManager$DiscoveryListener;)V", "", ApiSince=35)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-35.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android35.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android35.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="discoveryRequest" Type="Android.Net.Nsd.DiscoveryRequest" Index="0" FrameworkAlternate="net-android-35.0" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" Index="1" FrameworkAlternate="net-android-35.0" />
        <Parameter Name="listener" Type="Android.Net.Nsd.NsdManager+IDiscoveryListener" Index="2" FrameworkAlternate="net-android-35.0" />
      </Parameters>
      <Docs>
        <param name="discoveryRequest">To be added.</param>
        <param name="executor">To be added.</param>
        <param name="listener">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoverServices">
      <MemberSignature Language="C#" Value="public void DiscoverServices (string? serviceType, Android.Net.Nsd.NsdProtocol protocolType, Android.Net.Nsd.NsdManager.IDiscoveryListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DiscoverServices(string serviceType, valuetype Android.Net.Nsd.NsdProtocol protocolType, class Android.Net.Nsd.NsdManager/IDiscoveryListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Nsd.NsdManager.DiscoverServices(System.String,Android.Net.Nsd.NsdProtocol,Android.Net.Nsd.NsdManager.IDiscoveryListener)" />
      <MemberSignature Language="F#" Value="member this.DiscoverServices : string * Android.Net.Nsd.NsdProtocol * Android.Net.Nsd.NsdManager.IDiscoveryListener -&gt; unit" Usage="nsdManager.DiscoverServices (serviceType, protocolType, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("discoverServices", "(Ljava/lang/String;ILandroid/net/nsd/NsdManager$DiscoveryListener;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("discoverServices", "(Ljava/lang/String;ILandroid/net/nsd/NsdManager$DiscoveryListener;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.String" />
        <Parameter Name="protocolType" Type="Android.Net.Nsd.NsdProtocol">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="listener" Type="Android.Net.Nsd.NsdManager+IDiscoveryListener" />
      </Parameters>
      <Docs>
        <param name="serviceType">The service type being discovered. Examples include "_http._tcp" for
            http services or "_ipp._tcp" for printers</param>
        <param name="protocolType">The service discovery protocol</param>
        <param name="listener">The listener notifies of a successful discovery and is used
            to stop discovery on this serviceType through a call on <c>#stopServiceDiscovery</c>.
            Cannot be null. Cannot be in use for an active service discovery.</param>
        <summary>Initiate service discovery to browse for instances of a service type.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/nsd/NsdManager#discoverServices(java.lang.String,%20int,%20android.net.nsd.DiscoveryListener)" title="Reference documentation">Java documentation for <code>android.net.nsd.NsdManager.discoverServices(java.lang.String, int, android.net.nsd.DiscoveryListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="DiscoverServices">
      <MemberSignature Language="C#" Value="public void DiscoverServices (string serviceType, Android.Net.Nsd.NsdProtocol protocolType, Android.Net.Network? network, Java.Util.Concurrent.IExecutor executor, Android.Net.Nsd.NsdManager.IDiscoveryListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DiscoverServices(string serviceType, valuetype Android.Net.Nsd.NsdProtocol protocolType, class Android.Net.Network network, class Java.Util.Concurrent.IExecutor executor, class Android.Net.Nsd.NsdManager/IDiscoveryListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Nsd.NsdManager.DiscoverServices(System.String,Android.Net.Nsd.NsdProtocol,Android.Net.Network,Java.Util.Concurrent.IExecutor,Android.Net.Nsd.NsdManager.IDiscoveryListener)" />
      <MemberSignature Language="F#" Value="member this.DiscoverServices : string * Android.Net.Nsd.NsdProtocol * Android.Net.Network * Java.Util.Concurrent.IExecutor * Android.Net.Nsd.NsdManager.IDiscoveryListener -&gt; unit" Usage="nsdManager.DiscoverServices (serviceType, protocolType, network, executor, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("discoverServices", "(Ljava/lang/String;ILandroid/net/Network;Ljava/util/concurrent/Executor;Landroid/net/nsd/NsdManager$DiscoveryListener;)V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("discoverServices", "(Ljava/lang/String;ILandroid/net/Network;Ljava/util/concurrent/Executor;Landroid/net/nsd/NsdManager$DiscoveryListener;)V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.String" />
        <Parameter Name="protocolType" Type="Android.Net.Nsd.NsdProtocol">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="network" Type="Android.Net.Network">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="listener" Type="Android.Net.Nsd.NsdManager+IDiscoveryListener" />
      </Parameters>
      <Docs>
        <param name="serviceType">To be added.</param>
        <param name="protocolType">To be added.</param>
        <param name="network">To be added.</param>
        <param name="executor">To be added.</param>
        <param name="listener">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoverServices">
      <MemberSignature Language="C#" Value="public void DiscoverServices (string serviceType, Android.Net.Nsd.NsdProtocol protocolType, Android.Net.NetworkRequest networkRequest, Java.Util.Concurrent.IExecutor executor, Android.Net.Nsd.NsdManager.IDiscoveryListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DiscoverServices(string serviceType, valuetype Android.Net.Nsd.NsdProtocol protocolType, class Android.Net.NetworkRequest networkRequest, class Java.Util.Concurrent.IExecutor executor, class Android.Net.Nsd.NsdManager/IDiscoveryListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Nsd.NsdManager.DiscoverServices(System.String,Android.Net.Nsd.NsdProtocol,Android.Net.NetworkRequest,Java.Util.Concurrent.IExecutor,Android.Net.Nsd.NsdManager.IDiscoveryListener)" />
      <MemberSignature Language="F#" Value="member this.DiscoverServices : string * Android.Net.Nsd.NsdProtocol * Android.Net.NetworkRequest * Java.Util.Concurrent.IExecutor * Android.Net.Nsd.NsdManager.IDiscoveryListener -&gt; unit" Usage="nsdManager.DiscoverServices (serviceType, protocolType, networkRequest, executor, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("discoverServices", "(Ljava/lang/String;ILandroid/net/NetworkRequest;Ljava/util/concurrent/Executor;Landroid/net/nsd/NsdManager$DiscoveryListener;)V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("discoverServices", "(Ljava/lang/String;ILandroid/net/NetworkRequest;Ljava/util/concurrent/Executor;Landroid/net/nsd/NsdManager$DiscoveryListener;)V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.ACCESS_NETWORK_STATE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.ACCESS_NETWORK_STATE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.String" />
        <Parameter Name="protocolType" Type="Android.Net.Nsd.NsdProtocol">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="networkRequest" Type="Android.Net.NetworkRequest" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="listener" Type="Android.Net.Nsd.NsdManager+IDiscoveryListener" />
      </Parameters>
      <Docs>
        <param name="serviceType">To be added.</param>
        <param name="protocolType">To be added.</param>
        <param name="networkRequest">To be added.</param>
        <param name="executor">To be added.</param>
        <param name="listener">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraNsdState">
      <MemberSignature Language="C#" Value="public const string ExtraNsdState;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraNsdState" />
      <MemberSignature Language="DocId" Value="F:Android.Net.Nsd.NsdManager.ExtraNsdState" />
      <MemberSignature Language="F#" Value="val mutable ExtraNsdState : string" Usage="Android.Net.Nsd.NsdManager.ExtraNsdState" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_NSD_STATE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_NSD_STATE")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-34.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The lookup key for an int that indicates whether network service discovery is enabled
            or disabled.</summary>
        <remarks>
          <para>The lookup key for an int that indicates whether network service discovery is enabled
            or disabled. Retrieve it with <c>android.content.Intent#getIntExtra(String,int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/nsd/NsdManager#EXTRA_NSD_STATE" title="Reference documentation">Java documentation for <code>android.net.nsd.NsdManager.EXTRA_NSD_STATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="F:Android.Net.Nsd.NsdManager.NsdStateDisabled" />
        <altmember cref="F:Android.Net.Nsd.NsdManager.NsdStateEnabled" />
      </Docs>
    </Member>
    <Member MemberName="FailureAlreadyActive">
      <MemberSignature Language="C#" Value="public const Android.Net.Nsd.NsdFailure FailureAlreadyActive = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Net.Nsd.NsdFailure FailureAlreadyActive = (3)" />
      <MemberSignature Language="DocId" Value="F:Android.Net.Nsd.NsdManager.FailureAlreadyActive" />
      <MemberSignature Language="F#" Value="val mutable FailureAlreadyActive : Android.Net.Nsd.NsdFailure" Usage="Android.Net.Nsd.NsdManager.FailureAlreadyActive" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FAILURE_ALREADY_ACTIVE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FAILURE_ALREADY_ACTIVE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Net.Nsd.NsdFailure enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Net.Nsd.NsdFailure enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Nsd.NsdFailure</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Indicates that the operation failed because it is already active.</summary>
        <remarks>
          <para>Indicates that the operation failed because it is already active.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/nsd/NsdManager#FAILURE_ALREADY_ACTIVE" title="Reference documentation">Java documentation for <code>android.net.nsd.NsdManager.FAILURE_ALREADY_ACTIVE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="FailureBadParameters">
      <MemberSignature Language="C#" Value="public const Android.Net.Nsd.NsdFailure FailureBadParameters = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Net.Nsd.NsdFailure FailureBadParameters = (6)" />
      <MemberSignature Language="DocId" Value="F:Android.Net.Nsd.NsdManager.FailureBadParameters" />
      <MemberSignature Language="F#" Value="val mutable FailureBadParameters : Android.Net.Nsd.NsdFailure" Usage="Android.Net.Nsd.NsdManager.FailureBadParameters" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FAILURE_BAD_PARAMETERS", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FAILURE_BAD_PARAMETERS", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Net.Nsd.NsdFailure enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Net.Nsd.NsdFailure enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Nsd.NsdFailure</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>Indicates that the service has failed to resolve because of bad parameters.</summary>
        <remarks>
          <para>Indicates that the service has failed to resolve because of bad parameters.
            
            This failure is passed with
            <c>ServiceInfoCallback#onServiceInfoCallbackRegistrationFailed</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/nsd/NsdManager#FAILURE_BAD_PARAMETERS" title="Reference documentation">Java documentation for <code>android.net.nsd.NsdManager.FAILURE_BAD_PARAMETERS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FailureInternalError">
      <MemberSignature Language="C#" Value="public const Android.Net.Nsd.NsdFailure FailureInternalError = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Net.Nsd.NsdFailure FailureInternalError = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Net.Nsd.NsdManager.FailureInternalError" />
      <MemberSignature Language="F#" Value="val mutable FailureInternalError : Android.Net.Nsd.NsdFailure" Usage="Android.Net.Nsd.NsdManager.FailureInternalError" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FAILURE_INTERNAL_ERROR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FAILURE_INTERNAL_ERROR")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Net.Nsd.NsdFailure enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Net.Nsd.NsdFailure enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Nsd.NsdFailure</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Failures are passed with <c>RegistrationListener#onRegistrationFailed</c>,
            <c>RegistrationListener#onUnregistrationFailed</c>,
            <c>DiscoveryListener#onStartDiscoveryFailed</c>,
            <c>DiscoveryListener#onStopDiscoveryFailed</c> or <c>ResolveListener#onResolveFailed</c>.</summary>
        <remarks>
          <para>Failures are passed with <c>RegistrationListener#onRegistrationFailed</c>,
            <c>RegistrationListener#onUnregistrationFailed</c>,
            <c>DiscoveryListener#onStartDiscoveryFailed</c>,
            <c>DiscoveryListener#onStopDiscoveryFailed</c> or <c>ResolveListener#onResolveFailed</c>.
            
            Indicates that the operation failed due to an internal error.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/nsd/NsdManager#FAILURE_INTERNAL_ERROR" title="Reference documentation">Java documentation for <code>android.net.nsd.NsdManager.FAILURE_INTERNAL_ERROR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="FailureMaxLimit">
      <MemberSignature Language="C#" Value="public const Android.Net.Nsd.NsdFailure FailureMaxLimit = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Net.Nsd.NsdFailure FailureMaxLimit = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.Net.Nsd.NsdManager.FailureMaxLimit" />
      <MemberSignature Language="F#" Value="val mutable FailureMaxLimit : Android.Net.Nsd.NsdFailure" Usage="Android.Net.Nsd.NsdManager.FailureMaxLimit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FAILURE_MAX_LIMIT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FAILURE_MAX_LIMIT")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Net.Nsd.NsdFailure enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Net.Nsd.NsdFailure enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Nsd.NsdFailure</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Indicates that the operation failed because the maximum outstanding
            requests from the applications have reached.</summary>
        <remarks>
          <para>Indicates that the operation failed because the maximum outstanding
            requests from the applications have reached.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/nsd/NsdManager#FAILURE_MAX_LIMIT" title="Reference documentation">Java documentation for <code>android.net.nsd.NsdManager.FAILURE_MAX_LIMIT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="FailureOperationNotRunning">
      <MemberSignature Language="C#" Value="public const Android.Net.Nsd.NsdFailure FailureOperationNotRunning = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Net.Nsd.NsdFailure FailureOperationNotRunning = (5)" />
      <MemberSignature Language="DocId" Value="F:Android.Net.Nsd.NsdManager.FailureOperationNotRunning" />
      <MemberSignature Language="F#" Value="val mutable FailureOperationNotRunning : Android.Net.Nsd.NsdFailure" Usage="Android.Net.Nsd.NsdManager.FailureOperationNotRunning" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FAILURE_OPERATION_NOT_RUNNING", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FAILURE_OPERATION_NOT_RUNNING", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Net.Nsd.NsdFailure enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Net.Nsd.NsdFailure enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Nsd.NsdFailure</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>Indicates that the stop operation failed because it is not running.</summary>
        <remarks>
          <para>Indicates that the stop operation failed because it is not running.
            This failure is passed with <c>ResolveListener#onStopResolutionFailed</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/nsd/NsdManager#FAILURE_OPERATION_NOT_RUNNING" title="Reference documentation">Java documentation for <code>android.net.nsd.NsdManager.FAILURE_OPERATION_NOT_RUNNING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Net.Nsd.NsdManager.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Net.Nsd.NsdManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-34.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NsdStateDisabled">
      <MemberSignature Language="C#" Value="public const int NsdStateDisabled = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 NsdStateDisabled = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Net.Nsd.NsdManager.NsdStateDisabled" />
      <MemberSignature Language="F#" Value="val mutable NsdStateDisabled : int" Usage="Android.Net.Nsd.NsdManager.NsdStateDisabled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("NSD_STATE_DISABLED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("NSD_STATE_DISABLED")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Network service discovery is disabled</summary>
        <remarks>
          <para>Network service discovery is disabled</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/nsd/NsdManager#NSD_STATE_DISABLED" title="Reference documentation">Java documentation for <code>android.net.nsd.NsdManager.NSD_STATE_DISABLED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="F:Android.Net.Nsd.NsdManager.ActionNsdStateChanged" />
      </Docs>
    </Member>
    <Member MemberName="NsdStateEnabled">
      <MemberSignature Language="C#" Value="public const int NsdStateEnabled = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 NsdStateEnabled = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Net.Nsd.NsdManager.NsdStateEnabled" />
      <MemberSignature Language="F#" Value="val mutable NsdStateEnabled : int" Usage="Android.Net.Nsd.NsdManager.NsdStateEnabled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("NSD_STATE_ENABLED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("NSD_STATE_ENABLED")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Network service discovery is enabled</summary>
        <remarks>
          <para>Network service discovery is enabled</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/nsd/NsdManager#NSD_STATE_ENABLED" title="Reference documentation">Java documentation for <code>android.net.nsd.NsdManager.NSD_STATE_ENABLED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="F:Android.Net.Nsd.NsdManager.ActionNsdStateChanged" />
      </Docs>
    </Member>
    <Member MemberName="ProtocolDnsSd">
      <MemberSignature Language="C#" Value="public const Android.Net.Nsd.NsdProtocol ProtocolDnsSd = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Net.Nsd.NsdProtocol ProtocolDnsSd = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Net.Nsd.NsdManager.ProtocolDnsSd" />
      <MemberSignature Language="F#" Value="val mutable ProtocolDnsSd : Android.Net.Nsd.NsdProtocol" Usage="Android.Net.Nsd.NsdManager.ProtocolDnsSd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROTOCOL_DNS_SD")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROTOCOL_DNS_SD")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Net.Nsd.NsdProtocol enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Net.Nsd.NsdProtocol enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Nsd.NsdProtocol</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Dns based service discovery protocol</summary>
        <remarks>
          <para>Dns based service discovery protocol</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/nsd/NsdManager#PROTOCOL_DNS_SD" title="Reference documentation">Java documentation for <code>android.net.nsd.NsdManager.PROTOCOL_DNS_SD</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="RegisterService">
      <MemberSignature Language="C#" Value="public void RegisterService (Android.Net.Nsd.NsdServiceInfo? serviceInfo, Android.Net.Nsd.NsdProtocol protocolType, Android.Net.Nsd.NsdManager.IRegistrationListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterService(class Android.Net.Nsd.NsdServiceInfo serviceInfo, valuetype Android.Net.Nsd.NsdProtocol protocolType, class Android.Net.Nsd.NsdManager/IRegistrationListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Nsd.NsdManager.RegisterService(Android.Net.Nsd.NsdServiceInfo,Android.Net.Nsd.NsdProtocol,Android.Net.Nsd.NsdManager.IRegistrationListener)" />
      <MemberSignature Language="F#" Value="member this.RegisterService : Android.Net.Nsd.NsdServiceInfo * Android.Net.Nsd.NsdProtocol * Android.Net.Nsd.NsdManager.IRegistrationListener -&gt; unit" Usage="nsdManager.RegisterService (serviceInfo, protocolType, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerService", "(Landroid/net/nsd/NsdServiceInfo;ILandroid/net/nsd/NsdManager$RegistrationListener;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerService", "(Landroid/net/nsd/NsdServiceInfo;ILandroid/net/nsd/NsdManager$RegistrationListener;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceInfo" Type="Android.Net.Nsd.NsdServiceInfo" />
        <Parameter Name="protocolType" Type="Android.Net.Nsd.NsdProtocol">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="listener" Type="Android.Net.Nsd.NsdManager+IRegistrationListener" />
      </Parameters>
      <Docs>
        <param name="serviceInfo">The service being registered</param>
        <param name="protocolType">The service discovery protocol</param>
        <param name="listener">The listener notifies of a successful registration and is used to
            unregister this service through a call on <c>#unregisterService</c>. Cannot be null.
            Cannot be in use for an active service registration.</param>
        <summary>Register a service to be discovered by other services.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/nsd/NsdManager#registerService(android.net.nsd.NsdServiceInfo,%20int,%20android.net.nsd.RegistrationListener)" title="Reference documentation">Java documentation for <code>android.net.nsd.NsdManager.registerService(android.net.nsd.NsdServiceInfo, int, android.net.nsd.RegistrationListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="RegisterService">
      <MemberSignature Language="C#" Value="public void RegisterService (Android.Net.Nsd.NsdServiceInfo serviceInfo, Android.Net.Nsd.NsdProtocol protocolType, Java.Util.Concurrent.IExecutor executor, Android.Net.Nsd.NsdManager.IRegistrationListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterService(class Android.Net.Nsd.NsdServiceInfo serviceInfo, valuetype Android.Net.Nsd.NsdProtocol protocolType, class Java.Util.Concurrent.IExecutor executor, class Android.Net.Nsd.NsdManager/IRegistrationListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Nsd.NsdManager.RegisterService(Android.Net.Nsd.NsdServiceInfo,Android.Net.Nsd.NsdProtocol,Java.Util.Concurrent.IExecutor,Android.Net.Nsd.NsdManager.IRegistrationListener)" />
      <MemberSignature Language="F#" Value="member this.RegisterService : Android.Net.Nsd.NsdServiceInfo * Android.Net.Nsd.NsdProtocol * Java.Util.Concurrent.IExecutor * Android.Net.Nsd.NsdManager.IRegistrationListener -&gt; unit" Usage="nsdManager.RegisterService (serviceInfo, protocolType, executor, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerService", "(Landroid/net/nsd/NsdServiceInfo;ILjava/util/concurrent/Executor;Landroid/net/nsd/NsdManager$RegistrationListener;)V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerService", "(Landroid/net/nsd/NsdServiceInfo;ILjava/util/concurrent/Executor;Landroid/net/nsd/NsdManager$RegistrationListener;)V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceInfo" Type="Android.Net.Nsd.NsdServiceInfo" />
        <Parameter Name="protocolType" Type="Android.Net.Nsd.NsdProtocol">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="listener" Type="Android.Net.Nsd.NsdManager+IRegistrationListener" />
      </Parameters>
      <Docs>
        <param name="serviceInfo">To be added.</param>
        <param name="protocolType">To be added.</param>
        <param name="executor">To be added.</param>
        <param name="listener">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterServiceInfoCallback">
      <MemberSignature Language="C#" Value="public void RegisterServiceInfoCallback (Android.Net.Nsd.NsdServiceInfo serviceInfo, Java.Util.Concurrent.IExecutor executor, Android.Net.Nsd.NsdManager.IServiceInfoCallback listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterServiceInfoCallback(class Android.Net.Nsd.NsdServiceInfo serviceInfo, class Java.Util.Concurrent.IExecutor executor, class Android.Net.Nsd.NsdManager/IServiceInfoCallback listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Nsd.NsdManager.RegisterServiceInfoCallback(Android.Net.Nsd.NsdServiceInfo,Java.Util.Concurrent.IExecutor,Android.Net.Nsd.NsdManager.IServiceInfoCallback)" />
      <MemberSignature Language="F#" Value="member this.RegisterServiceInfoCallback : Android.Net.Nsd.NsdServiceInfo * Java.Util.Concurrent.IExecutor * Android.Net.Nsd.NsdManager.IServiceInfoCallback -&gt; unit" Usage="nsdManager.RegisterServiceInfoCallback (serviceInfo, executor, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerServiceInfoCallback", "(Landroid/net/nsd/NsdServiceInfo;Ljava/util/concurrent/Executor;Landroid/net/nsd/NsdManager$ServiceInfoCallback;)V", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerServiceInfoCallback", "(Landroid/net/nsd/NsdServiceInfo;Ljava/util/concurrent/Executor;Landroid/net/nsd/NsdManager$ServiceInfoCallback;)V", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceInfo" Type="Android.Net.Nsd.NsdServiceInfo" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="listener" Type="Android.Net.Nsd.NsdManager+IServiceInfoCallback" />
      </Parameters>
      <Docs>
        <param name="serviceInfo">To be added.</param>
        <param name="executor">To be added.</param>
        <param name="listener">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveService">
      <MemberSignature Language="C#" Value="public void ResolveService (Android.Net.Nsd.NsdServiceInfo? serviceInfo, Android.Net.Nsd.NsdManager.IResolveListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveService(class Android.Net.Nsd.NsdServiceInfo serviceInfo, class Android.Net.Nsd.NsdManager/IResolveListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Nsd.NsdManager.ResolveService(Android.Net.Nsd.NsdServiceInfo,Android.Net.Nsd.NsdManager.IResolveListener)" />
      <MemberSignature Language="F#" Value="member this.ResolveService : Android.Net.Nsd.NsdServiceInfo * Android.Net.Nsd.NsdManager.IResolveListener -&gt; unit" Usage="nsdManager.ResolveService (serviceInfo, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resolveService", "(Landroid/net/nsd/NsdServiceInfo;Landroid/net/nsd/NsdManager$ResolveListener;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resolveService", "(Landroid/net/nsd/NsdServiceInfo;Landroid/net/nsd/NsdManager$ResolveListener;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceInfo" Type="Android.Net.Nsd.NsdServiceInfo" />
        <Parameter Name="listener" Type="Android.Net.Nsd.NsdManager+IResolveListener" />
      </Parameters>
      <Docs>
        <param name="serviceInfo">service to be resolved</param>
        <param name="listener">to receive callback upon success or failure. Cannot be null.
            Cannot be in use for an active service resolution.</param>
        <summary>Resolve a discovered service.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/net/nsd/NsdManager#resolveService(android.net.nsd.NsdServiceInfo,%20android.net.nsd.ResolveListener)" title="Reference documentation">Java documentation for <code>android.net.nsd.NsdManager.resolveService(android.net.nsd.NsdServiceInfo, android.net.nsd.ResolveListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ResolveService">
      <MemberSignature Language="C#" Value="public void ResolveService (Android.Net.Nsd.NsdServiceInfo serviceInfo, Java.Util.Concurrent.IExecutor executor, Android.Net.Nsd.NsdManager.IResolveListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveService(class Android.Net.Nsd.NsdServiceInfo serviceInfo, class Java.Util.Concurrent.IExecutor executor, class Android.Net.Nsd.NsdManager/IResolveListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Nsd.NsdManager.ResolveService(Android.Net.Nsd.NsdServiceInfo,Java.Util.Concurrent.IExecutor,Android.Net.Nsd.NsdManager.IResolveListener)" />
      <MemberSignature Language="F#" Value="member this.ResolveService : Android.Net.Nsd.NsdServiceInfo * Java.Util.Concurrent.IExecutor * Android.Net.Nsd.NsdManager.IResolveListener -&gt; unit" Usage="nsdManager.ResolveService (serviceInfo, executor, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resolveService", "(Landroid/net/nsd/NsdServiceInfo;Ljava/util/concurrent/Executor;Landroid/net/nsd/NsdManager$ResolveListener;)V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resolveService", "(Landroid/net/nsd/NsdServiceInfo;Ljava/util/concurrent/Executor;Landroid/net/nsd/NsdManager$ResolveListener;)V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceInfo" Type="Android.Net.Nsd.NsdServiceInfo" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="listener" Type="Android.Net.Nsd.NsdManager+IResolveListener" />
      </Parameters>
      <Docs>
        <param name="serviceInfo">To be added.</param>
        <param name="executor">To be added.</param>
        <param name="listener">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopServiceDiscovery">
      <MemberSignature Language="C#" Value="public void StopServiceDiscovery (Android.Net.Nsd.NsdManager.IDiscoveryListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopServiceDiscovery(class Android.Net.Nsd.NsdManager/IDiscoveryListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Nsd.NsdManager.StopServiceDiscovery(Android.Net.Nsd.NsdManager.IDiscoveryListener)" />
      <MemberSignature Language="F#" Value="member this.StopServiceDiscovery : Android.Net.Nsd.NsdManager.IDiscoveryListener -&gt; unit" Usage="nsdManager.StopServiceDiscovery listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stopServiceDiscovery", "(Landroid/net/nsd/NsdManager$DiscoveryListener;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stopServiceDiscovery", "(Landroid/net/nsd/NsdManager$DiscoveryListener;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Net.Nsd.NsdManager+IDiscoveryListener" />
      </Parameters>
      <Docs>
        <param name="listener">This should be the listener object that was passed to <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android Net Nsd NsdManager DiscoverServices(System String,Android Net Nsd NsdProtocol,Android Net Nsd NsdProtocol)';scope=Xamarin" title="M:Android.Net.Nsd.NsdManager.DiscoverServices(System.String,Android.Net.Nsd.NsdProtocol,Android.Net.Nsd.NsdProtocol)">M:Android.Net.Nsd.NsdManager.DiscoverServices(System.String,Android.Net.Nsd.NsdProtocol,Android.Net.Nsd.NsdProtocol)</a></format>.
 It identifies the discovery that should be stopped and notifies of a successful or
 unsuccessful stop.  In API versions 20 and above, the listener object may be used for
 another service discovery once the callback has been called.  In API versions &lt;= 19,
 there is no entirely reliable way to know when a listener may be re-used, and a new
 listener should be created for each service discovery request.
</param>
        <summary>Stop service discovery initiated with <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android Net Nsd NsdManager DiscoverServices(System String,Android Net Nsd NsdProtocol,Android Net Nsd NsdProtocol)';scope=Xamarin" title="M:Android.Net.Nsd.NsdManager.DiscoverServices(System.String,Android.Net.Nsd.NsdProtocol,Android.Net.Nsd.NsdProtocol)">M:Android.Net.Nsd.NsdManager.DiscoverServices(System.String,Android.Net.Nsd.NsdProtocol,Android.Net.Nsd.NsdProtocol)</a></format>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="StopServiceResolution">
      <MemberSignature Language="C#" Value="public void StopServiceResolution (Android.Net.Nsd.NsdManager.IResolveListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopServiceResolution(class Android.Net.Nsd.NsdManager/IResolveListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Nsd.NsdManager.StopServiceResolution(Android.Net.Nsd.NsdManager.IResolveListener)" />
      <MemberSignature Language="F#" Value="member this.StopServiceResolution : Android.Net.Nsd.NsdManager.IResolveListener -&gt; unit" Usage="nsdManager.StopServiceResolution listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stopServiceResolution", "(Landroid/net/nsd/NsdManager$ResolveListener;)V", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stopServiceResolution", "(Landroid/net/nsd/NsdManager$ResolveListener;)V", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Net.Nsd.NsdManager+IResolveListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Net.Nsd.NsdManager.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Net.Nsd.NsdManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Net.Nsd.NsdManager.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Net.Nsd.NsdManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-android-34.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterService">
      <MemberSignature Language="C#" Value="public void UnregisterService (Android.Net.Nsd.NsdManager.IRegistrationListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterService(class Android.Net.Nsd.NsdManager/IRegistrationListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Nsd.NsdManager.UnregisterService(Android.Net.Nsd.NsdManager.IRegistrationListener)" />
      <MemberSignature Language="F#" Value="member this.UnregisterService : Android.Net.Nsd.NsdManager.IRegistrationListener -&gt; unit" Usage="nsdManager.UnregisterService listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterService", "(Landroid/net/nsd/NsdManager$RegistrationListener;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterService", "(Landroid/net/nsd/NsdManager$RegistrationListener;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Net.Nsd.NsdManager+IRegistrationListener" />
      </Parameters>
      <Docs>
        <param name="listener">This should be the listener object that was passed to
 <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android Net Nsd NsdManager RegisterService(Android Net Nsd NsdServiceInfo,Android Net Nsd NsdProtocol,Android Net Nsd NsdProtocol)';scope=Xamarin" title="M:Android.Net.Nsd.NsdManager.RegisterService(Android.Net.Nsd.NsdServiceInfo,Android.Net.Nsd.NsdProtocol,Android.Net.Nsd.NsdProtocol)">M:Android.Net.Nsd.NsdManager.RegisterService(Android.Net.Nsd.NsdServiceInfo,Android.Net.Nsd.NsdProtocol,Android.Net.Nsd.NsdProtocol)</a></format>. It identifies the service that should be unregistered
 and notifies of a successful or unsuccessful unregistration via the listener
 callbacks.  In API versions 20 and above, the listener object may be used for
 another service registration once the callback has been called.  In API versions &lt;= 19,
 there is no entirely reliable way to know when a listener may be re-used, and a new
 listener should be created for each service registration request.
</param>
        <summary>Unregister a service registered through <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android Net Nsd NsdManager RegisterService(Android Net Nsd NsdServiceInfo,Android Net Nsd NsdProtocol,Android Net Nsd NsdProtocol)';scope=Xamarin" title="M:Android.Net.Nsd.NsdManager.RegisterService(Android.Net.Nsd.NsdServiceInfo,Android.Net.Nsd.NsdProtocol,Android.Net.Nsd.NsdProtocol)">M:Android.Net.Nsd.NsdManager.RegisterService(Android.Net.Nsd.NsdServiceInfo,Android.Net.Nsd.NsdProtocol,Android.Net.Nsd.NsdProtocol)</a></format>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterServiceInfoCallback">
      <MemberSignature Language="C#" Value="public void UnregisterServiceInfoCallback (Android.Net.Nsd.NsdManager.IServiceInfoCallback listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterServiceInfoCallback(class Android.Net.Nsd.NsdManager/IServiceInfoCallback listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Net.Nsd.NsdManager.UnregisterServiceInfoCallback(Android.Net.Nsd.NsdManager.IServiceInfoCallback)" />
      <MemberSignature Language="F#" Value="member this.UnregisterServiceInfoCallback : Android.Net.Nsd.NsdManager.IServiceInfoCallback -&gt; unit" Usage="nsdManager.UnregisterServiceInfoCallback listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterServiceInfoCallback", "(Landroid/net/nsd/NsdManager$ServiceInfoCallback;)V", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterServiceInfoCallback", "(Landroid/net/nsd/NsdManager$ServiceInfoCallback;)V", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Net.Nsd.NsdManager+IServiceInfoCallback" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
